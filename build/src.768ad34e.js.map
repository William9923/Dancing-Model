{"version":3,"sources":["src/SliderManager.ts","src/util/vector.ts","src/util/convert.ts","src/util/matrix.ts","src/scene/webglWrapper.ts","src/object/node/node.ts","src/object/node/index.ts","src/util/drawMode.ts","src/object/utils/util.ts","src/object/utils/cubePoints.ts","src/object/cubeman/parts/stomach.ts","src/object/cubeman/parts/chest.ts","src/object/cubeman/parts/head.ts","src/object/cubeman/parts/leftleg.ts","src/object/cubeman/parts/rightleg.ts","src/object/cubeman/parts/rightear.ts","src/object/cubeman/parts/leftear.ts","src/object/cubeman/parts/leftarm.ts","src/object/cubeman/parts/rightarm.ts","src/object/cubeman/parts/leftshoulder.ts","src/object/cubeman/parts/rightshoulder.ts","src/object/cubeman/parts/lefthip.ts","src/object/cubeman/parts/righthip.ts","src/object/cubeman/parts/index.ts","src/object/cubeman/main.ts","src/object/cubeman/index.ts","src/object/knight/parts/head.ts","src/object/knight/parts/hip.ts","src/object/knight/parts/chest.ts","src/object/knight/parts/shield.ts","src/object/knight/parts/sword.ts","src/object/knight/parts/leftUpperArm.ts","src/object/knight/parts/leftLowerArm.ts","src/object/knight/parts/rightUpperArm.ts","src/object/knight/parts/rightLowerArm.ts","src/object/knight/parts/leftUpperLeg.ts","src/object/knight/parts/leftLowerLeg.ts","src/object/knight/parts/rightUpperLeg.ts","src/object/knight/parts/rightLowerLeg.ts","src/object/knight/parts/index.ts","src/object/knight/knight.ts","src/object/knight/index.ts","src/object/cow/parts/body.ts","src/object/cow/parts/head.ts","src/object/cow/parts/leftbackleg.ts","src/object/cow/parts/rightbackleg.ts","src/object/cow/parts/leftfrontleg.ts","src/object/cow/parts/rightfrontleg.ts","src/object/cow/parts/index.ts","src/object/cow/cow.ts","src/object/cow/index.ts","src/app.ts","src/camera/camera.ts","src/camera/index.ts","src/light/light.ts","src/light/index.ts","src/scene/scene.ts","src/scene/index.ts","src/object/cubeman/animation/animation.ts","src/object/cubeman/animation/mirrormanAnimation.ts","src/object/cubeman/animation/danceAnimation.ts","src/object/cubeman/animation/jumpingAnimation.ts","src/object/cubeman/animation/walkingAnimation.ts","src/object/cubeman/animation/index.ts","src/object/knight/animation/knightAnimation.ts","src/object/knight/animation/onGuardKnightAnimation.ts","src/object/knight/animation/slashKnightAnimation.ts","src/object/knight/animation/danceKnightAnimation.ts","src/object/knight/animation/index.ts","src/object/cow/animation/cowAnimation.ts","src/object/cow/animation/walkCowAnimation.ts","src/index.ts"],"names":[],"mappings":"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","file":"src.768ad34e.js","sourceRoot":"..","sourcesContent":["type SliderId =\r\n  // Default Slider\r\n  | \"x\"\r\n  | \"y\"\r\n  | \"z\"\r\n  | \"rotate-x\"\r\n  | \"rotate-y\"\r\n  | \"rotate-z\"\r\n\r\n  // Camera Slider\r\n  | \"zoom\"\r\n  | \"cam-radius\"\r\n  | \"cam-theta\"\r\n  | \"cam-phi\"\r\n\r\n  // Mirror Man Slider\r\n  | \"ls-slider\"\r\n  | \"rs-slider\"\r\n  | \"lh-slider\"\r\n  | \"rh-slider\"\r\n  | \"head-slider\"\r\n  | \"la-slider\"\r\n  | \"ra-slider\"\r\n  | \"ll-slider\"\r\n  | \"rl-slider\"\r\n\r\n  // Knight Slider\r\n  | \"k-head-slider\"\r\n  | \"k-chest-slider\"\r\n  | \"k-hip-slider\"\r\n  | \"k-lua-x-slider\"\r\n  | \"k-lua-y-slider\"\r\n  | \"k-lua-z-slider\"\r\n  | \"k-bend-lla-slider\"\r\n  | \"k-twist-lla-slider\"\r\n  | \"k-rua-x-slider\"\r\n  | \"k-rua-y-slider\"\r\n  | \"k-rua-z-slider\"\r\n  | \"k-bend-rla-slider\"\r\n  | \"k-twist-rla-slider\"\r\n  | \"k-lul-x-slider\"\r\n  | \"k-lul-z-slider\"\r\n  | \"k-bend-lll-slider\"\r\n  | \"k-rul-x-slider\"\r\n  | \"k-rul-z-slider\"\r\n  | \"k-bend-rll-slider\"\r\n\r\n  // Cow Slider\r\n  | \"cow-head-slider\"\r\n  | \"cow-body-slider\"\r\n  | \"cow-lfl-slider\"\r\n  | \"cow-rfl-slider\"\r\n  | \"cow-lbl-slider\"\r\n  | \"cow-rbl-slider\"\r\n  ;\r\n\r\nconst sliderIds: SliderId[] = [\r\n  \"head-slider\",\r\n  \"ls-slider\",\r\n  \"rs-slider\",\r\n  \"lh-slider\",\r\n  \"rh-slider\",\r\n  \"la-slider\",\r\n  \"ra-slider\",\r\n  \"ll-slider\",\r\n  \"rl-slider\",\r\n  \"k-head-slider\",\r\n  \"k-chest-slider\",\r\n  \"k-hip-slider\",\r\n  \"k-lua-x-slider\",\r\n  \"k-lua-y-slider\",\r\n  \"k-lua-z-slider\",\r\n  \"k-bend-lla-slider\",\r\n  \"k-twist-lla-slider\",\r\n  \"k-rua-x-slider\",\r\n  \"k-rua-y-slider\",\r\n  \"k-rua-z-slider\",\r\n  \"k-bend-rla-slider\",\r\n  \"k-twist-rla-slider\",\r\n  \"k-lul-x-slider\",\r\n  \"k-lul-z-slider\",\r\n  \"k-bend-lll-slider\",\r\n  \"k-rul-x-slider\",\r\n  \"k-rul-z-slider\",\r\n  \"k-bend-rll-slider\",\r\n  \"cow-head-slider\",\r\n  \"cow-body-slider\",\r\n  \"cow-lfl-slider\",\r\n  \"cow-rfl-slider\",\r\n  \"cow-lbl-slider\",\r\n  \"cow-rbl-slider\",\r\n  \"cam-radius\",\r\n  \"cam-theta\",\r\n  \"cam-phi\",\r\n];\r\n\r\ntype Sliders = {\r\n  [sliderId: string]: HTMLInputElement;\r\n};\r\nconst sliders: Sliders = {};\r\ntype SliderIndicator = {\r\n  [sliderId: string]: HTMLSpanElement;\r\n};\r\nconst sliderIndicators: SliderIndicator = {};\r\ntype SliderDefaultValue = {\r\n  [sliderId: string]: number;\r\n};\r\n\r\nconst mmSliderDefaultValues: SliderDefaultValue = {\r\n  \"head-slider\": 0,\r\n  \"ls-slider\" : 0,\r\n  \"rs-slider\" : 0,\r\n  \"lh-slider\" : 0,\r\n  \"rh-slider\": 0,\r\n  \"la-slider\": 0,\r\n  \"ra-slider\": 0,\r\n  \"ll-slider\": 0,\r\n  \"rl-slider\": 0,\r\n};\r\nconst kSliderDefaultValues: SliderDefaultValue = {\r\n  \"k-head-slider\": 0,\r\n  \"k-chest-slider\": 0,\r\n  \"k-hip-slider\": 0,\r\n  \"k-lua-x-slider\": 0,\r\n  \"k-lua-y-slider\": 0,\r\n  \"k-lua-z-slider\": 0,\r\n  \"k-bend-lla-slider\": 0,\r\n  \"k-twist-lla-slider\": 0,\r\n  \"k-rua-x-slider\": 0,\r\n  \"k-rua-y-slider\": 0,\r\n  \"k-rua-z-slider\": 0,\r\n  \"k-bend-rla-slider\": 0,\r\n  \"k-twist-rla-slider\": 0,\r\n  \"k-lul-x-slider\": -8,\r\n  \"k-lul-z-slider\": 0,\r\n  \"k-bend-lll-slider\": 16,\r\n  \"k-rul-x-slider\": -8,\r\n  \"k-rul-z-slider\": 0,\r\n  \"k-bend-rll-slider\": 16,\r\n\r\n}\r\nconst cowSliderDefaultValues: SliderDefaultValue = {\r\n  \"cow-head-slider\": 0,\r\n  \"cow-body-slider\": 0,\r\n  \"cow-lfl-slider\": 0,\r\n  \"cow-rfl-slider\": 0,\r\n  \"cow-lbl-slider\": 0,\r\n  \"cow-rbl-slider\": 0\r\n}\r\nconst cSliderDefaultValues: SliderDefaultValue = {\r\n  \"cam-radius\": 1,\r\n  \"cam-theta\": 0,\r\n  \"cam-phi\": 0,\r\n};\r\n\r\nsliderIds.forEach((sliderId) => {\r\n  sliders[sliderId] = document.getElementById(sliderId) as HTMLInputElement;\r\n  sliderIndicators[`${sliderId}-value`] = document.getElementById(\r\n    `${sliderId}-value`,\r\n  ) as HTMLSpanElement;\r\n  sliderIndicators[`${sliderId}-value`].innerText = sliders[sliderId].value;\r\n});\r\n\r\nconst getSlider = (sliderId: SliderId) => sliders[sliderId];\r\n\r\nclass SliderManager {\r\n  static assignInputEvent(sliderId: SliderId, callback: Function) {\r\n    const elmt = getSlider(sliderId);\r\n    elmt.oninput = function () {\r\n      const value = this.value;\r\n      sliderIndicators[`${elmt.id}-value`].innerText = value;\r\n      callback(value);\r\n    };\r\n  }\r\n\r\n  static resetMMSliderValue() {\r\n    sliderIds.forEach((sliderId) => {\r\n      if (mmSliderDefaultValues.hasOwnProperty(sliderId)) {\r\n        sliders[sliderId].value = String(mmSliderDefaultValues[sliderId]);\r\n        sliders[sliderId].dispatchEvent(new Event(\"input\"));\r\n      }\r\n    });\r\n  }\r\n\r\n  static resetKSliderValue() {\r\n    sliderIds.forEach((sliderId) => {\r\n      if (kSliderDefaultValues.hasOwnProperty(sliderId)) {\r\n        sliders[sliderId].value = String(kSliderDefaultValues[sliderId]);\r\n        sliders[sliderId].dispatchEvent(new Event(\"input\"));\r\n      }\r\n    });\r\n  }\r\n\r\n  static resetCowSliderValue() {\r\n    sliderIds.forEach((sliderId) => {\r\n      if (cowSliderDefaultValues.hasOwnProperty(sliderId)) {\r\n        sliders[sliderId].value = String(cowSliderDefaultValues[sliderId]);\r\n        sliders[sliderId].dispatchEvent(new Event(\"input\"));\r\n      }\r\n    });\r\n  }\r\n\r\n  static resetCameraSliderValue() {\r\n    sliderIds.forEach((sliderId) => {\r\n      if (cSliderDefaultValues.hasOwnProperty(sliderId)) {\r\n        sliders[sliderId].value = String(cSliderDefaultValues[sliderId]);\r\n        sliders[sliderId].dispatchEvent(new Event(\"input\"));\r\n      }\r\n    });\r\n  }\r\n}\r\nexport default SliderManager;\r\nexport {sliderIds};\r\n","class vec {\r\n  static add = (v1: number[], v2: number[]) => {\r\n    if (v1.length != v2.length) {\r\n      throw \"vec.add: vector length must be equal\";\r\n    }\r\n\r\n    let res = [];\r\n    for (let i = 0; i < v1.length; i++) {\r\n      res.push(v1[i] + v2[i]);\r\n    }\r\n    return res;\r\n  }\r\n\r\n  static sub = (v1: number[], v2: number[]) => {\r\n    if (v1.length != v2.length) {\r\n      throw \"vec.sub: vector length must be equal\";\r\n    }\r\n\r\n    let res = [];\r\n    for (let i = 0; i < v1.length; i++) {\r\n      res.push(v1[i] - v2[i]);\r\n    }\r\n    return res;\r\n  }\r\n\r\n  static mul = (k: number, v: number[]) => {\r\n    let res = [];\r\n    for (const el of v) {\r\n      res.push(k * el);\r\n    }\r\n    return res;\r\n  }\r\n\r\n  static dot = (v1: number[], v2: number[]) => {\r\n    if (v1.length != v2.length) {\r\n      throw \"vec.dot: vector length must be equal\";\r\n    }\r\n\r\n    let res = 0;\r\n    for (let i = 0; i < v1.length; i++) {\r\n      res += v1[i] * v2[i];\r\n    }\r\n    return res;\r\n  }\r\n\r\n  static cross = (v1: number[], v2: number[]) => {\r\n    // Notes: only support vector with length == 3\r\n\r\n    if (v1.length != 3 ||  v2.length != 3) {\r\n      throw \"vec.cross: vector length must equal to 3\";\r\n    }\r\n\r\n    // prettier-ignore\r\n    return [\r\n      v1[1] * v2[2] - v1[2] * v2[1],\r\n      v1[2] * v2[0] - v1[0] * v2[2],\r\n      v1[0] * v2[1] - v1[1] * v2[0],\r\n    ];\r\n  }\r\n\r\n  static equal = (v1: number[], v2: number[]) => {\r\n    if (v1.length != v2.length) {\r\n      return false;\r\n    }\r\n\r\n    for (let i = 0; i < v1.length; i++) {\r\n      if (v1[i] != v2[i]) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  static len = (v: number[]) => {\r\n    return Math.sqrt(vec.dot(v, v));\r\n  }\r\n\r\n  static normalize = (v: number[]) => {\r\n    // Notes: the input array is not preserved, it is assumed that the length of v is not 0\r\n\r\n    const vLength = vec.len(v);\r\n    for (let i = 0; i < v.length; i++) {\r\n      v[i] /= vLength;\r\n    }\r\n    return v;\r\n  }\r\n}\r\n\r\nexport {vec};\r\n","// Convert degree to radian\r\nconst toRadian = (degree: number) => (degree * Math.PI) / 180;\r\n\r\n// Convert spherical coordinate to cartesian\r\nconst toCartesian = (sphericalCoord: [number, number, number]) => {\r\n  // Notes: theta and phi in degree\r\n\r\n  // Unpack value\r\n  const [ radius, theta, phi ] = sphericalCoord;\r\n  const thetaInRadians = toRadian(theta);\r\n  const phiInRadians = toRadian(phi);\r\n\r\n  // Calculate cartesian coordinate\r\n  let cartesianCoord = [];\r\n  cartesianCoord.push(radius * Math.sin(thetaInRadians) * Math.cos(phiInRadians));  // x\r\n  cartesianCoord.push(radius * Math.sin(thetaInRadians) * Math.sin(phiInRadians));  // y\r\n  cartesianCoord.push(radius * Math.cos(thetaInRadians));  // z\r\n\r\n  // Return\r\n  return cartesianCoord;\r\n};\r\n\r\nconst requestCORSIfNotSameOrigin = (img: HTMLImageElement, url: string) => {\r\n  if ((new URL(url, window.location.href)).origin !== window.location.origin) {\r\n    img.crossOrigin = \"\";\r\n  }\r\n}\r\n\r\nexport {toRadian, toCartesian, requestCORSIfNotSameOrigin};\r\n","import {toRadian} from \"./convert\";\r\nimport {vec} from \"./vector\";\r\n\r\ntype Point = [number, number, number];\r\ntype Matrix = number[];\r\n\r\nclass mat4 {\r\n  static dimention = 4;\r\n\r\n  static identity() {\r\n    // prettier-ignore\r\n    return [\r\n      1,  0,  0,  0,\r\n      0,  1,  0,  0,\r\n      0,  0,  1,  0,\r\n      0,  0,  0,  1\r\n    ];\r\n  }\r\n\r\n\r\n  /*\r\n   * Transformation matrices\r\n   */\r\n\r\n  static scale = (s1: number, s2: number, s3: number) => {\r\n    // prettier-ignore\r\n    return [\r\n      s1, 0,  0,  0,\r\n      0,  s2, 0,  0,\r\n      0,  0,  s3, 0,\r\n      0,  0,  0,  1\r\n    ];\r\n  }\r\n\r\n  static translation(tx: number, ty: number, tz: number) {\r\n    // prettier-ignore\r\n    return [\r\n      1,  0,  0,  0,\r\n      0,  1,  0,  0,\r\n      0,  0,  1,  0,\r\n      tx, ty, tz, 1\r\n    ];\r\n  }\r\n\r\n  static xRotation(angle: number) {\r\n    const angleInRadians = toRadian(angle);\r\n    const c = Math.cos(angleInRadians);\r\n    const s = Math.sin(angleInRadians);\r\n\r\n    // prettier-ignore\r\n    return [\r\n      1,  0,  0,  0,\r\n      0,  c,  s,  0,\r\n      0,  -s, c,  0,\r\n      0,  0,  0,  1\r\n    ];\r\n  }\r\n\r\n  static yRotation(angle: number) {\r\n    const angleInRadians = toRadian(angle);\r\n    const c = Math.cos(angleInRadians);\r\n    const s = Math.sin(angleInRadians);\r\n\r\n    // prettier-ignore\r\n    return [\r\n      c,  0,  -s, 0,\r\n      0,  1,  0,  0,\r\n      s,  0,  c,  0,\r\n      0,  0,  0,  1\r\n    ];\r\n  }\r\n\r\n  static zRotation(angle: number) {\r\n    const angleInRadians = toRadian(angle);\r\n    const c = Math.cos(angleInRadians);\r\n    const s = Math.sin(angleInRadians);\r\n\r\n    // prettier-ignore\r\n    return [\r\n      c,  s,  0,  0,\r\n      -s, c,  0,  0,\r\n      0,  0,  1,  0,\r\n      0,  0,  0,  1\r\n    ];\r\n  }\r\n\r\n  /*\r\n   * Projection matrices\r\n   */\r\n\r\n  static orthographicProj = (left: number = -1, right: number = 1,\r\n      bottom: number = -1, top: number = 1, near: number = -15, far: number = 15) => {\r\n\r\n    // Initial check\r\n    if (left == right || bottom == top || near == far) {\r\n      throw \"mat4.orthographicProj: invalid parameter(s)\";\r\n    }\r\n\r\n    // Calculate width, height, and depth\r\n    // Notes: far and near coordinates is reversed from z axis (z+ is -, vice versa)\r\n    const width = right - left;\r\n    const height = top - bottom;\r\n    const depth = far - near;\r\n\r\n    // prettier-ignore\r\n    return [\r\n      2 / width, 0, 0, 0,\r\n      0, 2 / height, 0, 0,\r\n      0, 0, -2 / depth, 0,\r\n      - (left + right) / width, - (top + bottom) / width, - (near + far) / depth,  1\r\n    ];\r\n  }\r\n\r\n  static obliqueProj = (theta: number = 10, phi: number = 10, left: number = -1, right: number = 1,\r\n      bottom: number = -1, top: number = 1, near: number = -15, far: number = 15) => {\r\n    // Notes: theta and phi is in degree, it is assumed that the cot of theta and phi is not infinity\r\n\r\n    // Convert theta and phi to radian\r\n    const ctgTheta = 1 / Math.tan(toRadian(theta));\r\n    const ctgPhi = 1 / Math.tan(toRadian(phi));\r\n\r\n    // Oblique == shear + orthographic\r\n    // prettier-ignore\r\n    return mat4.multiply(\r\n      mat4.orthographicProj(),\r\n      [\r\n        1, 0, 0, 0,\r\n        0, 1, 0, 0,\r\n        -ctgTheta, -ctgPhi, 1, 0,\r\n        0, 0, 0, 1,\r\n      ]\r\n    );\r\n  }\r\n\r\n  static perspectiveProj = (fov: number = 90, aspect: number = 1, near: number = 0.01, far: number = 20) => {\r\n    // Notes: fov is in degree, it is assumed that the cot of fov is not infinity\r\n\r\n    const ctgHalfFov = 1 / Math.tan(toRadian(fov) / 2);\r\n    const depth = far - near;\r\n\r\n    // prettier-ignore\r\n    return [\r\n      ctgHalfFov / aspect, 0, 0, 0,\r\n      0, ctgHalfFov, 0, 0,\r\n      0, 0, - (near + far) / depth, -1,\r\n      0, 0, -2 * near * far / depth, 0,\r\n    ];\r\n  }\r\n\r\n\r\n  /*\r\n   * View matrix (used to control the camera)\r\n   */\r\n\r\n  static lookAt = (eye: Point, target: Point = [0, 0, 0], up: Point = [0, 1, 0]) => {\r\n    // Initial check\r\n    if (vec.equal(eye, target)) {\r\n      return mat4.identity();\r\n    }\r\n\r\n    var camView = vec.normalize(vec.sub(eye, target));\r\n    var camNorm = vec.normalize(vec.cross(up, camView));\r\n    var camUp = vec.normalize(vec.cross(camView, camNorm));\r\n\r\n    return mat4.inverse([\r\n       camNorm[0], camNorm[1], camNorm[2], 0,\r\n       camUp[0], camUp[1], camUp[2], 0,\r\n       camView[0], camView[1], camView[2], 0,\r\n       eye[0], eye[1], eye[2], 1,\r\n    ]);\r\n  }\r\n\r\n  private static submatrix3x3Det = (m: Matrix, ir: number, jr: number): number => {\r\n    // Get determinant of 3x3 submatrix of matrix 4x4 (removing row ir and col jr)\r\n    let sm = [];\r\n    let counter = 0;\r\n    for (let i = 0; i < 4; i++) {\r\n      if (i == ir) {\r\n        counter += 4;\r\n        continue;\r\n      }\r\n\r\n      let row = [];\r\n      for (let j = 0; j < 4; j++) {\r\n        if (j == jr) {\r\n          counter++;\r\n          continue;\r\n        }\r\n\r\n        row.push(m[counter]);\r\n        counter++;\r\n      }\r\n      sm.push(row);\r\n    }\r\n\r\n    return ((sm[0][0] * sm[1][1] * sm[2][2]) + (sm[0][1] * sm[1][2] * sm[2][0]) + (sm[0][2] * sm[1][0] * sm[2][1])\r\n      - (sm[0][2] * sm[1][1] * sm[2][0]) - (sm[0][1] * sm[1][0] * sm[2][2]) - (sm[0][0] * sm[1][2] * sm[2][1]));\r\n  }\r\n\r\n  static inverse = (m: Matrix): Matrix => {\r\n    let adjM = Array(16);\r\n    let det = 0;\r\n    for (let i = 0; i < 4; i++) {\r\n      for (let j = 0; j < 4; j++) {\r\n        const koef = (i + j) % 2 == 0 ? 1 : -1;\r\n        const elem = koef * mat4.submatrix3x3Det(m, i, j);\r\n        if (j == 0) {\r\n          det += m[i * 4 + j] * elem;\r\n        }\r\n        adjM[j * 4 + i] = elem;\r\n      }\r\n    }\r\n\r\n    return adjM.map(el => el / det);\r\n  }\r\n\r\n\r\n  /*\r\n   * Utilities\r\n   */\r\n\r\n  static multiply = (matA: Matrix, matB: Matrix): Matrix => {\r\n    const out = [];\r\n    for (let i = 0; i < mat4.dimention; i++) {\r\n      for (let j = 0; j < mat4.dimention; j++) {\r\n        let temp = 0;\r\n        for (let k = 0; k < mat4.dimention; k++) {\r\n          temp += matA[i * mat4.dimention + k] * matB[k * mat4.dimention + j];\r\n        }\r\n        out.push(temp);\r\n      }\r\n    }\r\n    return out;\r\n  }\r\n\r\n  static mMult = (...args: Matrix[]) => {\r\n    let temp = args[0];\r\n    for (let i = 1; i < args.length; i++) {\r\n      temp = mat4.multiply(temp, args[i]);\r\n    }\r\n    return temp;\r\n  }\r\n}\r\n\r\nexport {mat4};\r\n","import Light from \"../light\";\r\nimport Node from \"../object\";\r\n\r\nimport {requestCORSIfNotSameOrigin} from \"../util/convert\";\r\n\r\nexport enum AttributeVector {\r\n  \"POSITION\" = \"position\",\r\n  \"NORMAL\" = \"vertNormal\",\r\n}\r\n\r\nexport enum UniformMatrix {\r\n  \"PROJ\" = \"mProj\",\r\n  \"VIEW\" = \"mView\",\r\n  \"WORLD\" = \"mWorld\",\r\n  \"TRANSFORM\" = \"mTransform\",\r\n}\r\n\r\nclass WebGLWrapper {\r\n  // Webgl properties\r\n  private gl: WebGL2RenderingContext;\r\n  private program: WebGLProgram;\r\n\r\n  protected texture: Texture;\r\n\r\n  /*\r\n   * Constructor\r\n   */\r\n\r\n  constructor(private canvas: HTMLCanvasElement) {\r\n    canvas.width = 800;\r\n    canvas.height = 800;\r\n\r\n    this.gl = canvas.getContext(\"webgl2\") as WebGL2RenderingContext;\r\n    this.gl.viewport(0, 0, canvas.width, canvas.height);\r\n    this.gl.enable(this.gl.DEPTH_TEST);\r\n\r\n    // Load initial texture mode\r\n    this.texture = \"none\";\r\n\r\n    this.program = this.createProgram();\r\n\r\n    this.initMainShader(this.program);\r\n\r\n    // Load the environment\r\n    this.loadEnvMapAndCreateTexture();\r\n\r\n    // Load bump texture\r\n    this.applyTexCoord();\r\n    this.loadBumpMapAndCreateTexture();\r\n    this.applyUseNormalMap(false);\r\n\r\n    // Load image texture\r\n    this.applyTexCoordImg();\r\n    this.loadImageMapAndCreateTexture();\r\n  }\r\n\r\n  /*\r\n   * Webgl setup\r\n   */\r\n\r\n  private createProgram() {\r\n    const program = this.gl.createProgram();\r\n    if (!program) {\r\n      throw \"shape.createProgram: no program!\";\r\n    }\r\n    return program;\r\n  }\r\n\r\n  private createCompiledShader(type: number, sourceCode: string) {\r\n    const gl = this.gl;\r\n    const shader = gl.createShader(type);\r\n    if (!shader) {\r\n      const shaderTypeString = type == gl.VERTEX_SHADER ? \"vertex\" : \"fragment\";\r\n      throw `shape.createCompiledShader: error while creating ${shaderTypeString} shader`;\r\n    }\r\n    gl.shaderSource(shader, sourceCode);\r\n    gl.compileShader(shader);\r\n    return shader;\r\n  }\r\n\r\n  private setupProgram(program: WebGLProgram, vShader: WebGLShader, fShader: WebGLShader) {\r\n    const gl = this.gl;\r\n    gl.attachShader(program, vShader);\r\n    gl.attachShader(program, fShader);\r\n    gl.linkProgram(program);\r\n    gl.useProgram(program);\r\n  }\r\n\r\n  private initMainShader(program: WebGLProgram) {\r\n    const gl = this.gl;\r\n    const vShader = this.createCompiledShader(\r\n      gl.VERTEX_SHADER,\r\n      `\r\n      attribute vec3 position;\r\n      attribute vec3 vertNormal;\r\n      attribute vec2 texCoord;\r\n      attribute vec2 texCoordImg;\r\n\r\n      uniform vec3 lightPosition;\r\n\r\n      // Position matrices\r\n      uniform mat4 mTransform;\r\n      uniform mat4 mWorld;\r\n      uniform mat4 mView;\r\n      uniform mat4 mProj;\r\n\r\n      // Blinn-Phong model\r\n      varying vec3 L;\r\n      varying vec3 V;\r\n      varying vec3 N;\r\n\r\n      // UV coordinate\r\n      varying vec2 fTexCoord;\r\n      varying vec2 fTexCoordImg;\r\n\r\n      // Env texture properties\r\n      varying vec3 R;\r\n\r\n      void main() {\r\n        // Calculate model view matrix\r\n        mat4 modelViewMatrix =  mView * mWorld * mTransform;\r\n\r\n        // Assign gl_Position value\r\n        gl_Position = mProj * modelViewMatrix * vec4(position, 1);\r\n\r\n        // Blinn-Phong model\r\n        vec3 vertPos = (modelViewMatrix * vec4(position, 1)).xyz;\r\n\r\n        L = normalize((mView * vec4(lightPosition, 1)).xyz - vertPos);\r\n        V = normalize(-vertPos);\r\n        N = normalize((modelViewMatrix * vec4(vertNormal,0)).xyz);\r\n\r\n        // Env mapping\r\n        vec3 eyePos = (modelViewMatrix * vec4(position, 1)).xyz;\r\n        R = reflect(eyePos, N);\r\n\r\n        // Pass UV coordinate\r\n        fTexCoord = texCoord;\r\n        fTexCoordImg = texCoordImg;\r\n      }\r\n      `,\r\n    );\r\n    const fShader = this.createCompiledShader(\r\n      gl.FRAGMENT_SHADER,\r\n      `\r\n      precision mediump float;\r\n\r\n      uniform int useShading;\r\n      uniform int useTexture;\r\n\r\n      // Light properties\r\n      uniform vec3 Id;\r\n      uniform vec3 Is;\r\n      uniform vec3 Ia;\r\n\r\n      // Material properties\r\n      uniform vec3 Kd;\r\n      uniform vec3 Ks;\r\n      uniform vec3 Ka;\r\n      uniform float shininess;\r\n\r\n      // Blinn-Phong model\r\n      varying vec3 L;\r\n      varying vec3 V;\r\n      varying vec3 N;\r\n\r\n      // UV coordinate\r\n      varying vec2 fTexCoord;\r\n      varying vec2 fTexCoordImg;\r\n\r\n      // Texture type\r\n      uniform int textureType;\r\n\r\n      // Environment texture variable\r\n      uniform samplerCube envTexture;\r\n      varying vec3 R;\r\n\r\n      // Bump texture variable\r\n      uniform sampler2D bumpNormalMap;\r\n      uniform int useNormalMap;\r\n\r\n      // Image texture variable\r\n      uniform sampler2D imageTexture;\r\n\r\n      vec4 calculateColor(vec3 normal) {\r\n        vec3 color;\r\n        if (useShading == 1) {\r\n          // Build Blinn-Phong model\r\n          vec3 H = normalize(L + V);\r\n\r\n          vec3 diffuse = Kd * Id * max(dot(L, normal), 0.0);\r\n          vec3 specular = Ks * Is * pow(max(dot(normal, H), 0.0), shininess);\r\n          vec3 ambient = Ka * Ia;\r\n\r\n          color = diffuse + specular + ambient;\r\n        } else {\r\n          color = vec3(0, 0, 0);\r\n        }\r\n\r\n        // Return\r\n        return vec4(color, 1);\r\n      }\r\n\r\n      void main() {\r\n        // Initial check\r\n        if (useTexture != 1) {\r\n          gl_FragColor = calculateColor(N);\r\n          return;\r\n        }\r\n\r\n\r\n        // Check texture type\r\n        if (textureType == 1) {  // env\r\n          gl_FragColor = textureCube(envTexture, -R);\r\n        }\r\n\r\n        else if (textureType == 2) {  // bump\r\n          vec3 normal;\r\n          if (useNormalMap == 1) {\r\n            normal = texture2D(bumpNormalMap, fTexCoord).rgb;\r\n            normal = normalize(normal * 2.0 - 1.0);\r\n          } else {\r\n            normal = N;\r\n          }\r\n          gl_FragColor = calculateColor(normal);\r\n        }\r\n\r\n        else if (textureType == 3) {  // image\r\n          gl_FragColor = texture2D(imageTexture, fTexCoordImg);\r\n        }\r\n\r\n        else {  // no texture\r\n          gl_FragColor = calculateColor(N);\r\n        }\r\n      }\r\n      `,\r\n    );\r\n    this.setupProgram(program, vShader, fShader);\r\n  }\r\n\r\n\r\n  /*\r\n   * GLSL value apply helpers\r\n   */\r\n\r\n  protected applyAttributeVector(\r\n    label: AttributeVector,\r\n    vectorData: number[],\r\n    dimension: number = 3,\r\n  ) {\r\n    const {gl, program} = this;\r\n\r\n    const buffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vectorData), gl.STATIC_DRAW);\r\n\r\n    const attrPos = gl.getAttribLocation(program, label);\r\n    gl.enableVertexAttribArray(attrPos);\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n    gl.vertexAttribPointer(attrPos, dimension, gl.FLOAT, false, 0, 0);\r\n  }\r\n\r\n  protected applyUniformMatrix4fv(label: UniformMatrix, matrix: number[]) {\r\n    const {gl, program} = this;\r\n    gl.uniformMatrix4fv(gl.getUniformLocation(program, label), false, new Float32Array(matrix));\r\n  }\r\n\r\n  protected applyLightProperties(light: Light) {\r\n    const {gl, program} = this;\r\n\r\n    gl.uniform3fv(gl.getUniformLocation(program, \"Id\"), new Float32Array(light.Id));\r\n    gl.uniform3fv(gl.getUniformLocation(program, \"Is\"), new Float32Array(light.Is));\r\n    gl.uniform3fv(gl.getUniformLocation(program, \"Ia\"), new Float32Array(light.Ia));\r\n\r\n    gl.uniform3fv(\r\n      gl.getUniformLocation(program, \"lightPosition\"),\r\n      new Float32Array(light.position),\r\n    );\r\n  }\r\n\r\n  protected applyMaterialProperties(object: Node) {\r\n    const {gl, program} = this;\r\n\r\n    gl.uniform3fv(gl.getUniformLocation(program, \"Kd\"), new Float32Array(object.Kd));\r\n    gl.uniform3fv(gl.getUniformLocation(program, \"Ks\"), new Float32Array(object.Ks));\r\n    gl.uniform3fv(gl.getUniformLocation(program, \"Ka\"), new Float32Array(object.Ka));\r\n\r\n    gl.uniform1f(gl.getUniformLocation(program, \"shininess\"), object.shininess);\r\n  }\r\n\r\n  protected applyUseShading(useShading: boolean) {\r\n    const {gl, program} = this;\r\n    gl.uniform1i(gl.getUniformLocation(program, \"useShading\"), useShading ? 1 : 0);\r\n  }\r\n\r\n  protected applyUseTexture(useTexture: boolean) {\r\n    const {gl, program} = this;\r\n    gl.uniform1i(gl.getUniformLocation(program, \"useTexture\"), useTexture ? 1 : 0);\r\n  }\r\n\r\n  protected applyUseNormalMap(useNormalMap: boolean) {\r\n    const {gl, program} = this;\r\n    gl.uniform1i(gl.getUniformLocation(program, \"useNormalMap\"), useNormalMap ? 1 : 0);\r\n  }\r\n\r\n  protected applyTexCoord() {\r\n    const {gl, program} = this;\r\n\r\n    // prettier-ignore\r\n    const texCoordData = [\r\n      // front-right pentagon\r\n      0.5, -1,\r\n      0.5, 0,\r\n      0.855, -0.28,\r\n      1, -0.75,\r\n      // front-left pentagon\r\n      0.5, -1,\r\n      0, -0.75,\r\n      0.145, -0.28,\r\n      0.5, 0\r\n    ];\r\n\r\n    const buffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(texCoordData), gl.STATIC_DRAW);\r\n\r\n    const texCoordPos = gl.getAttribLocation(program, \"texCoord\");\r\n    gl.enableVertexAttribArray(texCoordPos);\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n    gl.vertexAttribPointer(texCoordPos, 2, gl.FLOAT, false, 0, 0);\r\n  }\r\n\r\n  protected applyTexCoordImg() {\r\n    const {gl, program} = this;\r\n\r\n    // prettier-ignore\r\n    const texCoordData = [\r\n      // quad 1\r\n      -1, 1,\r\n      -1, -1,\r\n      1, -1,\r\n      1, -1,\r\n      // quad 2\r\n      -1, 1,\r\n      -1, -1,\r\n      1, -1,\r\n      1, -1,\r\n      -1, 1,\r\n      -1, -1,\r\n      1, -1,\r\n      1, -1,\r\n      -1, 1,\r\n      -1, -1,\r\n      1, -1,\r\n      1, -1,\r\n    ];\r\n\r\n    const buffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(texCoordData), gl.STATIC_DRAW);\r\n\r\n    const texCoordPos = gl.getAttribLocation(program, \"texCoordImg\");\r\n    gl.enableVertexAttribArray(texCoordPos);\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n    gl.vertexAttribPointer(texCoordPos, 2, gl.FLOAT, false, 0, 0);\r\n  }\r\n\r\n  protected applyTexture(textureType: Texture) {\r\n    const {gl, program} = this;\r\n\r\n    switch (textureType) {\r\n      case \"environment\":\r\n        gl.uniform1i(gl.getUniformLocation(program, \"textureType\"), 1);\r\n        break;\r\n      case \"bump\":\r\n        gl.uniform1i(gl.getUniformLocation(program, \"textureType\"), 2);\r\n        break;\r\n      case \"image\":\r\n        gl.uniform1i(gl.getUniformLocation(program, \"textureType\"), 3);\r\n        break;\r\n      default:\r\n        gl.uniform1i(gl.getUniformLocation(program, \"textureType\"), 0); // no texture\r\n        break;\r\n    }\r\n  }\r\n\r\n  protected loadEnvMapAndCreateTexture() {\r\n    const {gl, program} = this;\r\n\r\n    const texture = gl.createTexture();\r\n    gl.activeTexture(gl.TEXTURE0);\r\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\r\n\r\n    const faceInfos = [\r\n      {\r\n        target: gl.TEXTURE_CUBE_MAP_POSITIVE_X,\r\n        url:\r\n        require('../../res/pos-x.jpg'),\r\n      },\r\n      {\r\n        target: gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\r\n        url:\r\n        require('../../res/neg-x.jpg'),\r\n      },\r\n      {\r\n        target: gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\r\n        url:\r\n        require('../../res/pos-y.jpg'),\r\n      },\r\n      {\r\n        target: gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\r\n        url:\r\n        require('../../res/neg-y.jpg'),\r\n      },\r\n      {\r\n        target: gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\r\n        url:\r\n        require('../../res/pos-z.jpg'),\r\n      },\r\n      {\r\n        target: gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,\r\n        url:\r\n        require('../../res/neg-z.jpg'),\r\n      },\r\n    ];\r\n    faceInfos.forEach((faceInfo) => {\r\n      const {target, url} = faceInfo;\r\n\r\n      // Upload the canvas to the cubemap face.\r\n      const level = 0;\r\n      const internalFormat = gl.RGBA;\r\n      const width = 512;\r\n      const height = 512;\r\n      const format = gl.RGBA;\r\n      const type = gl.UNSIGNED_BYTE;\r\n\r\n      // setup each face so it's immediately renderable\r\n      gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, null);\r\n\r\n      // Asynchronously load an image\r\n      const image = new Image();\r\n      requestCORSIfNotSameOrigin(image, url);\r\n      image.src = url;\r\n      image.addEventListener(\"load\", function () {\r\n        // Now that the image has loaded make copy it to the texture.\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\r\n        gl.texImage2D(target, level, internalFormat, format, type, image);\r\n        gl.generateMipmap(gl.TEXTURE_CUBE_MAP);\r\n      });\r\n    });\r\n    gl.generateMipmap(gl.TEXTURE_CUBE_MAP);\r\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\r\n\r\n    // Tell the shader to use texture unit 0 for u_texture\r\n    gl.uniform1i(gl.getUniformLocation(program, \"envTexture\"), 0);\r\n  }\r\n\r\n  protected loadBumpMapAndCreateTexture() {\r\n    const {gl, program} = this;\r\n\r\n    var texture = gl.createTexture();\r\n    gl.activeTexture(gl.TEXTURE1);\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n\r\n    // Fill the texture with a 1x1 blue pixel.\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE,\r\n                  new Uint8Array([0, 0, 255, 255]));\r\n\r\n    // Asynchronously load an image\r\n    var image = new Image();\r\n    image.addEventListener('load', function() {\r\n      // Now that the image has loaded make copy it to the texture.\r\n      gl.bindTexture(gl.TEXTURE_2D, texture);\r\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n      gl.generateMipmap(gl.TEXTURE_2D);\r\n    });\r\n    image.src = require('../../res/normal.png');\r\n\r\n    // Tell the shader to use texture unit 0 for u_texture\r\n    gl.uniform1i(gl.getUniformLocation(program, \"bumpNormalMap\"), 1);\r\n  }\r\n\r\n  protected loadImageMapAndCreateTexture() {\r\n    const {gl, program} = this;\r\n\r\n    var texture = gl.createTexture();\r\n    gl.activeTexture(gl.TEXTURE2);\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n\r\n    // Fill the texture with a 1x1 blue pixel.\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE,\r\n      new Uint8Array([0, 0, 255, 255]));\r\n\r\n    // Asynchronously load an image\r\n    var image = new Image();\r\n    image.addEventListener('load', function() {\r\n      // Now that the image has loaded make copy it to the texture.\r\n      gl.bindTexture(gl.TEXTURE_2D, texture);\r\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n      gl.generateMipmap(gl.TEXTURE_2D);\r\n    });\r\n    image.src = require('../../res/cow.png');\r\n\r\n    // Tell the shader to use texture unit 0 for u_texture\r\n    gl.uniform1i(gl.getUniformLocation(program, \"imageTexture\"), 2);\r\n  }\r\n\r\n  /*\r\n   * Draw array wrapper method\r\n   */\r\n  protected draw(mode: number, startingIdx: number, size: number) {\r\n    this.gl.drawArrays(mode, startingIdx, size);\r\n  }\r\n}\r\n\r\nexport default WebGLWrapper;\r\n","import { vec } from \"../../util/vector\";\r\nimport { mat4 } from \"../../util/matrix\";\r\nimport { AttributeVector } from \"../../scene/webglWrapper\";\r\n\r\ntype materialChangedCallbackType = (object: Node) => void;\r\ntype transformMatrixChangedCallbackType = (transformMatrix: number[]) => void;\r\ntype drawCallbackType = (mode: number, startingIdx: number, size: number) => void;\r\ntype applyAttrCallbackType = (label: AttributeVector, vectorData: number[], dimension: number) => void;\r\ntype useNormalMapCallbackType = (useNormalMap: boolean) => void;\r\ntype setTextureCallbackType = (textureType: Texture) => void;\r\n\r\nabstract class Node {\r\n  // Node properties\r\n  protected dimension: number = 3;\r\n  protected points: number[] = [];\r\n  protected normals: number[] = [];\r\n\r\n  // Material properties\r\n  public Kd: number[] = [0.1953125, 0.50390625, 0.65625];\r\n  public Ks: number[] = [0.6171875, 0.87109375, 0.99609375];\r\n  public Ka: number[] = [0.1953125, 0.50390625, 0.65625];\r\n  public shininess: number = 100;\r\n\r\n  // Object transformations\r\n  protected translate: Point = [0, 0, 0];\r\n  protected rotate: Point = [0, 0, 0];\r\n  protected scale: Point = [1, 1, 1];\r\n\r\n  // Transformation matrices used\r\n  protected instanceMatrix: number[] = mat4.identity();\r\n  protected transformMatrix: number[];\r\n  protected centralPoint: Point = [0, 0, 0];\r\n\r\n  // Tree properties\r\n  protected _sibling: Node;\r\n  protected _child: Node;\r\n\r\n  // Callback methods\r\n  protected _materialChangedCallback: materialChangedCallbackType | null = null;\r\n  protected _transformMatrixChangedCallback: transformMatrixChangedCallbackType | null = null;\r\n  protected _drawCallback: drawCallbackType | null = null;\r\n  protected _applyAttrCallback: applyAttrCallbackType | null = null;\r\n  protected _useNormalMapCallback: useNormalMapCallbackType | null = null;\r\n  protected _setTextureCallback: setTextureCallbackType | null = null;\r\n\r\n\r\n  /*\r\n   * Constructor\r\n   */\r\n\r\n  constructor(transformMatrix: number[] = mat4.identity(), sibling: Node | null = null,\r\n              child: Node | null = null) {\r\n    this.transformMatrix = transformMatrix;\r\n\r\n    if (!!sibling)\r\n      this._sibling = sibling;\r\n\r\n    if (!!child)\r\n      this._child = child;\r\n  }\r\n\r\n  /*\r\n   * Transformation methods\r\n   */\r\n\r\n  public setTransformation(transformationType: Transformation, newArr: Point,\r\n                           useCustomCentral: boolean = false) {\r\n    switch (transformationType) {\r\n      case \"rotate\":\r\n        this.rotate = newArr;\r\n        break;\r\n      case \"scale\":\r\n        this.scale = newArr;\r\n        break;\r\n      case \"translate\":\r\n        this.translate = newArr;\r\n        break;\r\n      default:\r\n        throw `shape.setTransformation: invalid transformation type '${transformationType}'`;\r\n    }\r\n    this.calculateTransformMatrix(useCustomCentral);\r\n  }\r\n\r\n  public getTransformation(transformationType: Transformation) {\r\n    switch (transformationType) {\r\n      case \"rotate\":\r\n        return this.rotate;\r\n      case \"scale\":\r\n        return this.scale;\r\n      case \"translate\":\r\n        return this.translate;\r\n      default:\r\n        throw `shape.getTransformation: invalid transformation type '${transformationType}'`;\r\n    }\r\n  }\r\n\r\n  protected calculateTransformMatrix(useCustomCentral: boolean = false) {\r\n    if (useCustomCentral) {\r\n      this.transformMatrix = mat4.mMult(\r\n        mat4.translation(...vec.mul(-1, this.centralPoint) as [number, number, number]),\r\n        mat4.scale(...this.scale),\r\n        mat4.zRotation(this.rotate[2]),\r\n        mat4.yRotation(this.rotate[1]),\r\n        mat4.xRotation(this.rotate[0]),\r\n        mat4.translation(...this.translate),\r\n        mat4.translation(...this.centralPoint),\r\n      );\r\n    } else {\r\n      this.transformMatrix = mat4.mMult(\r\n        mat4.scale(...this.scale),\r\n        mat4.zRotation(this.rotate[2]),\r\n        mat4.yRotation(this.rotate[1]),\r\n        mat4.xRotation(this.rotate[0]),\r\n        mat4.translation(...this.translate),\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Setter and getter\r\n   */\r\n\r\n  public setPoints(...points: number[]) {\r\n    this.points = points;\r\n  }\r\n\r\n  public setNormals(...normals: number[]) {\r\n    this.normals = normals;\r\n  }\r\n\r\n  public setInstanceMatrix(instanceMatrix: number[]) {\r\n    this.instanceMatrix = instanceMatrix;\r\n  }\r\n\r\n  public setCentralPoint(centralPoint: Point) {\r\n    this.centralPoint = centralPoint;\r\n  }\r\n\r\n  public get sibling() {\r\n    return this._sibling;\r\n  }\r\n\r\n  public set sibling(sibling: Node) {\r\n    this._sibling = sibling;\r\n  }\r\n\r\n  public get child() {\r\n    return this._child;\r\n  }\r\n\r\n  public set child(child: Node) {\r\n    this._child = child;\r\n  }\r\n\r\n  public set materialChangedCallback(callback: materialChangedCallbackType) {\r\n    this._materialChangedCallback = callback;\r\n  }\r\n\r\n  public set transformMatrixChangedCallback(callback: transformMatrixChangedCallbackType) {\r\n    this._transformMatrixChangedCallback = callback;\r\n  }\r\n\r\n  public set drawCallback(callback: drawCallbackType) {\r\n    this._drawCallback = callback;\r\n  }\r\n\r\n  public set applyAttrCallback(callback: applyAttrCallbackType) {\r\n    this._applyAttrCallback = callback;\r\n  }\r\n\r\n  public set useNormalMapCallback(callback: useNormalMapCallbackType) {\r\n    this._useNormalMapCallback = callback;\r\n  }\r\n\r\n  public set setTextureCallback(callback: setTextureCallbackType) {\r\n    this._setTextureCallback = callback;\r\n  }\r\n\r\n\r\n  /*\r\n   * Webgl apply helpers\r\n   */\r\n\r\n  public applyMaterialProperties() {\r\n    if (this._materialChangedCallback)\r\n      this._materialChangedCallback(this);\r\n  }\r\n\r\n  public applyPosition() {\r\n    if (this._applyAttrCallback)\r\n      this._applyAttrCallback(AttributeVector.POSITION, this.points, this.dimension);\r\n  }\r\n\r\n  public applyNormal() {\r\n    if (this._applyAttrCallback)\r\n      this._applyAttrCallback(AttributeVector.NORMAL, this.normals, this.dimension);\r\n  }\r\n\r\n\r\n  /*\r\n   * gl.drawArrays wrapper\r\n   */\r\n\r\n  public draw(mode: number, startingIdx: number, size: number) {\r\n    if (this._drawCallback)\r\n      this._drawCallback(mode, startingIdx, size);\r\n  }\r\n\r\n\r\n  /*\r\n   * Traverse tree and render each node\r\n   */\r\n\r\n  public traverse(baseTransformMatrix: number[] = mat4.identity(), reverseMatrixOrder: boolean = false) {\r\n    let transformMatrix;\r\n    if (reverseMatrixOrder)\r\n      transformMatrix = mat4.multiply(this.transformMatrix, baseTransformMatrix);\r\n    else\r\n      transformMatrix = mat4.multiply(baseTransformMatrix, this.transformMatrix);\r\n\r\n    this.render(transformMatrix);\r\n    this.child?.traverse(transformMatrix, reverseMatrixOrder);\r\n    this.sibling?.traverse(baseTransformMatrix, reverseMatrixOrder);\r\n  }\r\n\r\n\r\n  /*\r\n   * Abstract methods\r\n   */\r\n\r\n  public abstract setupPoints(): void;\r\n  public abstract render(baseTransformMatrix: number[]): void;\r\n\r\n}\r\n\r\nexport interface ISaveableNode {\r\n  save(): string;\r\n}\r\n\r\nexport default Node;\r\n","import Node, {ISaveableNode} from \"./node\";\r\n\r\n// prettier-ignore\r\nexport default Node;\r\n\r\nexport {\r\n    ISaveableNode\r\n}\r\n","enum DrawMode {\r\n  \"POINTS\" = 0,\r\n  \"LINES\" = 1,\r\n  \"LINE_LOOP\" = 2,\r\n  \"LINE_STRIP\" = 3,\r\n  \"TRIANGLES\" = 4,\r\n  \"TRIANGLE_STRIP\" = 5,\r\n  \"TRIANGLE_FAN\" = 6\r\n}\r\n\r\nexport default DrawMode;\r\n","import { vec } from \"../../util/vector\";\r\n\r\n// sisi depan yg ngehadep kita (depan belakang) front, sisi kiri kanan: side, sisi bawah atas: flat\r\ntype orientation = \"front\" | \"side\" | \"ground\";\r\nconst x = 0;\r\nconst y = 1;\r\nconst z = 2;\r\n\r\n/*\r\n * @param p1 the first point\r\n * @param p2 the second point\r\n * @param p3 the third point\r\n * @param p4 the fourth point\r\n */\r\nconst buildQuad = (\r\n  p1: Point,\r\n  p2: Point,\r\n  p3: Point,\r\n  p4: Point,\r\n  normalArray: number[],\r\n  reversed: boolean = false,\r\n) => {\r\n  const temp1 = vec.sub(p2, p1);\r\n  const temp2 = vec.sub(p4, p1);\r\n  const normalDir = reversed ? -1 : 1;\r\n  const normal = vec.mul(normalDir, vec.cross(temp1, temp2));\r\n\r\n  normalArray.push(...normal, ...normal, ...normal, ...normal);\r\n\r\n  if (reversed) {\r\n    return [...p4, ...p3, ...p2, ...p1];\r\n  } else {\r\n    return [...p1, ...p2, ...p3, ...p4];\r\n  }\r\n};\r\n\r\nexport { buildQuad };\r\n","import {buildQuad} from \"./util\";\r\n\r\nexport const buildCubePoints = (normalArray: number[]) => {\r\n  // prettier-ignore\r\n  const coords: Point[] = [\r\n        [-0.5, -0.5, 0.5],\r\n        [-0.5, 0.5, 0.5],\r\n        [-0.5, -0.5, -0.5],\r\n        [-0.5, 0.5, -0.5],\r\n        [0.5, -0.5, 0.5],\r\n        [0.5, 0.5, 0.5],\r\n        [0.5, -0.5, -0.5],\r\n        [0.5, 0.5, -0.5],\r\n    ];\r\n\r\n  // prettier-ignore\r\n\r\n  const arr = [\r\n\r\n    // Front side\r\n    ...buildQuad(\r\n        coords[0],\r\n        coords[1],\r\n        coords[5],\r\n        coords[4],\r\n        normalArray,\r\n        true,\r\n    ),\r\n\r\n    // Back side\r\n    ...buildQuad(\r\n        coords[2],\r\n        coords[3],\r\n        coords[7],\r\n        coords[6],\r\n        normalArray,\r\n        false,\r\n    ),\r\n\r\n    // Left side\r\n    ...buildQuad(\r\n        coords[4],\r\n        coords[6],\r\n        coords[7],\r\n        coords[5],\r\n        normalArray,\r\n        false,\r\n    ),\r\n    \r\n    // Right side\r\n    ...buildQuad(\r\n        coords[0],\r\n        coords[2],\r\n        coords[3],\r\n        coords[1],\r\n        \r\n        normalArray,\r\n        true,\r\n    ),\r\n\r\n    // Bottom side\r\n    ...buildQuad(\r\n        coords[0],\r\n        coords[2],\r\n        coords[6],\r\n        coords[4],\r\n        normalArray,\r\n        false,\r\n    ),\r\n\r\n    // Top side\r\n    ...buildQuad(\r\n        coords[1],\r\n        coords[3],\r\n        coords[7],\r\n        coords[5],\r\n        normalArray,\r\n        true,\r\n    )\r\n  ];\r\n  \r\n  return arr;\r\n};\r\n","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport {mat4} from \"../../../util/matrix\";\r\nimport {buildCubePoints} from \"../../utils/cubePoints\";\r\n\r\nclass Stomach extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.setInstanceMatrix(\r\n      mat4.mMult(\r\n        mat4.scale(0.3, 0.125, 0.15),\r\n        // mat4.zRotation(0),\r\n        // mat4.yRotation(0),\r\n        // mat4.xRotation(0),\r\n        mat4.translation(0, -0.2, 0),\r\n      ),\r\n    );\r\n\r\n    this.setupPoints();\r\n  }\r\n\r\n  // override\r\n  public setupPoints() {\r\n    this.normals = [];\r\n    this.points = buildCubePoints(this.normals);\r\n  }\r\n\r\n  // override\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n\r\n    // render each rectangle separately\r\n    for (let i = 0; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Stomach;\r\n","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport {mat4} from \"../../../util/matrix\";\r\nimport {buildCubePoints} from \"../../utils/cubePoints\";\r\n\r\nclass Chest extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.setInstanceMatrix(mat4.mMult(\r\n      mat4.scale(0.4,0.25,0.3),\r\n      // mat4.zRotation(0),\r\n      // mat4.yRotation(0),\r\n      // mat4.xRotation(0),\r\n      // mat4.translation(0,0,0)\r\n    ));\r\n\r\n    this.setupPoints();\r\n  }\r\n\r\n  // override\r\n  public setupPoints() {\r\n    this.normals = [];\r\n    this.points = buildCubePoints(this.normals);\r\n  }\r\n\r\n  // override\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n\r\n    // render each rectangle separately\r\n    for (let i = 0; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Chest;","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport {mat4} from \"../../../util/matrix\";\r\nimport {buildCubePoints} from \"../../utils/cubePoints\";\r\n\r\nclass Head extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.setInstanceMatrix(mat4.mMult(\r\n      mat4.scale(0.25,0.125,0.15),\r\n      // mat4.zRotation(0),\r\n      // mat4.yRotation(0),\r\n      // mat4.xRotation(0),\r\n      mat4.translation(0,0.2,0)\r\n    ));\r\n\r\n    this.setupPoints();\r\n  }\r\n\r\n  // override\r\n  public setupPoints() {\r\n    this.normals = [];\r\n    this.points = buildCubePoints(this.normals);\r\n  }\r\n\r\n  // override\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n\r\n    // render each rectangle separately\r\n    for (let i = 0; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Head;\r\n","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport {mat4} from \"../../../util/matrix\";\r\nimport {buildCubePoints} from \"../../utils/cubePoints\";\r\n\r\nclass LeftLeg extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    // this.setTransformation(\"rotate\", [0, 0, -45]);  // y-rotate : 0-45, z-rotate : -45, 45\r\n    // this.setTransformation(\"scale\", [0.5, 0.2, 0.2]);\r\n    // this.setTransformation(\"translate\", [-0.25, 0.1, 0]);\r\n\r\n    this.setInstanceMatrix(\r\n      mat4.mMult(\r\n        mat4.scale(0.175, 0.2 , 0.175),\r\n        mat4.zRotation(0),\r\n        // mat4.yRotation(0),\r\n        // mat4.xRotation(0),\r\n        mat4.translation(-0.125, -0.5, 0),\r\n      ),\r\n    );\r\n\r\n    this.centralPoint = [-0.125, -0.4,0];\r\n    \r\n    this.setupPoints();\r\n  }\r\n\r\n  // override\r\n  public setupPoints() {\r\n    this.normals = [];\r\n    this.points = buildCubePoints(this.normals);\r\n  }\r\n\r\n  // override\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n\r\n    // render each rectangle separately\r\n    for (let i = 0; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default LeftLeg;\r\n","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport {mat4} from \"../../../util/matrix\";\r\nimport {buildCubePoints} from \"../../utils/cubePoints\";\r\n\r\nclass RightLeg extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.setInstanceMatrix(\r\n      mat4.mMult(\r\n        mat4.scale(0.175, 0.2, 0.175),\r\n        mat4.zRotation(0),\r\n        // mat4.yRotation(0),\r\n        // mat4.xRotation(0),\r\n        mat4.translation(0.125, -0.5, 0),\r\n      ),\r\n    );\r\n\r\n    this.centralPoint = [0.125, -0.4, 0];\r\n\r\n    this.setupPoints();\r\n  }\r\n\r\n  // override\r\n  public setupPoints() {\r\n    this.normals = [];\r\n    this.points = buildCubePoints(this.normals);\r\n  }\r\n\r\n  // override\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n\r\n    // render each rectangle separately\r\n    for (let i = 0; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default RightLeg;\r\n","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport {mat4} from \"../../../util/matrix\";\r\nimport {buildCubePoints} from \"../../utils/cubePoints\";\r\n\r\nclass RightEar extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.setInstanceMatrix(\r\n      mat4.mMult(\r\n        mat4.scale(0.05125, 0.05, 0.05),\r\n        // mat4.zRotation(0),\r\n        // mat4.yRotation(0),\r\n        // mat4.xRotation(0),\r\n        mat4.translation(0.15, 0.2, 0),\r\n      ),\r\n    );\r\n\r\n    this.setupPoints();\r\n  }\r\n\r\n  // override\r\n  public setupPoints() {\r\n    this.normals = [];\r\n    this.points = buildCubePoints(this.normals);\r\n  }\r\n\r\n  // override\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n\r\n    // render each rectangle separately\r\n    for (let i = 0; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default RightEar;\r\n","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport {mat4} from \"../../../util/matrix\";\r\nimport {buildCubePoints} from \"../../utils/cubePoints\";\r\n\r\nclass LeftEar extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.setInstanceMatrix(\r\n      mat4.mMult(\r\n        mat4.scale(0.05125, 0.05, 0.05),\r\n        // mat4.zRotation(0),\r\n        // mat4.yRotation(0),\r\n        // mat4.xRotation(0),\r\n        mat4.translation(-0.15, 0.2, 0),\r\n      ),\r\n    );\r\n\r\n    this.setupPoints();\r\n  }\r\n\r\n  // override\r\n  public setupPoints() {\r\n    this.normals = [];\r\n    this.points = buildCubePoints(this.normals);\r\n  }\r\n\r\n  // override\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n\r\n    // render each rectangle separately\r\n    for (let i = 0; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default LeftEar;\r\n","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport {mat4} from \"../../../util/matrix\";\r\nimport {buildCubePoints} from \"../../utils/cubePoints\";\r\n\r\nclass LeftArm extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.setInstanceMatrix(\r\n      mat4.mMult(\r\n        mat4.scale(0.1, 0.2, 0.1),\r\n        // mat4.zRotation(0),\r\n        // mat4.yRotation(0),\r\n        mat4.xRotation(0),\r\n        mat4.translation(-0.3, -0.075, 0),\r\n      ),\r\n    );\r\n\r\n    this.centralPoint = [-0.3, 0.05, 0];\r\n\r\n    this.setupPoints();\r\n  }\r\n\r\n  // override\r\n  public setupPoints() {\r\n    this.normals = [];\r\n    this.points = buildCubePoints(this.normals);\r\n  }\r\n\r\n  // override\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n\r\n    // render each rectangle separately\r\n    for (let i = 0; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default LeftArm;\r\n","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport {mat4} from \"../../../util/matrix\";\r\nimport {buildCubePoints} from \"../../utils/cubePoints\";\r\n\r\nclass RightArm extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.setInstanceMatrix(\r\n      mat4.mMult(\r\n        mat4.scale(0.1, 0.2, 0.1),\r\n        // mat4.zRotation(0),\r\n        // mat4.yRotation(0),\r\n        mat4.xRotation(0),\r\n        mat4.translation(0.3, -0.075, 0),\r\n      ),\r\n    );\r\n\r\n    this.centralPoint = [0.3, 0.05, 0];\r\n\r\n    this.setupPoints();\r\n  }\r\n\r\n  // override\r\n  public setupPoints() {\r\n    this.normals = [];\r\n    this.points = buildCubePoints(this.normals);\r\n  }\r\n\r\n  // override\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n\r\n    // render each rectangle separately\r\n    for (let i = 0; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default RightArm;\r\n","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport {mat4} from \"../../../util/matrix\";\r\nimport {buildCubePoints} from \"../../utils/cubePoints\";\r\n\r\nclass LeftShoulder extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.setInstanceMatrix(\r\n      mat4.mMult(\r\n        mat4.scale(0.15, 0.15, 0.15),\r\n        mat4.zRotation(0),\r\n        // mat4.yRotation(0),\r\n        // mat4.xRotation(0),\r\n        mat4.translation(-0.275, 0.075, 0),\r\n      ),\r\n    );\r\n\r\n    this.centralPoint = [-2, 0.05, 0];\r\n\r\n    this.setupPoints();\r\n  }\r\n\r\n  // override\r\n  public setupPoints() {\r\n    this.normals = [];\r\n    this.points = buildCubePoints(this.normals);\r\n  }\r\n\r\n  // override\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n\r\n    // render each rectangle separately\r\n    for (let i = 0; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default LeftShoulder;\r\n","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport {mat4} from \"../../../util/matrix\";\r\nimport {buildCubePoints} from \"../../utils/cubePoints\";\r\n\r\nclass RightShoulder extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.setInstanceMatrix(\r\n      mat4.mMult(\r\n        mat4.scale(0.15, 0.15, 0.15),\r\n        mat4.zRotation(0),\r\n        // mat4.yRotation(0),\r\n        // mat4.xRotation(0),\r\n        mat4.translation(0.275, 0.075, 0),\r\n      ),\r\n    );\r\n\r\n    this.centralPoint = [0.275, 0.05, 0];\r\n\r\n    this.setupPoints();\r\n  }\r\n\r\n  // override\r\n  public setupPoints() {\r\n    this.normals = [];\r\n    this.points = buildCubePoints(this.normals);\r\n  }\r\n\r\n  // override\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n\r\n    // render each rectangle separately\r\n    for (let i = 0; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default RightShoulder;\r\n","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport {mat4} from \"../../../util/matrix\";\r\nimport {buildCubePoints} from \"../../utils/cubePoints\";\r\n\r\nclass LeftHip extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.setInstanceMatrix(\r\n      mat4.mMult(\r\n        mat4.scale(0.15, 0.15 , 0.15),\r\n        mat4.zRotation(0),\r\n        // mat4.yRotation(0),\r\n        // mat4.xRotation(0),\r\n        mat4.translation(-0.125, -0.325, 0),\r\n      ),\r\n    );\r\n\r\n    this.centralPoint = [-0.125, -0.325,0];\r\n    \r\n    this.setupPoints();\r\n  }\r\n\r\n  // override\r\n  public setupPoints() {\r\n    this.normals = [];\r\n    this.points = buildCubePoints(this.normals);\r\n  }\r\n\r\n  // override\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n\r\n    // render each rectangle separately\r\n    for (let i = 0; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default LeftHip;\r\n","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport {mat4} from \"../../../util/matrix\";\r\nimport {buildCubePoints} from \"../../utils/cubePoints\";\r\n\r\nclass RightHip extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.setInstanceMatrix(\r\n      mat4.mMult(\r\n        mat4.scale(0.15, 0.15 , 0.15),\r\n        mat4.zRotation(0),\r\n        // mat4.yRotation(0),\r\n        // mat4.xRotation(0),\r\n        mat4.translation(0.125, -0.325, 0),\r\n      ),\r\n    );\r\n\r\n    this.centralPoint = [0.125, -0.325,0];\r\n    \r\n    this.setupPoints();\r\n  }\r\n\r\n  // override\r\n  public setupPoints() {\r\n    this.normals = [];\r\n    this.points = buildCubePoints(this.normals);\r\n  }\r\n\r\n  // override\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n\r\n    // render each rectangle separately\r\n    for (let i = 0; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default RightHip;\r\n","/**\r\n * Main Component\r\n */\r\nimport Stomach from \"./stomach\";\r\nimport Chest from \"./chest\";\r\nimport Head from \"./head\";\r\n\r\n/**\r\n * Leg Component\r\n */\r\n\r\nimport LeftLeg from \"./leftleg\";\r\nimport RightLeg from \"./rightleg\";\r\n\r\n/**\r\n * Ear Component\r\n */\r\nimport RightEar from \"./rightear\";\r\nimport LeftEar from \"./leftear\";\r\n\r\n/**\r\n * Arm Component\r\n */\r\nimport LeftArm from \"./leftarm\";\r\nimport RightArm from \"./rightarm\";\r\n\r\n/**\r\n * Shoulder Component\r\n */\r\nimport LeftShoulder from \"./leftshoulder\";\r\nimport RightShoulder from \"./rightshoulder\";\r\n\r\n/**\r\n * Hip Component\r\n */\r\nimport LeftHip from \"./lefthip\";\r\nimport RightHip from \"./righthip\";\r\n\r\n// prettier-ignore\r\nexport {\r\n  Head,\r\n  Chest,\r\n  Stomach,\r\n\r\n  LeftArm,\r\n  RightArm,\r\n  \r\n  LeftLeg,\r\n  RightLeg,\r\n  \r\n  RightEar,\r\n  LeftEar,\r\n  \r\n  LeftShoulder,\r\n  RightShoulder,\r\n\r\n  LeftHip,\r\n  RightHip\r\n}\r\n","import Node, {ISaveableNode} from \"../node\";\r\nimport {mat4} from \"../../util/matrix\";\r\nimport SliderManager from \"../../SliderManager\";\r\n\r\nimport {\r\n  Head,\r\n  LeftArm,\r\n  LeftLeg,\r\n  RightArm,\r\n  RightLeg,\r\n  Chest,\r\n  LeftEar,\r\n  RightEar,\r\n  Stomach,\r\n  LeftShoulder,\r\n  RightShoulder,\r\n  LeftHip,\r\n  RightHip,\r\n} from \"./parts\";\r\n\r\nimport {IMirrorManAnimation} from \"./animation\";\r\n\r\nconst X = 0;\r\nconst Y = 1;\r\nconst Z = 2;\r\n\r\nclass MirrorManMovement {\r\n  // Main Body Parts\r\n  public head: number;\r\n  // Leg Parts\r\n  public ll: number;\r\n  public rl: number;\r\n  // Arm Parts\r\n  public la: number;\r\n  public ra: number;\r\n  // Shoulder Parts\r\n  public rs: number;\r\n  public ls: number;\r\n  // Hip Parts\r\n  public lh: number;\r\n  public rh: number;\r\n}\r\n\r\nclass MirrorMan extends Node implements ISaveableNode {\r\n  // Main Body Parts\r\n  public head: Node;\r\n  public chest: Node;\r\n  public stomach: Node;\r\n\r\n  // Leg Parts\r\n  public ll: Node;\r\n  public rl: Node;\r\n\r\n  // Arm Parts\r\n  public la: Node;\r\n  public ra: Node;\r\n\r\n  // Shoulder Parts\r\n  public rs: Node;\r\n  public ls: Node;\r\n\r\n  // Hip Parts\r\n  public lh: Node;\r\n  public rh: Node;\r\n\r\n  // Animation clip\r\n  private _animationClip: IMirrorManAnimation | null = null; // change the animationClip\r\n\r\n  public get animation() {\r\n    return this._animationClip;\r\n  }\r\n\r\n  public set animation(clip: IMirrorManAnimation | null) {\r\n    this._animationClip = clip;\r\n  }\r\n\r\n  public setAnimationClip(clip: IMirrorManAnimation | null) {\r\n    this._animationClip = clip;\r\n  }\r\n\r\n  public static build() {\r\n    // Creational Process\r\n    const mm = new MirrorMan();\r\n\r\n    const ll = new LeftLeg();\r\n    const la = new LeftArm();\r\n\r\n    const ra = new RightArm();\r\n    const rl = new RightLeg();\r\n\r\n    const head = new Head();\r\n\r\n    const chest = new Chest();\r\n\r\n    const le = new LeftEar();\r\n    const re = new RightEar();\r\n\r\n    const ls = new LeftShoulder();\r\n    const rs = new RightShoulder();\r\n\r\n    const lh = new LeftHip();\r\n    const rh = new RightHip();\r\n\r\n    const stomach = new Stomach();\r\n\r\n    // Inject Parts\r\n    mm.head = head;\r\n    mm.chest = chest;\r\n    mm.stomach = stomach;\r\n\r\n    mm.la = la;\r\n    mm.ra = ra;\r\n\r\n    mm.ll = ll;\r\n    mm.rl = rl;\r\n\r\n    mm.rs = rs;\r\n    mm.ls = ls;\r\n\r\n    mm.lh = lh;\r\n    mm.rh = rh;\r\n\r\n    // Constructing Object Parts\r\n    mm.child = chest;\r\n\r\n    chest.child = head;\r\n    head.sibling = stomach;\r\n    stomach.sibling = ls;\r\n    ls.sibling = rs;\r\n\r\n    ls.child = la;\r\n    rs.child = ra;\r\n\r\n    head.child = le;\r\n    le.sibling = re;\r\n\r\n    stomach.child = lh;\r\n    lh.sibling = rh;\r\n\r\n    lh.child = ll;\r\n    rh.child = rl;\r\n\r\n    return mm;\r\n  }\r\n\r\n  public setupPoints() {}\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {}\r\n\r\n  public animate(delta: number) {\r\n    if (!!this._animationClip) {\r\n      this._animationClip.doAnimation(delta, this);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Movement Parts\r\n   */\r\n\r\n  // Head Component\r\n  public moveHead(angle: number) {\r\n    this.getAndSetRotation(this.head, Y, angle);\r\n  }\r\n\r\n  public moveStomach(angle: number) {\r\n    this.getAndSetRotation(this.stomach, Y, angle);\r\n  }\r\n\r\n  // Shoulder Component\r\n\r\n  public moveLeftShoulder(angle: number) {\r\n    this.getAndSetRotation(this.ls, X, angle);\r\n  }\r\n\r\n  public moveRightShoulder(angle: number) {\r\n    this.getAndSetRotation(this.rs, X, angle);\r\n  }\r\n\r\n  // Hips Component\r\n  public moveLeftHips(angle: number) {\r\n    this.getAndSetRotation(this.lh, X, angle);\r\n  }\r\n\r\n  public moveRightHips(angle: number) {\r\n    this.getAndSetRotation(this.rh, X, angle);\r\n  }\r\n\r\n  // Arm Component\r\n\r\n  // Range : -45, 45\r\n  public moveLeftArm(angle: number) {\r\n    this.getAndSetRotation(this.la, X, angle);\r\n  }\r\n\r\n  // Range : -45, 45\r\n  public moveRightArm(angle: number) {\r\n    this.getAndSetRotation(this.ra, X, angle);\r\n  }\r\n\r\n  // Leg Component\r\n\r\n  public moveLeftLeg(angle: number) {\r\n    this.getAndSetRotation(this.ll, X, angle);\r\n  }\r\n\r\n  public moveRightLeg(angle: number) {\r\n    this.getAndSetRotation(this.rl, X, angle);\r\n  }\r\n\r\n  // Body\r\n\r\n  public moveBodyUpDown(length: number) {\r\n    this.getAndSetTranslation(this.chest, Y, length);\r\n  }\r\n\r\n  // Helper\r\n  private getAndSetRotation(part: Node, index: number, angle: number) {\r\n    let rotatePoint = part.getTransformation(\"rotate\");\r\n    rotatePoint[index] = angle;\r\n    part.setTransformation(\"rotate\", rotatePoint, true);\r\n  }\r\n\r\n  private getAndSetTranslation(part: Node, index: number, value: number) {\r\n    let translatePoint = part.getTransformation(\"translate\");\r\n    translatePoint[index] = value;\r\n    part.setTransformation(\"translate\", translatePoint, true);\r\n  }\r\n\r\n  public reset() {\r\n    SliderManager.resetMMSliderValue();\r\n  }\r\n\r\n  // override\r\n  public traverse() {\r\n    this._setTextureCallback!(\"environment\");\r\n    super.traverse();\r\n    this._setTextureCallback!(\"none\");\r\n  }\r\n\r\n  // override\r\n  public saveMovement(): MirrorManMovement {\r\n    const mmm = new MirrorManMovement();\r\n\r\n    mmm.head = this.head.getTransformation(\"rotate\")[Y];\r\n    mmm.la = this.la.getTransformation(\"rotate\")[X];\r\n    mmm.lh = this.lh.getTransformation(\"rotate\")[X];\r\n    mmm.ll = this.ll.getTransformation(\"rotate\")[X];\r\n    mmm.ls = this.ls.getTransformation(\"rotate\")[X];\r\n    mmm.ra = this.ra.getTransformation(\"rotate\")[X];\r\n    mmm.rh = this.rh.getTransformation(\"rotate\")[X];\r\n    mmm.rl = this.rl.getTransformation(\"rotate\")[X];\r\n    mmm.rs = this.rs.getTransformation(\"rotate\")[X];\r\n\r\n    return mmm;\r\n  }\r\n\r\n  public loadMovement(mmm: MirrorManMovement) {\r\n    this.moveHead(mmm.head);\r\n\r\n    this.moveLeftArm(mmm.la);\r\n    this.moveLeftHips(mmm.lh);\r\n    this.moveLeftLeg(mmm.ll);\r\n    this.moveLeftShoulder(mmm.ls);\r\n\r\n    this.moveRightArm(mmm.ra);\r\n    this.moveRightHips(mmm.rh);\r\n    this.moveRightLeg(mmm.rl);\r\n    this.moveRightShoulder(mmm.rs);\r\n  }\r\n\r\n  public load(data: string) {\r\n    const [type, body] = data.split(\"\\n\");\r\n    if (type != \"MirrorMan\") {\r\n      throw \"Failed to load mirror man\";\r\n    }\r\n    this.loadMovement(JSON.parse(body));\r\n    return this;\r\n  }\r\n\r\n  public save() {\r\n    let data = \"MirrorMan\\n\";\r\n    data += JSON.stringify(this.saveMovement());\r\n    return data;\r\n  }\r\n}\r\n\r\nexport default MirrorMan;\r\n","import MirrorMan from \"./main\";\r\n\r\nexport const isMirrorMan = (obj: MirrorMan | any): obj is MirrorMan => {\r\n  return obj && obj.constructor.name == \"MirrorMan\";\r\n};\r\n// prettier-ignore\r\nexport default MirrorMan;\r\n","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport { mat4 } from \"../../../util/matrix\";\r\nimport { buildQuad } from \"../../utils/util\";\r\n\r\nclass Head extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.setInstanceMatrix(mat4.translation(0, 0.95, 0.05));\r\n\r\n    this.setupPoints();\r\n  }\r\n\r\n  // override\r\n  public setupPoints() {\r\n    // empty the normals array\r\n    this.normals = [];\r\n\r\n    // constants used as reference\r\n    // top view, 4 is front\r\n    //    6  1  2\r\n    //  5         3\r\n    //       4\r\n\r\n    const [ bx1, bx2, bx3, bx4, bx5, bx6 ] = [0, 0.15, 0.25, 0, -0.25, -0.15];\r\n    const [ bz1, bz2, bz3, bz4, bz5, bz6 ] = [-0.22, -0.22, 0, 0.25, 0, -0.22];\r\n\r\n    const pt1 = [bx1 / 2, 0.15, bz1 / 2 - 0.09] as Point;\r\n    const pt2 = [bx2 / 2, 0.15, bz2 / 2 - 0.09] as Point;\r\n    const pt3 = [bx3 / 2, 0.15, bz3 / 2 - 0.09] as Point;\r\n    const pt4 = [bx4 / 2, 0.15, bz4 / 2 - 0.09] as Point;\r\n    const pt5 = [bx5 / 2, 0.15, bz5 / 2 - 0.09] as Point;\r\n    const pt6 = [bx6 / 2, 0.15, bz6 / 2 - 0.09] as Point;\r\n\r\n    const pm1 = [bx1, 0, bz1] as Point;\r\n    const pm2 = [bx2, 0, bz2] as Point;\r\n    const pm3 = [bx3, 0, bz3] as Point;\r\n    const pm4 = [bx4, 0, bz4] as Point;\r\n    const pm5 = [bx5, 0, bz5] as Point;\r\n    const pm6 = [bx6, 0, bz6] as Point;\r\n\r\n    const pb1 = [bx1 / 1.5, -0.25, bz1 / 1.5 - 0.05] as Point;\r\n    const pb2 = [bx2 / 1.5, -0.25, bz2 / 1.5 - 0.05] as Point;\r\n    const pb3 = [bx3 / 1.5, -0.25, bz3 / 1.5 - 0.05] as Point;\r\n    const pb4 = [bx4 / 1.5, -0.25, bz4 / 1.5 - 0.05] as Point;\r\n    const pb5 = [bx5 / 1.5, -0.25, bz5 / 1.5 - 0.05] as Point;\r\n    const pb6 = [bx6 / 1.5, -0.25, bz6 / 1.5 - 0.05] as Point;\r\n\r\n    // prettier-ignore\r\n    this.points = [\r\n      // pentagon top-bot\r\n      ...buildQuad(pt1, pt4, pt3, pt2, this.normals),\r\n      ...buildQuad(pt1, pt6, pt5, pt4, this.normals),\r\n      ...buildQuad(pb1, pb4, pb3, pb2, this.normals),\r\n      ...buildQuad(pb1, pb6, pb5, pb4, this.normals),\r\n      // connector top, from back then clockwise (if viewed from top)\r\n      ...buildQuad(pm6, pt6, pt2, pm2, this.normals),\r\n      ...buildQuad(pm2, pt2, pt3, pm3, this.normals),\r\n      ...buildQuad(pm3, pt3, pt4, pm4, this.normals),\r\n      ...buildQuad(pm4, pt4, pt5, pm5, this.normals),\r\n      ...buildQuad(pm5, pt5, pt6, pm6, this.normals),\r\n      // connector top, from back then clockwise (if viewed from top)\r\n      ...buildQuad(pb6, pm6, pm2, pb2, this.normals),\r\n      ...buildQuad(pb2, pm2, pm3, pb3, this.normals),\r\n      ...buildQuad(pb3, pm3, pm4, pb4, this.normals),\r\n      ...buildQuad(pb4, pm4, pm5, pb5, this.normals),\r\n      ...buildQuad(pb5, pm5, pm6, pb6, this.normals),\r\n    ];\r\n  }\r\n\r\n  // override\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n\r\n    // render each rectangle separately\r\n    for (let i = 0; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Head;\r\n","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport { mat4 } from \"../../../util/matrix\";\r\nimport { buildQuad } from \"../../utils/util\";\r\n\r\nclass Hip extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.setTransformation(\"scale\", [0.5, 0.5, 0.5], true);\r\n    // this.setTransformation(\"rotate\", [0, -30, 0], true);\r\n\r\n    this.setupPoints();\r\n  }\r\n\r\n  // override\r\n  public setupPoints() {\r\n    // empty the normals array\r\n    this.normals = [];\r\n\r\n    // constants used as reference\r\n    //    6  1  2\r\n    //  5         3\r\n    //       4\r\n    const p1 = [0, 0];\r\n    const p2 = [0.3, 0];\r\n    const p3 = [0.5, -0.3];\r\n    const p4 = [0, -0.5];\r\n    const p5 = [-0.5, -0.3];\r\n    const p6 = [-0.3, 0];\r\n    const ht = 0.2;\r\n\r\n    // prettier-ignore\r\n    this.points = [\r\n      // pentagon front\r\n      ...buildQuad(\r\n        [...p1, ht] as Point,\r\n        [...p4, ht] as Point,\r\n        [...p3, ht] as Point,\r\n        [...p2, ht] as Point,\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [...p1, ht] as Point,\r\n        [...p6, ht] as Point,\r\n        [...p5, ht] as Point,\r\n        [...p4, ht] as Point,\r\n        this.normals\r\n      ),\r\n      // pentagon back\r\n      ...buildQuad(\r\n        [...p1, -ht] as Point,\r\n        [...p4, -ht] as Point,\r\n        [...p3, -ht] as Point,\r\n        [...p2, -ht] as Point,\r\n        this.normals,\r\n        true\r\n      ),\r\n      ...buildQuad(\r\n        [...p1, -ht] as Point,\r\n        [...p6, -ht] as Point,\r\n        [...p5, -ht] as Point,\r\n        [...p4, -ht] as Point,\r\n        this.normals,\r\n        true\r\n      ),\r\n      // connector, from top then clocwise\r\n      ...buildQuad(\r\n        [...p6, -ht] as Point,\r\n        [...p6, ht] as Point,\r\n        [...p2, ht] as Point,\r\n        [...p2, -ht] as Point,\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [...p2, -ht] as Point,\r\n        [...p2, ht] as Point,\r\n        [...p3, ht] as Point,\r\n        [...p3, -ht] as Point,\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [...p3, -ht] as Point,\r\n        [...p3, ht] as Point,\r\n        [...p4, ht] as Point,\r\n        [...p4, -ht] as Point,\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [...p4, -ht] as Point,\r\n        [...p4, ht] as Point,\r\n        [...p5, ht] as Point,\r\n        [...p5, -ht] as Point,\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [...p5, -ht] as Point,\r\n        [...p5, ht] as Point,\r\n        [...p6, ht] as Point,\r\n        [...p6, -ht] as Point,\r\n        this.normals\r\n      ),\r\n    ];\r\n  }\r\n\r\n  // override\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n\r\n    // render each rectangle separately\r\n    for (let i = 0; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Hip;\r\n","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport { mat4 } from \"../../../util/matrix\";\r\nimport { buildQuad } from \"../../utils/util\";\r\n\r\nclass Chest extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.setTransformation(\"translate\", [0, 0, 0]);\r\n\r\n    this.setupPoints();\r\n  }\r\n\r\n  // override\r\n  public setupPoints() {\r\n    // empty the normals array\r\n    this.normals = [];\r\n\r\n    // constants used as reference\r\n    //   1       2\r\n    //  6         3\r\n    //    5     4\r\n    const p1 = [-0.35, 0.7];\r\n    const p2 = [0.35, 0.7];\r\n    const p3 = [0.4, 0.4];\r\n    const p4 = [0.3, 0];\r\n    const p5 = [-0.3, 0];\r\n    const p6 = [-0.4, 0.4];\r\n    const ht1 = 0.2;\r\n    const ht2 = 0.25;\r\n\r\n    // prettier-ignore\r\n    this.points = [\r\n      // hexagon front\r\n      ...buildQuad(\r\n        [...p1, ht1] as Point,\r\n        [...p6, ht2] as Point,\r\n        [...p3, ht2] as Point,\r\n        [...p2, ht1] as Point,\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [...p6, ht2] as Point,\r\n        [...p5, ht1] as Point,\r\n        [...p4, ht1] as Point,\r\n        [...p3, ht2] as Point,\r\n        this.normals\r\n      ),\r\n      // hexagon back\r\n      ...buildQuad(\r\n        [...p1, -ht1] as Point,\r\n        [...p6, -ht2] as Point,\r\n        [...p3, -ht2] as Point,\r\n        [...p2, -ht1] as Point,\r\n        this.normals,\r\n        true\r\n      ),\r\n      ...buildQuad(\r\n        [...p6, -ht2] as Point,\r\n        [...p5, -ht1] as Point,\r\n        [...p4, -ht1] as Point,\r\n        [...p3, -ht2] as Point,\r\n        this.normals,\r\n        true\r\n      ),\r\n      // connector, top then clocwise\r\n      ...buildQuad(\r\n        [...p1, -ht1] as Point,\r\n        [...p1,  ht1] as Point,\r\n        [...p2,  ht1] as Point,\r\n        [...p2, -ht1] as Point,\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [...p2, -ht1] as Point,\r\n        [...p2,  ht1] as Point,\r\n        [...p3,  ht2] as Point,\r\n        [...p3, -ht2] as Point,\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [...p3, -ht2] as Point,\r\n        [...p3,  ht2] as Point,\r\n        [...p4,  ht1] as Point,\r\n        [...p4, -ht1] as Point,\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [...p4, -ht1] as Point,\r\n        [...p4,  ht1] as Point,\r\n        [...p5,  ht1] as Point,\r\n        [...p5, -ht1] as Point,\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [...p5, -ht1] as Point,\r\n        [...p5,  ht1] as Point,\r\n        [...p6,  ht2] as Point,\r\n        [...p6, -ht2] as Point,\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [...p6, -ht2] as Point,\r\n        [...p6,  ht2] as Point,\r\n        [...p1,  ht1] as Point,\r\n        [...p1, -ht1] as Point,\r\n        this.normals\r\n      ),\r\n    ];\r\n  }\r\n\r\n  // override\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n\r\n    // render each rectangle separately\r\n    for (let i = 0; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Chest;\r\n","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport { mat4 } from \"../../../util/matrix\";\r\nimport { buildQuad } from \"../../utils/util\";\r\n\r\nclass Shield extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.setInstanceMatrix(mat4.mMult(\r\n      mat4.scale(0.8, 0.8, 0.8),\r\n      mat4.zRotation(90),\r\n      mat4.yRotation(90),\r\n      mat4.translation(0.6, -0.1, -0.2)\r\n    ));\r\n\r\n    this.centralPoint = [0, 0, 0];\r\n\r\n    this.setupPoints();\r\n  }\r\n\r\n  // override\r\n  public setupPoints() {\r\n    // empty the normals array\r\n    this.normals = [];\r\n\r\n    // constants used as reference\r\n    //    6  1  2\r\n    //  5         3\r\n    //       4\r\n    const p1 = [0, 0.78];\r\n    const p2 = [0.60, 0.40];\r\n    const p3 = [0.44, -0.35];\r\n    const p4 = [0, -0.78];\r\n    const p5 = [-0.44, -0.35];\r\n    const p6 = [-0.60, 0.40];\r\n    const ht = 0.05;\r\n\r\n    // prettier-ignore\r\n    this.points = [\r\n      // pentagon front\r\n      ...buildQuad(\r\n        [...p1, ht] as Point,\r\n        [...p4, ht] as Point,\r\n        [...p3, ht] as Point,\r\n        [...p2, ht] as Point,\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [...p1, ht] as Point,\r\n        [...p6, ht] as Point,\r\n        [...p5, ht] as Point,\r\n        [...p4, ht] as Point,\r\n        this.normals\r\n      ),\r\n      // pentagon back\r\n      ...buildQuad(\r\n        [...p1, -ht] as Point,\r\n        [...p4, -ht] as Point,\r\n        [...p3, -ht] as Point,\r\n        [...p2, -ht] as Point,\r\n        this.normals,\r\n        true\r\n      ),\r\n      ...buildQuad(\r\n        [...p1, -ht] as Point,\r\n        [...p6, -ht] as Point,\r\n        [...p5, -ht] as Point,\r\n        [...p4, -ht] as Point,\r\n        this.normals,\r\n        true\r\n      ),\r\n      // connector, from p1 then clocwise\r\n      ...buildQuad(\r\n        [...p1, -ht] as Point,\r\n        [...p1, ht] as Point,\r\n        [...p2, ht] as Point,\r\n        [...p2, -ht] as Point,\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [...p2, -ht] as Point,\r\n        [...p2, ht] as Point,\r\n        [...p3, ht] as Point,\r\n        [...p3, -ht] as Point,\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [...p3, -ht] as Point,\r\n        [...p3, ht] as Point,\r\n        [...p4, ht] as Point,\r\n        [...p4, -ht] as Point,\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [...p4, -ht] as Point,\r\n        [...p4, ht] as Point,\r\n        [...p5, ht] as Point,\r\n        [...p5, -ht] as Point,\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [...p5, -ht] as Point,\r\n        [...p5, ht] as Point,\r\n        [...p6, ht] as Point,\r\n        [...p6, -ht] as Point,\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [...p6, -ht] as Point,\r\n        [...p6, ht] as Point,\r\n        [...p1, ht] as Point,\r\n        [...p1, -ht] as Point,\r\n        this.normals\r\n      ),\r\n    ];\r\n  }\r\n\r\n  // override\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n    this._useNormalMapCallback!(true);\r\n\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n\r\n    // render each rectangle separately\r\n    // front shield\r\n    for (let i = 0; i < 2; i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n\r\n    this._useNormalMapCallback!(false);\r\n\r\n    // other parts\r\n    for (let i = 2; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Shield;\r\n","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport { mat4 } from \"../../../util/matrix\";\r\nimport { buildQuad } from \"../../utils/util\";\r\n\r\nconst buildWrapper = (points: number[][], ht: number, normalArray: number[]) => {\r\n  const out = [];\r\n  for (let i = 0; i < points.length; i++) {\r\n    out.push(...buildQuad(\r\n      [...points[i], -ht] as Point,\r\n      [...points[i], ht] as Point,\r\n      [...points[(i + 1) % points.length], ht] as Point,\r\n      [...points[(i + 1) % points.length], -ht] as Point,\r\n      normalArray\r\n    ));\r\n  }\r\n  return out;\r\n}\r\n\r\nclass Sword extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.setInstanceMatrix(mat4.mMult(\r\n      mat4.scale(0.8, 0.8, 0.8),\r\n      // mat4.zRotation(0),\r\n      mat4.yRotation(90),\r\n      mat4.xRotation(90),\r\n      mat4.translation(-0.45, -0.2, 0.51),\r\n    ));\r\n\r\n    this.setupPoints();\r\n  }\r\n\r\n  // override\r\n  public setupPoints() {\r\n    // empty the normals array\r\n    this.normals = [];\r\n\r\n    // constants used as reference\r\n\r\n    // half thickness\r\n    const ht1 = 0.05;\r\n    const ht2 = 0.035;\r\n    const ht3 = 0.0275;\r\n\r\n    // A\r\n    //         0\r\n    //   8   /   \\   2\r\n    // 7   9   5   1   3\r\n    //   \\   /   \\   /\r\n    //     6       4\r\n    const pa0 = [0, -0.176];\r\n    const pa1 = [0.188, -0.36];\r\n    const pa2 = [0.24, -0.312];\r\n    const pa3 = [0.296, -0.36];\r\n    const pa4 = [0.188, -0.472];\r\n    const pa5 = [0, -0.288];\r\n    const pa6 = [-0.188, -0.472];\r\n    const pa7 = [-0.296, -0.36];\r\n    const pa8 = [-0.24, -0.312];\r\n    const pa9 = [-0.188, -0.36];\r\n\r\n    // B\r\n    //   0\r\n    // 3   1\r\n    //   2\r\n    const pb0 = [0, -0.288];\r\n    const pb1 = [0.136, -0.416];\r\n    const pb2 = [0, -0.552];\r\n    const pb3 = [-0.136, -0.416];\r\n\r\n    // C\r\n    // handle (x, z)\r\n    // from front edge\r\n    const pc0 = [0, 0.035];\r\n    const pc1 = [0.05, 0];\r\n    const pc2 = [0, -0.035];\r\n    const pc3 = [-0.05, 0];\r\n    const pcyt = -0.416;\r\n    const pcyb = -0.800;\r\n\r\n    // D\r\n    //   0\r\n    // 3   1\r\n    //   2\r\n    const pd0 = [0, -0.737];\r\n    const pd1 = [0.108, -0.840];\r\n    const pd2 = [0, -0.952];\r\n    const pd3 = [-0.108, -0.840];\r\n\r\n    // E\r\n    // blade (x, z)\r\n    // (top view, 0 is back)\r\n    //   0  1\r\n    // 5      2\r\n    //   4  3\r\n    const pe0 = [-0.056, -ht3];\r\n    const pe1 = [0.056, -ht3];\r\n    const pe2 = [0.096, 0];\r\n    const pe3 = [0.056, ht3];\r\n    const pe4 = [-0.056, ht3];\r\n    const pe5 = [-0.096, 0];\r\n    const peyt = 0.768;\r\n    const peyb = -0.288;\r\n\r\n    // F\r\n    // blade tip\r\n    //     0\r\n    //   / 4 \\\r\n    // 3 7   5 1\r\n    //   \\ 6 /\r\n    //     2\r\n    const pf0 = [0, 0.981];\r\n    const pf1 = [0.130, 0.808];\r\n    const pf2 = [0, 0.635];\r\n    const pf3 = [-0.130, 0.808];\r\n    const pf4 = [0, 0.928];\r\n    const pf5 = [0.090, 0.808];\r\n    const pf6 = [0, 0.688];\r\n    const pf7 = [-0.090, 0.808];\r\n\r\n    // prettier-ignore\r\n    this.points = [\r\n      // A front\r\n      ...buildQuad(\r\n        [...pa8, ht1] as Point,\r\n        [...pa7, ht1] as Point,\r\n        [...pa6, ht1] as Point,\r\n        [...pa9, ht1] as Point,\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [...pa9, ht1] as Point,\r\n        [...pa6, ht1] as Point,\r\n        [...pa5, ht1] as Point,\r\n        [...pa0, ht1] as Point,\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [...pa0, ht1] as Point,\r\n        [...pa5, ht1] as Point,\r\n        [...pa4, ht1] as Point,\r\n        [...pa1, ht1] as Point,\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [...pa1, ht1] as Point,\r\n        [...pa4, ht1] as Point,\r\n        [...pa3, ht1] as Point,\r\n        [...pa2, ht1] as Point,\r\n        this.normals\r\n      ),\r\n      // A back\r\n      ...buildQuad(\r\n        [...pa8, -ht1] as Point,\r\n        [...pa7, -ht1] as Point,\r\n        [...pa6, -ht1] as Point,\r\n        [...pa9, -ht1] as Point,\r\n        this.normals,\r\n        true\r\n      ),\r\n      ...buildQuad(\r\n        [...pa9, -ht1] as Point,\r\n        [...pa6, -ht1] as Point,\r\n        [...pa5, -ht1] as Point,\r\n        [...pa0, -ht1] as Point,\r\n        this.normals,\r\n        true\r\n      ),\r\n      ...buildQuad(\r\n        [...pa0, -ht1] as Point,\r\n        [...pa5, -ht1] as Point,\r\n        [...pa4, -ht1] as Point,\r\n        [...pa1, -ht1] as Point,\r\n        this.normals,\r\n        true\r\n      ),\r\n      ...buildQuad(\r\n        [...pa1, -ht1] as Point,\r\n        [...pa4, -ht1] as Point,\r\n        [...pa3, -ht1] as Point,\r\n        [...pa2, -ht1] as Point,\r\n        this.normals,\r\n        true\r\n      ),\r\n      // A connector\r\n      ...buildWrapper(\r\n        [pa0, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9],\r\n        ht1,\r\n        this.normals\r\n      ),\r\n      // B front\r\n      ...buildQuad(\r\n        [...pb0, ht2] as Point,\r\n        [...pb3, ht2] as Point,\r\n        [...pb2, ht2] as Point,\r\n        [...pb1, ht2] as Point,\r\n        this.normals\r\n      ),\r\n      // B back\r\n      ...buildQuad(\r\n        [...pb0, -ht2] as Point,\r\n        [...pb3, -ht2] as Point,\r\n        [...pb2, -ht2] as Point,\r\n        [...pb1, -ht2] as Point,\r\n        this.normals,\r\n        true\r\n      ),\r\n      // B connector\r\n      ...buildWrapper(\r\n        [pb0, pb1, pb2, pb3],\r\n        ht2,\r\n        this.normals\r\n      ),\r\n      // C\r\n      ...buildQuad(\r\n        [pc0[0], pcyt, pc0[1]],\r\n        [pc0[0], pcyb, pc0[1]],\r\n        [pc1[0], pcyb, pc1[1]],\r\n        [pc1[0], pcyt, pc1[1]],\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [pc1[0], pcyt, pc1[1]],\r\n        [pc1[0], pcyb, pc1[1]],\r\n        [pc2[0], pcyb, pc2[1]],\r\n        [pc2[0], pcyt, pc2[1]],\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [pc2[0], pcyt, pc2[1]],\r\n        [pc2[0], pcyb, pc2[1]],\r\n        [pc3[0], pcyb, pc3[1]],\r\n        [pc3[0], pcyt, pc3[1]],\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [pc3[0], pcyt, pc3[1]],\r\n        [pc3[0], pcyb, pc3[1]],\r\n        [pc0[0], pcyb, pc0[1]],\r\n        [pc0[0], pcyt, pc0[1]],\r\n        this.normals\r\n      ),\r\n      // D front\r\n      ...buildQuad(\r\n        [...pd0, ht1] as Point,\r\n        [...pd3, ht1] as Point,\r\n        [...pd2, ht1] as Point,\r\n        [...pd1, ht1] as Point,\r\n        this.normals\r\n      ),\r\n      // D back\r\n      ...buildQuad(\r\n        [...pd0, -ht1] as Point,\r\n        [...pd3, -ht1] as Point,\r\n        [...pd2, -ht1] as Point,\r\n        [...pd1, -ht1] as Point,\r\n        this.normals,\r\n        true\r\n      ),\r\n      // D connector\r\n      ...buildWrapper(\r\n        [pd0, pd1, pd2, pd3],\r\n        ht1,\r\n        this.normals\r\n      ),\r\n      // E\r\n      ...buildQuad(\r\n        [pe0[0], peyt, pe0[1]],\r\n        [pe1[0], peyt, pe1[1]],\r\n        [pe1[0], peyb, pe1[1]],\r\n        [pe0[0], peyb, pe0[1]],\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [pe1[0], peyt, pe1[1]],\r\n        [pe2[0], peyt, pe2[1]],\r\n        [pe2[0], peyb, pe2[1]],\r\n        [pe1[0], peyb, pe1[1]],\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [pe2[0], peyt, pe2[1]],\r\n        [pe3[0], peyt, pe3[1]],\r\n        [pe3[0], peyb, pe3[1]],\r\n        [pe2[0], peyb, pe2[1]],\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [pe3[0], peyt, pe3[1]],\r\n        [pe4[0], peyt, pe4[1]],\r\n        [pe4[0], peyb, pe4[1]],\r\n        [pe3[0], peyb, pe3[1]],\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [pe4[0], peyt, pe4[1]],\r\n        [pe5[0], peyt, pe5[1]],\r\n        [pe5[0], peyb, pe5[1]],\r\n        [pe4[0], peyb, pe4[1]],\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [pe5[0], peyt, pe5[1]],\r\n        [pe0[0], peyt, pe0[1]],\r\n        [pe0[0], peyb, pe0[1]],\r\n        [pe5[0], peyb, pe5[1]],\r\n        this.normals\r\n      ),\r\n      // F front-back\r\n      ...buildQuad(\r\n        [...pf4, ht3] as Point,\r\n        [...pf7, ht3] as Point,\r\n        [...pf6, ht3] as Point,\r\n        [...pf5, ht3] as Point,\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [...pf4, -ht3] as Point,\r\n        [...pf7, -ht3] as Point,\r\n        [...pf6, -ht3] as Point,\r\n        [...pf5, -ht3] as Point,\r\n        this.normals,\r\n        true\r\n      ),\r\n      // F connector front\r\n      ...buildQuad(\r\n        [...pf0, 0] as Point,\r\n        [...pf4, ht3] as Point,\r\n        [...pf5, ht3] as Point,\r\n        [...pf1, 0] as Point,\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [...pf1, 0] as Point,\r\n        [...pf5, ht3] as Point,\r\n        [...pf6, ht3] as Point,\r\n        [...pf2, 0] as Point,\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [...pf2, 0] as Point,\r\n        [...pf6, ht3] as Point,\r\n        [...pf7, ht3] as Point,\r\n        [...pf3, 0] as Point,\r\n        this.normals\r\n      ),\r\n      ...buildQuad(\r\n        [...pf3, 0] as Point,\r\n        [...pf7, ht3] as Point,\r\n        [...pf4, ht3] as Point,\r\n        [...pf0, 0] as Point,\r\n        this.normals\r\n      ),\r\n      // F connector back\r\n      ...buildQuad(\r\n        [...pf0, 0] as Point,\r\n        [...pf4, -ht3] as Point,\r\n        [...pf5, -ht3] as Point,\r\n        [...pf1, 0] as Point,\r\n        this.normals, true\r\n      ),\r\n      ...buildQuad(\r\n        [...pf1, 0] as Point,\r\n        [...pf5, -ht3] as Point,\r\n        [...pf6, -ht3] as Point,\r\n        [...pf2, 0] as Point,\r\n        this.normals, true\r\n      ),\r\n      ...buildQuad(\r\n        [...pf2, 0] as Point,\r\n        [...pf6, -ht3] as Point,\r\n        [...pf7, -ht3] as Point,\r\n        [...pf3, 0] as Point,\r\n        this.normals, true\r\n      ),\r\n      ...buildQuad(\r\n        [...pf3, 0] as Point,\r\n        [...pf7, -ht3] as Point,\r\n        [...pf4, -ht3] as Point,\r\n        [...pf0, 0] as Point,\r\n        this.normals, true\r\n      ),\r\n    ];\r\n  }\r\n\r\n  // override\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n\r\n    // render each rectangle separately\r\n    for (let i = 0; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Sword;\r\n","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport { mat4 } from \"../../../util/matrix\";\r\nimport { buildQuad } from \"../../utils/util\";\r\nimport { buildCubePoints } from \"../../utils/cubePoints\";\r\n\r\nclass LeftUpperArm extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.setInstanceMatrix(mat4.mMult(\r\n      mat4.scale(0.20, 0.55, 0.20),\r\n      // mat4.zRotation(10),\r\n      // mat4.yRotation(0),\r\n      // mat4.xRotation(-30),\r\n      mat4.translation(0.45, 0.41, 0),\r\n    ));\r\n\r\n    // 0.25 = xtranslation\r\n    // -0.25 = ytranslation + 1 / 2 * height\r\n    this.centralPoint = [0.45, 0.57, 0];\r\n\r\n    this.setupPoints();\r\n  }\r\n\r\n  // override\r\n  public setupPoints() {\r\n    // empty the normals array\r\n    this.normals = [];\r\n    this.points = buildCubePoints(this.normals);\r\n  }\r\n\r\n  // override\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n\r\n    // render each rectangle separately\r\n    for (let i = 0; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default LeftUpperArm;\r\n","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport { mat4 } from \"../../../util/matrix\";\r\nimport { buildQuad } from \"../../utils/util\";\r\nimport { buildCubePoints } from \"../../utils/cubePoints\";\r\n\r\nclass LeftLowerArm extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.setInstanceMatrix(mat4.mMult(\r\n      mat4.scale(0.18, 0.55, 0.18),\r\n      // mat4.zRotation(0),\r\n      // mat4.yRotation(0),\r\n      // mat4.xRotation(0),\r\n      mat4.translation(0.45, 0, 0),\r\n    ));\r\n\r\n    // 0.25 = xtranslation\r\n    // -0.25 = ytranslation + 1 / 2 * height\r\n    this.centralPoint = [0.45, 0.20, 0];\r\n\r\n    this.setTransformation(\"rotate\", [0, 0, 0], true);\r\n\r\n    this.setupPoints();\r\n  }\r\n\r\n  // override\r\n  public setupPoints() {\r\n    // empty the normals array\r\n    this.normals = [];\r\n    this.points = buildCubePoints(this.normals);\r\n  }\r\n\r\n  // override\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n\r\n    // render each rectangle separately\r\n    for (let i = 0; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default LeftLowerArm;\r\n","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport { mat4 } from \"../../../util/matrix\";\r\nimport { buildQuad } from \"../../utils/util\";\r\nimport { buildCubePoints } from \"../../utils/cubePoints\";\r\n\r\nclass RightUpperArm extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n\r\n    this.setInstanceMatrix(mat4.mMult(\r\n      mat4.scale(0.20, 0.55, 0.20),\r\n      // mat4.zRotation(10),\r\n      // mat4.yRotation(0),\r\n      // mat4.xRotation(-30),\r\n      mat4.translation(-0.45, 0.41, 0),\r\n    ));\r\n\r\n    // 0.25 = xtranslation\r\n    // -0.25 = ytranslation + 1 / 2 * height\r\n    this.centralPoint = [-0.45, 0.57, 0];\r\n\r\n    this.setupPoints();\r\n  }\r\n\r\n  // override\r\n  public setupPoints() {\r\n    // empty the normals array\r\n    this.normals = [];\r\n    this.points = buildCubePoints(this.normals);\r\n  }\r\n\r\n  // override\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n\r\n    // render each rectangle separately\r\n    for (let i = 0; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default RightUpperArm;\r\n","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport { mat4 } from \"../../../util/matrix\";\r\nimport { buildQuad } from \"../../utils/util\";\r\nimport { buildCubePoints } from \"../../utils/cubePoints\";\r\n\r\nclass RightLowerArm extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.setInstanceMatrix(mat4.mMult(\r\n      mat4.scale(0.18, 0.55, 0.18),\r\n      // mat4.zRotation(0),\r\n      // mat4.yRotation(0),\r\n      // mat4.xRotation(0),\r\n      mat4.translation(-0.45, 0, 0),\r\n    ));\r\n\r\n    // 0.25 = xtranslation\r\n    // -0.25 = ytranslation + 1 / 2 * height\r\n    this.centralPoint = [-0.45, 0.20, 0];\r\n\r\n    this.setTransformation(\"rotate\", [0, 0, 0], true);\r\n\r\n    this.setupPoints();\r\n  }\r\n\r\n  // override\r\n  public setupPoints() {\r\n    // empty the normals array\r\n    this.normals = [];\r\n    this.points = buildCubePoints(this.normals);\r\n  }\r\n\r\n  // override\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n\r\n    // render each rectangle separately\r\n    for (let i = 0; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default RightLowerArm;\r\n","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport { mat4 } from \"../../../util/matrix\";\r\nimport { buildQuad } from \"../../utils/util\";\r\nimport { buildCubePoints } from \"../../utils/cubePoints\";\r\n\r\nclass LeftUpperLeg extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.setInstanceMatrix(mat4.mMult(\r\n      mat4.scale(0.3, 0.5, 0.3),\r\n      // mat4.zRotation(0),\r\n      // mat4.yRotation(0),\r\n      // mat4.xRotation(0),\r\n      mat4.translation(0.21, -0.5, 0),\r\n    ));\r\n\r\n    this.centralPoint = [0.21, -0.25, 0];\r\n\r\n    this.setTransformation(\"rotate\", [-8, 0, 0], true);\r\n\r\n    this.setupPoints();\r\n  }\r\n\r\n  // override\r\n  public setupPoints() {\r\n    // empty the normals array\r\n    this.normals = [];\r\n    this.points = buildCubePoints(this.normals);\r\n  }\r\n\r\n  // override\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n\r\n    // render each rectangle separately\r\n    for (let i = 0; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default LeftUpperLeg;\r\n","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport { mat4 } from \"../../../util/matrix\";\r\nimport { buildQuad } from \"../../utils/util\";\r\nimport { buildCubePoints } from \"../../utils/cubePoints\";\r\n\r\nclass LeftLowerLeg extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.setTransformation(\"rotate\", [0, 0, 0], true);\r\n\r\n    this.setInstanceMatrix(mat4.mMult(\r\n      mat4.scale(0.25, 0.65, 0.25),\r\n      // mat4.zRotation(0),\r\n      // mat4.yRotation(0),\r\n      // mat4.xRotation(0),\r\n      mat4.translation(0.21, -0.975, 0),\r\n    ));\r\n\r\n    // 0.25 = xtranslation\r\n    // -0.25 = ytranslation + 1 / 2 * height\r\n    this.centralPoint = [0.21, -0.7, 0];\r\n\r\n    this.setTransformation(\"rotate\", [16, 0, 0], true);\r\n\r\n    this.setupPoints();\r\n  }\r\n\r\n  // override\r\n  public setupPoints() {\r\n    // empty the normals array\r\n    this.normals = [];\r\n    this.points = buildCubePoints(this.normals);\r\n  }\r\n\r\n  // override\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n\r\n    // render each rectangle separately\r\n    for (let i = 0; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default LeftLowerLeg;\r\n","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport { mat4 } from \"../../../util/matrix\";\r\nimport { buildQuad } from \"../../utils/util\";\r\nimport { buildCubePoints } from \"../../utils/cubePoints\";\r\n\r\nclass RightUpperLeg extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.setInstanceMatrix(mat4.multiply(\r\n      mat4.scale(0.3, 0.5, 0.3),\r\n      mat4.translation(-0.21, -0.5, 0)\r\n    ));\r\n\r\n    this.centralPoint = [-0.21, -0.25, 0];\r\n\r\n    this.setTransformation(\"rotate\", [-8, 0, 0], true);\r\n\r\n    this.setupPoints();\r\n  }\r\n\r\n  // override\r\n  public setupPoints() {\r\n    // empty the normals array\r\n    this.normals = [];\r\n    this.points = buildCubePoints(this.normals);\r\n  }\r\n\r\n  // override\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n\r\n    // render each rectangle separately\r\n    for (let i = 0; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default RightUpperLeg;\r\n","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport { mat4 } from \"../../../util/matrix\";\r\nimport { buildQuad } from \"../../utils/util\";\r\nimport { buildCubePoints } from \"../../utils/cubePoints\";\r\n\r\nclass RightLowerLeg extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.setInstanceMatrix(mat4.multiply(\r\n      mat4.scale(0.25, 0.65, 0.25),\r\n      // mat4.zRotation(0),\r\n      // mat4.yRotation(0),\r\n      // mat4.xRotation(0),\r\n      mat4.translation(-0.21, -0.975, 0),\r\n    ));\r\n\r\n    // 0.25 = xtranslation\r\n    // -0.25 = ytranslation + 1 / 2 * height\r\n    this.centralPoint = [-0.21, -0.7, 0];\r\n\r\n    this.setTransformation(\"rotate\", [16, 0, 0], true);\r\n\r\n    this.setupPoints();\r\n  }\r\n\r\n  // override\r\n  public setupPoints() {\r\n    // empty the normals array\r\n    this.normals = [];\r\n    this.points = buildCubePoints(this.normals);\r\n  }\r\n\r\n  // override\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n\r\n    // render each rectangle separately\r\n    for (let i = 0; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default RightLowerLeg;\r\n","import Head from \"./head\";\r\nimport Hip from \"./hip\";\r\nimport Chest from \"./chest\";\r\nimport Shield from \"./shield\";\r\nimport Sword from \"./sword\";\r\nimport LeftUpperArm from \"./leftUpperArm\";\r\nimport LeftLowerArm from \"./leftLowerArm\";\r\nimport RightUpperArm from \"./rightUpperArm\";\r\nimport RightLowerArm from \"./rightLowerArm\";\r\nimport LeftUpperLeg from \"./leftUpperLeg\";\r\nimport LeftLowerLeg from \"./leftLowerLeg\";\r\nimport RightUpperLeg from \"./rightUpperLeg\";\r\nimport RightLowerLeg from \"./rightLowerLeg\";\r\n\r\n// prettier-ignore\r\nexport {\r\n  Head,\r\n  Hip,\r\n  Chest,\r\n  Shield,\r\n  Sword,\r\n  LeftUpperArm,\r\n  LeftLowerArm,\r\n  RightUpperArm,\r\n  RightLowerArm,\r\n  LeftUpperLeg,\r\n  LeftLowerLeg,\r\n  RightUpperLeg,\r\n  RightLowerLeg\r\n}\r\n","import Node, {ISaveableNode} from \"../node\";\r\nimport * as parts from \"./parts\";\r\nimport { IKnightAnimation } from \"./animation\";\r\nimport SliderManager from \"../../SliderManager\";\r\nimport { mat4 } from \"../../util/matrix\";\r\n\r\nconst X = 0;\r\nconst Y = 1;\r\nconst Z = 2;\r\n\r\nclass KnightMovement {\r\n  public hip: number;\r\n  public chest: number;\r\n  public head: number;\r\n  public luaX: number;\r\n  public luaY: number;\r\n  public luaZ: number;\r\n  public ruaX: number;\r\n  public ruaY: number;\r\n  public ruaZ: number;\r\n  public llaBend: number;\r\n  public llaTwist: number;\r\n  public rlaBend: number;\r\n  public rlaTwist: number;\r\n  public lulX: number;\r\n  public lulZ: number;\r\n  public rulX: number;\r\n  public rulZ: number;\r\n  public lllBend: number;\r\n  public rllBend: number;\r\n  public translateHipY: number;\r\n  public shieldX: number;\r\n}\r\n\r\nclass Knight extends Node implements ISaveableNode {\r\n  // Body Parts\r\n  // main\r\n  public hip: Node;\r\n  public chest: Node;\r\n  public head: Node;\r\n  // arm\r\n  public lua: Node;\r\n  public lla: Node;\r\n  public rua: Node;\r\n  public rla: Node;\r\n  // leg\r\n  public lul: Node;\r\n  public lll: Node;\r\n  public rul: Node;\r\n  public rll: Node;\r\n  // equipment\r\n  public shield: Node;\r\n  public sword: Node;\r\n\r\n  // Animation clip\r\n  private _animationClip: IKnightAnimation | null = null;\r\n\r\n  public get animation() {\r\n    return this._animationClip;\r\n  }\r\n\r\n  public set animation(clip: IKnightAnimation | null) {\r\n    this._animationClip = clip;\r\n  }\r\n\r\n  public setAnimationClip(clip: IKnightAnimation | null) {\r\n    this._animationClip = clip;\r\n  }\r\n\r\n  /*\r\n   * Builder\r\n   */\r\n\r\n  public static build() {\r\n    // New knight object\r\n    const knight = new Knight();\r\n\r\n    // Knight parts\r\n    // main\r\n    const hip = knight.hip = new parts.Hip();\r\n    const chest = knight.chest = new parts.Chest();\r\n    const head = knight.head = new parts.Head();\r\n    // arm\r\n    const lua = knight.lua = new parts.LeftUpperArm();\r\n    const lla = knight.lla = new parts.LeftLowerArm();\r\n    const rua = knight.rua = new parts.RightUpperArm();\r\n    const rla = knight.rla = new parts.RightLowerArm();\r\n    // leg\r\n    const lul = knight.lul = new parts.LeftUpperLeg();\r\n    const lll = knight.lll = new parts.LeftLowerLeg();\r\n    const rul = knight.rul = new parts.RightUpperLeg();\r\n    const rll = knight.rll = new parts.RightLowerLeg();\r\n    // equipment\r\n    const shield = knight.shield = new parts.Shield();\r\n    const sword = knight.sword = new parts.Sword();\r\n\r\n    // Tree structure\r\n    //                    knight\r\n    //                      |\r\n    //            ________ hip ____\r\n    //           /          |      \\\r\n    //      chest          lul      rul\r\n    //     /  |  \\          |        |\r\n    // head  lua  rua      lll      rll\r\n    //        |    |\r\n    //       lla  rla\r\n    //        |    |\r\n    //    shield  sword\r\n    // root\r\n    knight.child = hip;\r\n    // hip childs\r\n    hip.child = chest;\r\n    chest.sibling = lul;\r\n    lul.sibling = rul;\r\n    // chest childs\r\n    chest.child = head;\r\n    head.sibling = lua;\r\n    lua.sibling = rua;\r\n    // arm (lua, lla, rua, rla)\r\n    lua.child = lla;\r\n    lla.child = shield;\r\n    rua.child = rla;\r\n    rla.child = sword;\r\n    // leg (lul, rul)\r\n    lul.child = lll;\r\n    rul.child = rll;\r\n\r\n    // Return object built\r\n    return knight;\r\n  }\r\n\r\n  /*\r\n   * Node inheritted method\r\n   */\r\n\r\n  // override\r\n  public traverse() {\r\n    this._setTextureCallback!(\"bump\");\r\n    super.traverse(mat4.identity(), true);\r\n    this._setTextureCallback!(\"none\");\r\n  }\r\n\r\n  // implement\r\n  public setupPoints() {}\r\n\r\n  // implement\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {}\r\n\r\n  /*\r\n   * Movement\r\n   */\r\n\r\n  // Hip\r\n  public moveHip(angle: number) {\r\n    this.getAndSetRotation(this.hip, Y, angle);\r\n  }\r\n\r\n  // Chest\r\n  public moveChest(angle: number) {\r\n    this.getAndSetRotation(this.chest, Y, angle);\r\n  }\r\n\r\n  // Head\r\n  public moveHead(angle: number) {\r\n    this.getAndSetRotation(this.head, Y, angle);\r\n  }\r\n\r\n  // Upper arm\r\n  public moveLeftUpperArmX(angle: number) {\r\n    this.getAndSetRotation(this.lua, X, angle);\r\n  }\r\n\r\n  public moveLeftUpperArmY(angle: number) {\r\n    this.getAndSetRotation(this.lua, Y, angle);\r\n  }\r\n\r\n  public moveLeftUpperArmZ(angle: number) {\r\n    this.getAndSetRotation(this.lua, Z, angle);\r\n  }\r\n\r\n  public moveRightUpperArmX(angle: number) {\r\n    this.getAndSetRotation(this.rua, X, angle);\r\n  }\r\n\r\n  public moveRightUpperArmY(angle: number) {\r\n    this.getAndSetRotation(this.rua, Y, angle);\r\n  }\r\n\r\n  public moveRightUpperArmZ(angle: number) {\r\n    this.getAndSetRotation(this.rua, Z, angle);\r\n  }\r\n\r\n  // Lower arm\r\n  public bendLeftLowerArm(angle: number) {\r\n    this.getAndSetRotation(this.lla, X, angle);\r\n  }\r\n\r\n  public twistLeftLowerArm(angle: number) {\r\n    this.getAndSetRotation(this.lla, Y, angle);\r\n  }\r\n\r\n  public bendRightLowerArm(angle: number) {\r\n    this.getAndSetRotation(this.rla, X, angle);\r\n  }\r\n\r\n  public twistRightLowerArm(angle: number) {\r\n    this.getAndSetRotation(this.rla, Y, angle);\r\n  }\r\n\r\n  // Upper leg\r\n  public moveLeftUpperLegX(angle: number) {\r\n    this.getAndSetRotation(this.lul, X, angle);\r\n  }\r\n\r\n  public moveLeftUpperLegZ(angle: number) {\r\n    this.getAndSetRotation(this.lul, Z, angle);\r\n  }\r\n\r\n  public moveRightUpperLegX(angle: number) {\r\n    this.getAndSetRotation(this.rul, X, angle);\r\n  }\r\n\r\n  public moveRightUpperLegZ(angle: number) {\r\n    this.getAndSetRotation(this.rul, Z, angle);\r\n  }\r\n\r\n  // Lower leg\r\n  public bendLeftLowerLeg(angle: number) {\r\n    this.getAndSetRotation(this.lll, X, angle);\r\n  }\r\n\r\n  public bendRightLowerLeg(angle: number) {\r\n    this.getAndSetRotation(this.rll, X, angle);\r\n  }\r\n\r\n  // Additional method for animation\r\n  public translateHipY(angle: number) {\r\n    this.getAndSetTranslation(this.hip, Y, angle);\r\n  }\r\n\r\n  public moveShieldX(angle: number) {\r\n    this.getAndSetRotation(this.shield, X, angle);\r\n  }\r\n\r\n  // Helper\r\n  private getAndSetRotation(part: Node, index: number, angle: number) {\r\n    let rotatePoint = part.getTransformation(\"rotate\");\r\n    rotatePoint[index] = angle;\r\n    part.setTransformation(\"rotate\", rotatePoint, true);\r\n  }\r\n\r\n  private getAndSetTranslation(part: Node, index: number, value: number) {\r\n    let translatePoint = part.getTransformation(\"translate\");\r\n    translatePoint[index] = value;\r\n    part.setTransformation(\"translate\", translatePoint, true);\r\n  }\r\n\r\n  public reset() {\r\n    SliderManager.resetKSliderValue();\r\n  }\r\n\r\n  /*\r\n   * Save and load\r\n   */\r\n\r\n  public saveMovement(): KnightMovement {\r\n    const km = new KnightMovement();\r\n    km.hip = this.hip.getTransformation(\"rotate\")[Y];\r\n    km.chest = this.chest.getTransformation(\"rotate\")[Y];\r\n    km.head = this.head.getTransformation(\"rotate\")[Y];\r\n    km.luaX = this.lua.getTransformation(\"rotate\")[X];\r\n    km.luaY = this.lua.getTransformation(\"rotate\")[Y];\r\n    km.luaZ = this.lua.getTransformation(\"rotate\")[Z];\r\n    km.ruaX = this.rua.getTransformation(\"rotate\")[X];\r\n    km.ruaY = this.rua.getTransformation(\"rotate\")[Y];\r\n    km.ruaZ = this.rua.getTransformation(\"rotate\")[Z];\r\n    km.llaBend = this.lla.getTransformation(\"rotate\")[X];\r\n    km.llaTwist = this.lla.getTransformation(\"rotate\")[Y];\r\n    km.rlaBend = this.rla.getTransformation(\"rotate\")[X];\r\n    km.rlaTwist = this.rla.getTransformation(\"rotate\")[Y];\r\n    km.lulX = this.lul.getTransformation(\"rotate\")[X];\r\n    km.lulZ = this.lul.getTransformation(\"rotate\")[Z];\r\n    km.rulX = this.rul.getTransformation(\"rotate\")[X];\r\n    km.rulZ = this.rul.getTransformation(\"rotate\")[Z];\r\n    km.lllBend = this.lll.getTransformation(\"rotate\")[X];\r\n    km.rllBend = this.rll.getTransformation(\"rotate\")[X];\r\n    km.translateHipY = this.hip.getTransformation(\"translate\")[Y];\r\n    km.shieldX = this.shield.getTransformation(\"rotate\")[Z];\r\n    return km;\r\n  }\r\n\r\n  public loadMovement(km: KnightMovement) {\r\n    this.moveHip(km.hip);\r\n    this.moveChest(km.chest);\r\n    this.moveHead(km.head);\r\n    this.moveLeftUpperArmX(km.luaX);\r\n    this.moveLeftUpperArmY(km.luaY);\r\n    this.moveLeftUpperArmZ(km.luaZ);\r\n    this.moveRightUpperArmX(km.ruaX);\r\n    this.moveRightUpperArmY(km.ruaY);\r\n    this.moveRightUpperArmZ(km.ruaZ);\r\n    this.bendLeftLowerArm(km.llaBend);\r\n    this.twistLeftLowerArm(km.llaTwist);\r\n    this.bendRightLowerArm(km.rlaBend);\r\n    this.twistRightLowerArm(km.rlaTwist);\r\n    this.moveLeftUpperLegX(km.lulX);\r\n    this.moveLeftUpperLegZ(km.lulZ);\r\n    this.moveRightUpperLegX(km.rulX);\r\n    this.moveRightUpperLegZ(km.rulZ);\r\n    this.bendLeftLowerLeg(km.lllBend);\r\n    this.bendRightLowerLeg(km.rllBend);\r\n    this.translateHipY(km.translateHipY);\r\n    this.moveShieldX(km.shieldX);\r\n  }\r\n\r\n  public save() {\r\n    let data = \"Knight\\n\";\r\n    data += JSON.stringify(this.saveMovement());\r\n    return data;\r\n  }\r\n\r\n  public load(data: string) {\r\n    const [type, body] = data.split(\"\\n\");\r\n    if (type != \"Knight\") {\r\n      throw \"Failed to load knight\";\r\n    }\r\n    this.loadMovement(JSON.parse(body));\r\n    return this;\r\n  }\r\n\r\n  /*\r\n   * Animation\r\n   */\r\n\r\n  public animate(delta: number) {\r\n    if (!!this._animationClip) {\r\n      this._animationClip.doAnimation(delta, this);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Knight;\r\n","import Knight from \"./knight\";\r\n\r\nexport const isKnight = (obj: Knight | any): obj is Knight => {\r\n  return obj.constructor.name === \"Knight\";\r\n};\r\n\r\nexport default Knight;\r\n","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport { mat4 } from \"../../../util/matrix\";\r\nimport { buildCubePoints } from \"../../utils/cubePoints\";\r\n\r\nclass Body extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.setInstanceMatrix(\r\n      mat4.mMult(\r\n        mat4.scale(0.3, 0.3, 0.6),\r\n        mat4.translation(0, 0, 0)\r\n      )\r\n    );\r\n\r\n    this.centralPoint = [0.3, -0.25, 0.15];\r\n\r\n    this.setupPoints();\r\n  }\r\n\r\n  public setupPoints() {\r\n    this.normals = [];\r\n    this.points = buildCubePoints(this.normals);\r\n  }\r\n\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n\r\n    // render each rectangle separately\r\n    for (let i = 0; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Body;\r\n","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport { mat4 } from \"../../../util/matrix\";\r\nimport { buildCubePoints } from \"../../utils/cubePoints\";\r\n\r\nclass Head extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.setInstanceMatrix(\r\n      mat4.mMult(\r\n        mat4.scale(0.2, 0.2, 0.16),\r\n        mat4.translation(0, 0.16, 0.34)\r\n      )\r\n    );\r\n\r\n    this.centralPoint = [0.3, -0.25, 0.15];\r\n\r\n    this.setupPoints();\r\n  }\r\n\r\n  public setupPoints() {\r\n    this.normals = [];\r\n    this.points = buildCubePoints(this.normals);\r\n  }\r\n\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n\r\n    // render each rectangle separately\r\n    for (let i = 0; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Head;\r\n","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport { mat4 } from \"../../../util/matrix\";\r\nimport { buildCubePoints } from \"../../utils/cubePoints\";\r\n\r\nclass LeftBackLeg extends Node {\r\n  \r\n  constructor() {\r\n    super();\r\n    \r\n    this.setInstanceMatrix(\r\n      mat4.mMult(\r\n        mat4.scale(0.12, 0.4, 0.12),\r\n        mat4.translation(0.08, -0.2, -0.14)\r\n      )\r\n    );\r\n\r\n    this.centralPoint = [0.08, -0.2, -0.14];\r\n\r\n    this.setupPoints();\r\n  }\r\n\r\n  public setupPoints() {\r\n    this.normals = [];\r\n    this.points = buildCubePoints(this.normals);\r\n  }\r\n\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n    \r\n    for (let i = 0; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default LeftBackLeg;\r\n","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport { mat4 } from \"../../../util/matrix\";\r\nimport { buildCubePoints } from \"../../utils/cubePoints\";\r\n\r\nclass RightBackLeg extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.setInstanceMatrix(\r\n      mat4.mMult(\r\n        mat4.scale(0.12, 0.4, 0.12),\r\n        mat4.translation(-0.08, -0.2, -0.14)\r\n      )\r\n    );\r\n\r\n    this.centralPoint = [-0.08, -0.2, -0.14];\r\n\r\n    this.setupPoints();\r\n  }\r\n\r\n  public setupPoints() {\r\n    this.normals = [];\r\n    this.points = buildCubePoints(this.normals);\r\n  }\r\n\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n\r\n    for (let i = 0; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default RightBackLeg;\r\n","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport { mat4 } from \"../../../util/matrix\";\r\nimport { buildCubePoints } from \"../../utils/cubePoints\";\r\n\r\nclass LeftFrontLeg extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.setInstanceMatrix(\r\n      mat4.mMult(\r\n        mat4.scale(0.12, 0.4, 0.12),\r\n        mat4.translation(0.08, -0.2, 0.14)\r\n      )\r\n    );\r\n\r\n    this.centralPoint = [0.08, -0.2, 0.14];\r\n\r\n    this.setupPoints();\r\n  }\r\n\r\n  public setupPoints() {\r\n    this.normals = [];\r\n    this.points = buildCubePoints(this.normals);\r\n  }\r\n\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n\r\n    for (let i = 0; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default LeftFrontLeg;\r\n","import Node from \"../../node\";\r\nimport DrawMode from \"../../../util/drawMode\";\r\nimport { mat4 } from \"../../../util/matrix\";\r\nimport { buildCubePoints } from \"../../utils/cubePoints\";\r\n\r\nclass RightFrontLeg extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.setInstanceMatrix(\r\n      mat4.mMult(\r\n        mat4.scale(0.12, 0.4, 0.12),\r\n        mat4.translation(-0.08, -0.2, 0.14)\r\n      )\r\n    );\r\n\r\n    this.centralPoint = [-0.08, -0.2, 0.14];\r\n\r\n    this.setupPoints();\r\n  }\r\n\r\n  public setupPoints() {\r\n    this.normals = [];\r\n    this.points = buildCubePoints(this.normals);\r\n  }\r\n\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {\r\n    this.applyMaterialProperties();\r\n    this.applyPosition();\r\n    this.applyNormal();\r\n    this._transformMatrixChangedCallback!(mat4.multiply(this.instanceMatrix, baseTransformMatrix));\r\n\r\n    for (let i = 0; i < Math.floor(this.points.length / (this.dimension * 4)); i++) {\r\n      this.draw(DrawMode.TRIANGLE_FAN, 4 * i, 4);\r\n    }\r\n  }\r\n}\r\n\r\nexport default RightFrontLeg;\r\n","import Body from \"./body\";\r\nimport Head from \"./head\";\r\nimport LeftBackLeg from \"./leftbackleg\";\r\nimport RightBackLeg from \"./rightbackleg\";\r\nimport LeftFrontLeg from \"./leftfrontleg\";\r\nimport RightFrontLeg from \"./rightfrontleg\";\r\n\r\nexport {\r\n  Body,\r\n  Head,\r\n  LeftBackLeg,\r\n  RightBackLeg,\r\n  LeftFrontLeg,\r\n  RightFrontLeg,\r\n}\r\n","import Node from \"../node\";\r\nimport { mat4 } from \"../../util/matrix\";\r\nimport SliderManager from \"../../SliderManager\";\r\n\r\nimport { Body, Head, LeftBackLeg, LeftFrontLeg, RightBackLeg, RightFrontLeg} from \"./parts\";\r\nimport { ICowAnimation } from \"./animation\";\r\n// import {IMirrorManAnimation} from \"./animation\";\r\n\r\nconst X = 0;\r\nconst Y = 1;\r\nconst Z = 2;\r\n\r\nclass CowMovement {\r\n  public head: number;\r\n  public body: number;\r\n  public lfl: number;\r\n  public rfl: number;\r\n  public lbl: number;\r\n  public rbl: number;\r\n}\r\n\r\nclass Cow extends Node {\r\n  // Main Body Parts\r\n  public head: Node;\r\n  public body: Node;\r\n\r\n  // Leg Parts\r\n  public lbl: Node;\r\n  public lfl: Node;\r\n  public rbl: Node;\r\n  public rfl: Node;\r\n\r\n  // Animation clip\r\n  private _animationClip: ICowAnimation | null = null; // change the animationClip\r\n\r\n  public get animation() {\r\n    return this._animationClip;\r\n  }\r\n\r\n  public set animation(clip: ICowAnimation | null) {\r\n    this._animationClip = clip;\r\n  }\r\n\r\n  public setAnimationClip(clip: ICowAnimation | null) {\r\n    this._animationClip = clip;\r\n  }\r\n\r\n  public static build() {\r\n    const cow = new Cow();\r\n    const lbl = new LeftBackLeg();\r\n    const lfl = new LeftFrontLeg();\r\n    const rbl = new RightBackLeg();\r\n    const rfl = new RightFrontLeg();\r\n    const head = new Head();\r\n    const body = new Body();\r\n\r\n    cow.head = head;\r\n    cow.body = body;\r\n    cow.lbl = lbl;\r\n    cow.lfl = lfl;\r\n    cow.rbl = rbl;\r\n    cow.rfl = rfl;\r\n\r\n    // Building Parts\r\n    cow.child = body;\r\n    body.child = head;\r\n\r\n    head.sibling = lfl;\r\n    lfl.sibling = rfl;\r\n    rfl.sibling = lbl;\r\n    lbl.sibling = rbl;\r\n\r\n    return cow;\r\n  }\r\n\r\n  public saveMovement(): CowMovement {\r\n    const cm = new CowMovement();\r\n\r\n    cm.head = this.head.getTransformation(\"rotate\")[X];\r\n    cm.body = this.body.getTransformation(\"rotate\")[Y];\r\n    cm.lfl = this.lfl.getTransformation(\"rotate\")[X];\r\n    cm.rfl = this.rfl.getTransformation(\"rotate\")[X];\r\n    cm.lbl = this.lbl.getTransformation(\"rotate\")[X];\r\n    cm.rbl = this.rbl.getTransformation(\"rotate\")[X];\r\n    return cm;\r\n  }\r\n\r\n  public loadMovement(cm: CowMovement) {\r\n    this.moveHead(cm.head);\r\n    this.moveBody(cm.body);\r\n    this.moveLeftFrontLeg(cm.lfl);\r\n    this.moveRightFrontLeg(cm.rfl);\r\n    this.moveLeftBackLeg(cm.lbl);\r\n    this.moveRightBackLeg(cm.rbl);\r\n  }\r\n\r\n  public save() {\r\n    let data = \"Cow\\n\";\r\n    data += JSON.stringify(this.saveMovement());\r\n    return data;\r\n  }\r\n\r\n  public load(data: string) {\r\n    const [type, body] = data.split(\"\\n\");\r\n    if (type != \"Cow\") {\r\n      throw \"Failed to load cow\";\r\n    }\r\n    this.loadMovement(JSON.parse(body));\r\n    return this;\r\n  }\r\n\r\n  public setupPoints() {}\r\n  public render(baseTransformMatrix: number[] = mat4.identity()) {}\r\n\r\n  public animate(delta: number) {\r\n    if (!!this._animationClip) {\r\n      this._animationClip.doAnimation(delta, this);\r\n    } \r\n  }\r\n\r\n  // Range : -45, 45\r\n  public moveLeftFrontLeg(angle: number) {\r\n    const rotatePoint = this.lfl.getTransformation(\"rotate\");\r\n    const [_, y, z] = rotatePoint;\r\n    this.lfl.setTransformation(\"rotate\", [angle, y, z]);\r\n  }\r\n\r\n  // Range : -45, 45\r\n  public moveRightFrontLeg(angle: number) {\r\n    const rotatePoint = this.rfl.getTransformation(\"rotate\");\r\n    const [_, y, z] = rotatePoint;\r\n    this.rfl.setTransformation(\"rotate\", [angle, y, z]);\r\n  }\r\n\r\n  public moveLeftBackLeg(angle: number) {\r\n    const rotatePoint = this.lbl.getTransformation(\"rotate\");\r\n    const [_, y, z] = rotatePoint;\r\n    this.lbl.setTransformation(\"rotate\", [angle, y, z]);\r\n  }\r\n\r\n  public moveRightBackLeg(angle: number) {\r\n    const rotatePoint = this.rbl.getTransformation(\"rotate\");\r\n    const [_, y, z] = rotatePoint;\r\n    this.rbl.setTransformation(\"rotate\", [angle, y, z]);\r\n  }\r\n\r\n  public moveHead(angle: number) {\r\n    this.getAndSetRotation(this.head, X, angle);\r\n  }\r\n\r\n  public moveBody(angle: number) {\r\n    const rotatePoint = this.body.getTransformation(\"rotate\");\r\n    const [x, _, z] = rotatePoint;\r\n    this.body.setTransformation(\"rotate\", [x, angle, z]);\r\n  }\r\n\r\n  private getAndSetRotation(part: Node, index: number, angle: number) {\r\n    let rotatePoint = part.getTransformation(\"rotate\");\r\n    rotatePoint[index] = angle;\r\n    part.setTransformation(\"rotate\", rotatePoint, true);\r\n  }\r\n\r\n  private getAndSetTranslation(part: Node, index: number, value: number) {\r\n    let translatePoint = part.getTransformation(\"translate\");\r\n    translatePoint[index] = value;\r\n    part.setTransformation(\"translate\", translatePoint, true);\r\n  }\r\n\r\n  public reset() {\r\n    SliderManager.resetCowSliderValue();\r\n  }\r\n\r\n  // override\r\n  public traverse() {\r\n    this._setTextureCallback!(\"image\");\r\n    super.traverse();\r\n    this._setTextureCallback!(\"none\");\r\n  }\r\n}\r\n\r\nexport default Cow;\r\n","import Cow from \"./cow\";\r\n\r\nexport const isCow = (obj: Cow | any): obj is Cow => {\r\n  return obj && obj.constructor.name === \"Cow\";\r\n};\r\n\r\nexport default Cow;\r\n","import Scene from \"./scene\";\r\nimport SliderManager from \"./SliderManager\";\r\n\r\nimport {isMirrorMan} from \"./object/cubeman\";\r\nimport {isKnight} from \"./object/knight\";\r\nimport {isCow} from \"./object/cow\";\r\n\r\nconst X = 0;\r\nconst Y = 1;\r\nconst Z = 2;\r\n\r\nclass App {\r\n  private scene: Scene | null = null;\r\n\r\n  private then: number;\r\n\r\n  constructor(scene: Scene) {\r\n    this.scene = scene;\r\n    this.then = 0; // init animation frame\r\n  }\r\n\r\n  public initSliders() {\r\n    if (!this.scene) {\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Camera Event Listener\r\n     */\r\n\r\n    SliderManager.assignInputEvent(\"cam-radius\", (val: number) => {\r\n      this.scene?.camera?.setRadius(val);\r\n    });\r\n    SliderManager.assignInputEvent(\"cam-theta\", (val: number) => {\r\n      this.scene?.camera?.setTheta(val);\r\n    });\r\n    SliderManager.assignInputEvent(\"cam-phi\", (val: number) => {\r\n      this.scene?.camera?.setPhi(val);\r\n    });\r\n\r\n    /**\r\n     * Mirror Man Event Listener\r\n     */\r\n\r\n    // Head\r\n    SliderManager.assignInputEvent(\"head-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isMirrorMan(object) && object.moveHead(val));\r\n    });\r\n\r\n    // Left Shoulder\r\n    SliderManager.assignInputEvent(\"ls-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isMirrorMan(object) && object.moveLeftShoulder(val));\r\n    });\r\n\r\n    // Right Shoulder\r\n    SliderManager.assignInputEvent(\"rs-slider\", (val: number) => {\r\n      this.scene?.objects.forEach(\r\n        (object) => isMirrorMan(object) && object.moveRightShoulder(-1 * val),\r\n      );\r\n    });\r\n\r\n    // Left Arm\r\n    SliderManager.assignInputEvent(\"la-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isMirrorMan(object) && object.moveLeftArm(-1 * val));\r\n    });\r\n\r\n    // Right Arm\r\n    SliderManager.assignInputEvent(\"ra-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isMirrorMan(object) && object.moveRightArm(-1 * val));\r\n    });\r\n\r\n    // Left Hip\r\n    SliderManager.assignInputEvent(\"lh-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isMirrorMan(object) && object.moveLeftHips(-1 * val));\r\n    });\r\n\r\n    // Right Hip\r\n    SliderManager.assignInputEvent(\"rh-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isMirrorMan(object) && object.moveRightHips(val));\r\n    });\r\n\r\n    // Left Leg\r\n    SliderManager.assignInputEvent(\"ll-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isMirrorMan(object) && object.moveLeftLeg(val));\r\n    });\r\n\r\n    // Right Leg\r\n    SliderManager.assignInputEvent(\"rl-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isMirrorMan(object) && object.moveRightLeg(val));\r\n    });\r\n\r\n    /**\r\n     * Knight Event Listener\r\n     */\r\n\r\n    // Head\r\n    SliderManager.assignInputEvent(\"k-head-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isKnight(object) && object.moveHead(val));\r\n    });\r\n\r\n    // Chest\r\n    SliderManager.assignInputEvent(\"k-chest-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isKnight(object) && object.moveChest(val));\r\n    });\r\n\r\n    // Hip\r\n    SliderManager.assignInputEvent(\"k-hip-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isKnight(object) && object.moveHip(val));\r\n    });\r\n\r\n    // Left arm\r\n    SliderManager.assignInputEvent(\"k-lua-x-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isKnight(object) && object.moveLeftUpperArmX(val));\r\n    });\r\n\r\n    SliderManager.assignInputEvent(\"k-lua-y-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isKnight(object) && object.moveLeftUpperArmY(val));\r\n    });\r\n\r\n    SliderManager.assignInputEvent(\"k-lua-z-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isKnight(object) && object.moveLeftUpperArmZ(val));\r\n    });\r\n\r\n    SliderManager.assignInputEvent(\"k-bend-lla-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isKnight(object) && object.bendLeftLowerArm(val));\r\n    });\r\n\r\n    SliderManager.assignInputEvent(\"k-twist-lla-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isKnight(object) && object.twistLeftLowerArm(val));\r\n    });\r\n\r\n    // Right arm\r\n    SliderManager.assignInputEvent(\"k-rua-x-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isKnight(object) && object.moveRightUpperArmX(val));\r\n    });\r\n\r\n    SliderManager.assignInputEvent(\"k-rua-y-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isKnight(object) && object.moveRightUpperArmY(val));\r\n    });\r\n\r\n    SliderManager.assignInputEvent(\"k-rua-z-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isKnight(object) && object.moveRightUpperArmZ(val));\r\n    });\r\n\r\n    SliderManager.assignInputEvent(\"k-bend-rla-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isKnight(object) && object.bendRightLowerArm(val));\r\n    });\r\n\r\n    SliderManager.assignInputEvent(\"k-twist-rla-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isKnight(object) && object.twistRightLowerArm(val));\r\n    });\r\n\r\n    // Left leg\r\n    SliderManager.assignInputEvent(\"k-lul-x-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isKnight(object) && object.moveLeftUpperLegX(val));\r\n    });\r\n\r\n    SliderManager.assignInputEvent(\"k-lul-z-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isKnight(object) && object.moveLeftUpperLegZ(val));\r\n    });\r\n\r\n    SliderManager.assignInputEvent(\"k-bend-lll-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isKnight(object) && object.bendLeftLowerLeg(val));\r\n    });\r\n\r\n    // Right leg\r\n    SliderManager.assignInputEvent(\"k-rul-x-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isKnight(object) && object.moveRightUpperLegX(val));\r\n    });\r\n\r\n    SliderManager.assignInputEvent(\"k-rul-z-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isKnight(object) && object.moveRightUpperLegZ(val));\r\n    });\r\n\r\n    SliderManager.assignInputEvent(\"k-bend-rll-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isKnight(object) && object.bendRightLowerLeg(val));\r\n    });\r\n\r\n    // /**\r\n    //  * Cow Event Listener\r\n    // */\r\n\r\n    SliderManager.assignInputEvent(\"cow-head-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isCow(object) && object.moveHead(val));\r\n    });\r\n    SliderManager.assignInputEvent(\"cow-body-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isCow(object) && object.moveBody(val));\r\n    });\r\n    SliderManager.assignInputEvent(\"cow-lfl-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isCow(object) && object.moveLeftFrontLeg(val));\r\n    });\r\n    SliderManager.assignInputEvent(\"cow-rfl-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isCow(object) && object.moveRightFrontLeg(val));\r\n    });\r\n    SliderManager.assignInputEvent(\"cow-lbl-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isCow(object) && object.moveLeftBackLeg(val));\r\n    });\r\n    SliderManager.assignInputEvent(\"cow-rbl-slider\", (val: number) => {\r\n      this.scene?.objects.forEach((object) => isCow(object) && object.moveRightBackLeg(val));\r\n    });\r\n  }\r\n\r\n  public setScene(scene: Scene) {\r\n    this.scene = scene;\r\n  }\r\n\r\n  public setSceneProjection(projectionType: Projection) {\r\n    this.scene?.setProjection(projectionType);\r\n  }\r\n\r\n  public toggleShading(useShading: boolean) {\r\n    this.scene?.setUseShading(useShading);\r\n  }\r\n\r\n  public toggleTexture(useTexture: boolean) {\r\n    this.scene?.setUseTexture(useTexture);\r\n  }\r\n\r\n  public resetCamera() {\r\n    SliderManager.resetCameraSliderValue();\r\n  }\r\n\r\n  public start() {\r\n    if (!this.scene) {\r\n      throw \"No scene defined!\";\r\n    }\r\n    this.initSliders();\r\n    const loop = (time: number) => {\r\n      const now = time * 0.01; // time in milliseconds * 0.1\r\n\r\n      this.scene?.animate(now - this.then);\r\n\r\n      this.scene?.render();\r\n      this.then = now;\r\n\r\n      // Draw next scene\r\n      window.requestAnimationFrame(loop);\r\n    };\r\n    window.requestAnimationFrame(loop);\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { toCartesian } from \"../util/convert\";\r\nimport { mat4 } from \"../util/matrix\";\r\n\r\nclass Camera {\r\n  // Camera properties\r\n  // Position represented in spherical coordinate, target and up in cartesian\r\n  private _position: Point;\r\n  private _target: Point = [0, 0, 0];\r\n  private _up: Point = [0, 1, 0];\r\n\r\n  // Callback to be called when camera position changed\r\n  private _positionChangedCallback: (viewMatrix: number[]) => void;\r\n\r\n  // View matrix associated with this camera\r\n  private _viewMatrix: number[] = mat4.identity();\r\n\r\n\r\n  /*\r\n   * Constructor\r\n   */\r\n\r\n  constructor(positionChangedCallback?: (viewMatrix: number[]) => void, position?: Point) {\r\n    if (!!positionChangedCallback)\r\n      this._positionChangedCallback = positionChangedCallback;\r\n    this._position = position || [1, 0, 0];\r\n\r\n    this._viewMatrix = mat4.lookAt(toCartesian(this._position) as Point, this._target, this._up);\r\n  }\r\n\r\n\r\n  /*\r\n   * Property getter and setter\r\n   */\r\n\r\n  public set positionChangedCallback(callback: (viewMatrix: number[]) => void) {\r\n    this._positionChangedCallback = callback;\r\n  }\r\n\r\n  public get position() {\r\n    return this._position;\r\n  }\r\n\r\n  public setRadius(radius: number) {\r\n    this._position[0] = radius;\r\n    this.calculateViewMatrix();\r\n  }\r\n\r\n  public setTheta(theta: number) {\r\n    this._position[1] = theta;\r\n    this.calculateViewMatrix();\r\n  }\r\n\r\n  public setPhi(phi: number) {\r\n    this._position[2] = phi;\r\n    this.calculateViewMatrix();\r\n  }\r\n\r\n  public get viewMatrix() {\r\n    return this._viewMatrix;\r\n  }\r\n\r\n\r\n  /*\r\n   * Calculate view matrix\r\n   */\r\n\r\n  private calculateViewMatrix() {\r\n    this._viewMatrix = mat4.lookAt(toCartesian(this._position) as Point, this._target, this._up);\r\n    if (this._positionChangedCallback)\r\n      this._positionChangedCallback(this._viewMatrix);\r\n  }\r\n}\r\n\r\nexport default Camera;\r\n","import Camera from \"./camera\";\r\n\r\n// prettier-ignore\r\nexport default Camera;\r\n","class Light {\r\n  // Light properties\r\n  private _Id: Color;\r\n  private _Is: Color;\r\n  private _Ia: Color;\r\n\r\n  // Position, in cartesian for simplicity\r\n  private _position: number[];\r\n\r\n  // Callback to be called when camera position changed\r\n  private _propertyChangedCallback: (light: Light) => void;\r\n\r\n\r\n  /*\r\n   * Constructor\r\n   */\r\n\r\n  constructor(propertyChangedCallback?: (light: Light) => void,\r\n              Id?: Color, Is?: Color, Ia?: Color, position?: number[]) {\r\n    this._Id = Id || [1.0, 1.0, 1.0];\r\n    this._Is = Is || [1.0, 1.0, 1.0];\r\n    this._Ia = Ia || [0.25, 0.25, 0.25];\r\n    this._position = position || [1.0, 1.0, 1.0];\r\n\r\n    if (!!propertyChangedCallback)\r\n      this._propertyChangedCallback = propertyChangedCallback;\r\n  }\r\n\r\n\r\n  /*\r\n   * Property getter and setter\r\n  */\r\n\r\n  public get Id() {\r\n    return this._Id;\r\n  }\r\n\r\n  public get Is() {\r\n    return this._Is;\r\n  }\r\n\r\n  public get Ia() {\r\n    return this._Ia;\r\n  }\r\n\r\n  public setColor(Id: Color, Is: Color, Ia: Color) {\r\n    this._Id = Id;\r\n    this._Is = Is;\r\n    this._Ia = Ia;\r\n    this.broadcastChange();\r\n  }\r\n\r\n  public get position() {\r\n    return this._position;\r\n  }\r\n\r\n  public setPosition(position: number[]) {\r\n    this._position = position;\r\n    this.broadcastChange();\r\n  }\r\n\r\n  public set propertyChangedCallback(callback: (light: Light) => void) {\r\n    this._propertyChangedCallback = callback;\r\n  }\r\n\r\n  /*\r\n   * Calculate view matrix\r\n   */\r\n\r\n  public broadcastChange() {\r\n    if (!!this._propertyChangedCallback)\r\n      this._propertyChangedCallback(this);\r\n  }\r\n}\r\n\r\nexport default Light;\r\n","import Light from \"./light\";\r\n\r\n// prettier-ignore\r\nexport default Light;\r\n","import WebGLWrapper, { UniformMatrix } from \"./webglWrapper\";\r\nimport Camera from \"../camera\";\r\nimport Light from \"../light\";\r\nimport { mat4 } from \"../util/matrix\";\r\nimport Node from \"../object/index\";\r\n\r\nimport {isMirrorMan} from \"../object/cubeman\";\r\nimport {isKnight} from \"../object/knight\";\r\nimport { isCow } from \"../object/cow\";\r\n\r\nclass Scene extends WebGLWrapper {\r\n  // Object, camera, and light used\r\n  private _objects: Node[] = new Array();\r\n  private _camera: Camera;\r\n  private _light: Light;\r\n\r\n  // Matrices used\r\n  private transformMatrix: number[] = mat4.identity();\r\n  private viewMatrix: number[] = mat4.identity();\r\n  private projMatrix: number[] = mat4.orthographicProj();\r\n  private worldMatrix: number[] = mat4.identity();\r\n\r\n  // Use shading\r\n  private useShading: 0 | 1;\r\n  private useTexture: 0 | 1;\r\n\r\n  // Use texture\r\n  private textureType: Texture;\r\n\r\n  /*\r\n   * Constructor\r\n   */\r\n\r\n  constructor(canvas: HTMLCanvasElement) {\r\n    super(canvas);\r\n\r\n    this.applyTransformMatrix();\r\n    this.applyViewMatrix();\r\n    this.applyWorldMatrix();\r\n    this.applyProjMatrix();\r\n\r\n    this.setCamera(new Camera());\r\n    this.setLight(new Light());\r\n    this.setUseShading(true);\r\n\r\n    this.setUseTexture(true);\r\n\r\n    this.setProjection(\"perspective\");\r\n  }\r\n\r\n  /*\r\n   * Matrix helpers\r\n   */\r\n\r\n  public setProjection(projectionType: Projection) {\r\n    switch (projectionType) {\r\n      case \"orthographic\":\r\n        this.projMatrix = mat4.orthographicProj();\r\n        break;\r\n      case \"oblique\":\r\n        this.projMatrix = mat4.obliqueProj();\r\n        break;\r\n      case \"perspective\":\r\n        this.projMatrix = mat4.perspectiveProj();\r\n        break;\r\n      default:\r\n        throw `shape.setProjection: invalid projection type '${projectionType}'`;\r\n    }\r\n    this.applyProjMatrix();\r\n  }\r\n\r\n  public setProjMatrix(projMatrix: number[]) {\r\n    this.projMatrix = projMatrix;\r\n    this.applyProjMatrix();\r\n  }\r\n\r\n  public setViewMatrix(viewMatrix: number[]) {\r\n    this.viewMatrix = viewMatrix;\r\n    this.applyViewMatrix();\r\n  }\r\n\r\n  public setWorldMatrix(worldMatrix: number[]) {\r\n    this.worldMatrix = worldMatrix;\r\n    this.applyWorldMatrix();\r\n  }\r\n\r\n  private setTransformMatrix(transformMatrix: number[]) {\r\n    this.transformMatrix = transformMatrix;\r\n    this.applyTransformMatrix();\r\n  }\r\n\r\n  /*\r\n   * Property getter and setter\r\n   */\r\n\r\n  public get camera() {\r\n    return this._camera;\r\n  }\r\n\r\n  public setCamera(camera: Camera) {\r\n    this._camera = camera;\r\n    this._camera.positionChangedCallback = this.setViewMatrix.bind(this);\r\n    this.viewMatrix = this._camera.viewMatrix;\r\n    this.applyViewMatrix();\r\n  }\r\n\r\n  public get light() {\r\n    return this._light;\r\n  }\r\n\r\n  public setLight(light: Light) {\r\n    this._light = light;\r\n    this._light.propertyChangedCallback = this.applyLightProperties.bind(this);\r\n    this.applyLightProperties(this._light);\r\n  }\r\n\r\n  public setUseShading(useShading: boolean) {\r\n    this.useShading = useShading ? 1 : 0;\r\n    this.applyUseShading(useShading);\r\n  }\r\n\r\n  public setUseTexture(useTexture: boolean) {\r\n    this.useTexture = useTexture ? 1 : 0;\r\n    this.applyUseTexture(useTexture);\r\n  }\r\n\r\n  public get objects() {\r\n    return this._objects;\r\n  }\r\n\r\n  public set objects(objects: Node[]) {\r\n    this._objects = objects;\r\n  }\r\n\r\n\r\n  /*\r\n   * Helper method to apply uniform matrix\r\n   */\r\n\r\n  private applyProjMatrix() {\r\n    this.applyUniformMatrix4fv(UniformMatrix.PROJ, this.projMatrix);\r\n  }\r\n\r\n  private applyViewMatrix() {\r\n    this.applyUniformMatrix4fv(UniformMatrix.VIEW, this.viewMatrix);\r\n  }\r\n\r\n  private applyWorldMatrix() {\r\n    this.applyUniformMatrix4fv(UniformMatrix.WORLD, this.worldMatrix);\r\n  }\r\n\r\n  private applyTransformMatrix() {\r\n    this.applyUniformMatrix4fv(UniformMatrix.TRANSFORM, this.transformMatrix);\r\n  }\r\n\r\n\r\n  /*\r\n   * Add and clear object\r\n   */\r\n\r\n  private setCallbacks(object: Node) {\r\n    object.materialChangedCallback = this.applyMaterialProperties.bind(this);\r\n    object.transformMatrixChangedCallback = this.setTransformMatrix.bind(this);\r\n    object.drawCallback = this.draw.bind(this);\r\n    object.applyAttrCallback = this.applyAttributeVector.bind(this);\r\n    object.useNormalMapCallback = this.applyUseNormalMap.bind(this);\r\n    object.setTextureCallback = this.applyTexture.bind(this);\r\n\r\n    if (object.child) this.setCallbacks(object.child);\r\n    if (object.sibling) this.setCallbacks(object.sibling);\r\n  }\r\n\r\n  public add(object: Node, clearObjects: boolean = false) {\r\n    if (clearObjects)\r\n      this.clear();\r\n\r\n    this.setCallbacks(object);\r\n    this._objects.push(object);\r\n  }\r\n\r\n  public clear() {\r\n    this._objects = new Array();\r\n  }\r\n\r\n\r\n  /*\r\n   * Draw scene\r\n   */\r\n\r\n  public render() {\r\n    // Draw all objects\r\n    for (const object of this._objects) {\r\n      // Traverse sibling and child of an object\r\n      object.traverse();\r\n    }\r\n  }\r\n\r\n  public animate(delta: number) {\r\n    for (const object of this._objects) {\r\n      // Animate each object\r\n      if (isMirrorMan(object) || isKnight(object) || isCow(object))\r\n        object.animate(delta);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Scene;\r\n","import Scene from \"./scene\";\r\n\r\n// prettier-ignore\r\nexport default Scene;\r\n","import MirrorMan from \"../main\";\r\n\r\nexport default interface IMirrorManAnimation {\r\n  doAnimation(delta: number, obj: MirrorMan): void;\r\n}\r\n\r\n/**\r\n     this._callbackMap[\"ll\"] = obj.moveLeftLeg.bind(obj);\r\n    this._callbackMap[\"la\"] = obj.moveLeftArm.bind(obj);\r\n    this._callbackMap[\"ra\"] = obj.moveRightArm.bind(obj);\r\n    this._callbackMap[\"rl\"] = obj.moveRightLeg.bind(obj);\r\n    this._callbackMap[\"head\"] = obj.moveHead.bind(obj);\r\n    this._callbackMap[\"stomach\"] = obj.moveStomach.bind(obj);\r\n    this._callbackMap[\"ls\"] = obj.moveLeftShoulder.bind(obj);\r\n    this._callbackMap[\"rs\"] = obj.moveRightShoulder.bind(obj);\r\n    this._callbackMap[\"lh\"] = obj.moveLeftHips.bind(obj);\r\n    this._callbackMap[\"rh\"] = obj.moveRightHips.bind(obj);\r\n    this._callbackMap[\"translateBodyY\"] = obj.moveBodyUpDown.bind(obj);\r\n */\r\n","import MirrorMan from \"../main\";\r\nimport IMirrorManAnimation from \"./animation\";\r\n\r\nimport Node from \"../../node\"\r\n\r\nconst X = 0;\r\nconst Y = 1;\r\nconst Z = 2;\r\n\r\ntype KeyframesType = { index: number, position: { [key: string]: number } }[];\r\ntype DeltaKeyframesType = { [key: string]: number }[];\r\ntype CallbackMapType = { [key: string]: (arg0: number) => void };\r\ntype TargetMapType = { [key: string]: { part: Node, idx: number } };\r\n\r\nclass MirrorManAnimation implements IMirrorManAnimation {\r\n  private _started: boolean;\r\n\r\n  private readonly _keyframes: KeyframesType;\r\n  private _deltaKeyframes: DeltaKeyframesType = [];\r\n  private readonly _duration: number;  // in 1/10 second\r\n  private _callbackMap: CallbackMapType = {};\r\n  private _targetMap: TargetMapType = {};\r\n  private _currKeyframe: number = 0;\r\n\r\n  constructor(keyframes: any, duration: number) {\r\n    this._started = false;\r\n\r\n    this._keyframes = keyframes;\r\n    // input in second, adjust to match the delta which is 1/10 second\r\n    this._duration = duration * 10;\r\n    this.generateDeltaKeyframes();\r\n  }\r\n\r\n  private generateDeltaKeyframes() {\r\n    for (let i = 0; i < this._keyframes.length - 1; i++) {\r\n      const kfFrom = this._keyframes[i];\r\n      const kfTo = this._keyframes[i + 1];\r\n      const kfFromKeys = Object.keys(kfFrom.position);\r\n      const kfToKeys = Object.keys(kfTo.position);\r\n\r\n      const deltaKfKeys = kfFromKeys.filter((el) => {\r\n        return kfToKeys.indexOf(el) !== -1;\r\n      });\r\n\r\n      let deltaKf: { [key: string]: number } = {};\r\n      for (const k of deltaKfKeys) {\r\n        const deltaPos = kfTo.position[k] - kfFrom.position[k];\r\n        if (deltaPos == 0) continue;\r\n        const deltaT = ((kfTo.index - kfFrom.index) * this._duration) / 100;\r\n        deltaKf[k] = deltaPos / deltaT;\r\n      }\r\n\r\n      this._deltaKeyframes.push(deltaKf);\r\n    }\r\n  }\r\n\r\n  private generateCallbackMap(obj: MirrorMan) {\r\n    this._callbackMap[\"ll\"] = obj.moveLeftLeg.bind(obj);\r\n    this._callbackMap[\"la\"] = obj.moveLeftArm.bind(obj);\r\n    this._callbackMap[\"ra\"] = obj.moveRightArm.bind(obj);\r\n    this._callbackMap[\"rl\"] = obj.moveRightLeg.bind(obj);\r\n    this._callbackMap[\"head\"] = obj.moveHead.bind(obj);\r\n    this._callbackMap[\"stomach\"] = obj.moveStomach.bind(obj);\r\n    this._callbackMap[\"ls\"] = obj.moveLeftShoulder.bind(obj);\r\n    this._callbackMap[\"rs\"] = obj.moveRightShoulder.bind(obj);\r\n    this._callbackMap[\"lh\"] = obj.moveLeftHips.bind(obj);\r\n    this._callbackMap[\"rh\"] = obj.moveRightHips.bind(obj);\r\n    this._callbackMap[\"translateBodyY\"] = obj.moveBodyUpDown.bind(obj);\r\n  }\r\n\r\n  private generateTargetMap(obj: MirrorMan) {\r\n    this._targetMap[\"ll\"] = {part: obj.ll, idx: X};\r\n    this._targetMap[\"la\"] = {part: obj.la, idx: X};\r\n    this._targetMap[\"ra\"] = {part: obj.ra, idx: X};\r\n    this._targetMap[\"rl\"] = {part: obj.rl, idx: X};\r\n    this._targetMap[\"head\"] = {part: obj.head, idx: Y};\r\n    this._targetMap[\"stomach\"] = {part: obj.stomach, idx: Y};\r\n    this._targetMap[\"ls\"] = {part: obj.ls, idx: X};\r\n    this._targetMap[\"rs\"] = {part: obj.rs, idx: X};\r\n    this._targetMap[\"lh\"] = {part: obj.lh, idx: X};\r\n    this._targetMap[\"rh\"] = {part: obj.rh, idx: X};\r\n\r\n    this._targetMap[\"translateBodyY\"] = {part: obj.chest, idx: Y};\r\n  }\r\n\r\n  public doAnimation(delta: number, obj: MirrorMan) {\r\n    if (this._keyframes.length <= 1) return;\r\n\r\n    // Reset for first time\r\n    this.validateAndReset(obj);\r\n\r\n    // Run the keyframes\r\n    let doIncrementKf = false;\r\n    const deltaKf = this._deltaKeyframes[this._currKeyframe] || {};\r\n    for (const k in deltaKf) {\r\n      const target = this._targetMap[k];\r\n      const callback = this._callbackMap[k];\r\n      if (!target || !callback) continue;\r\n\r\n      let newVal;\r\n      if (k == \"translateBodyY\") {\r\n        const translationPoint = target.part.getTransformation(\"translate\");\r\n        const currPos = translationPoint[target.idx];\r\n        const newPos = (newVal = currPos + delta * deltaKf[k]);\r\n        callback(newPos);\r\n      } else {\r\n        const rotationPoint = target.part.getTransformation(\"rotate\");\r\n        const currRot = rotationPoint[target.idx];\r\n        const newRot = (newVal = currRot + delta * deltaKf[k]);\r\n        callback(newRot);\r\n      }\r\n\r\n      // Check any movement limit\r\n      if (!doIncrementKf) {\r\n        if (deltaKf[k] < 0 && newVal <= this._keyframes[this._currKeyframe + 1].position[k]) {\r\n          doIncrementKf = true;\r\n        } else if (\r\n          deltaKf[k] > 0 &&\r\n          newVal >= this._keyframes[this._currKeyframe + 1].position[k]\r\n        ) {\r\n          doIncrementKf = true;\r\n        } else if (deltaKf[k] == 0) {\r\n          throw \"MirrorMan.doAnimation: should not be here\";\r\n        }\r\n      }\r\n    }\r\n\r\n    if (doIncrementKf) {\r\n      this._currKeyframe = (this._currKeyframe + 1) % this._deltaKeyframes.length;\r\n      // Fix position\r\n      const targetPos = this._keyframes[this._currKeyframe].position;\r\n      for (const k in targetPos) {\r\n        if (this._callbackMap[k]) this._callbackMap[k](targetPos[k]);\r\n      }\r\n    }\r\n  }\r\n\r\n  private validateAndReset(obj: MirrorMan) {\r\n    if (!this._started) {\r\n      // Generate callback and target map\r\n      this.generateCallbackMap(obj);\r\n      this.generateTargetMap(obj);\r\n\r\n      // Reset object\r\n      // At this point keyframes length is > 1\r\n      const initialPos = this._keyframes[0].position;\r\n      for (const k in initialPos) {\r\n        if (this._callbackMap[k]) this._callbackMap[k](initialPos[k]);\r\n      }\r\n\r\n      this._started = !this._started;\r\n    }\r\n  }\r\n}\r\n\r\nexport default MirrorManAnimation;\r\n","import MirrorManAnimation from \"./mirrormanAnimation\";\r\n\r\nconst animation = {\r\n  keyframes: [\r\n    {\r\n      index: 0,\r\n      position: {\r\n        // Moving Head\r\n        head: 0,\r\n        // Dabbing Position\r\n        rs: -60,\r\n        ls: -60,\r\n        // Moving Stomach\r\n        stomach: 0,\r\n        // Moving Hip\r\n        rh: 0,\r\n        lh: 0,\r\n      },\r\n    },\r\n    {\r\n      index: 25,\r\n      position: {\r\n        // Moving Head\r\n        head: 30,\r\n        // Dabbing Position\r\n        rs: -30,\r\n        ls: 30,\r\n        // Moving Stomach\r\n        stomach: 15,\r\n        // Moving Hip\r\n        rh: -60,\r\n        lh: 0,\r\n      },\r\n    },\r\n    {\r\n      index: 50,\r\n      position: {\r\n        // Moving Head\r\n        head: 0,\r\n        // Dabbing Position\r\n        rs: -60,\r\n        ls: -60,\r\n        // Moving Stomach\r\n        stomach: 0,\r\n        // Moving Hip\r\n        rh: 0,\r\n        lh: 0,\r\n      },\r\n    },\r\n    {\r\n      index: 75,\r\n      position: {\r\n        // Moving Head\r\n        head: -30,\r\n        // Dabbing Position\r\n        rs: 30,\r\n        ls: -30,\r\n        // Moving Stomach\r\n        stomach: -15,\r\n        // Moving Hip\r\n        rh: 0,\r\n        lh: -60,\r\n      },\r\n    },\r\n    {\r\n      index: 100,\r\n      position: {\r\n        // Moving Head\r\n        head: 0,\r\n        // Dabbing Position\r\n        rs: -60,\r\n        ls: -60,\r\n        // Moving Stomach\r\n        stomach: 0,\r\n        // Moving Hip\r\n        rh: 0,\r\n        lh: 0,\r\n      },\r\n    },\r\n  ],\r\n  duration: 5,\r\n};\r\n\r\nclass DanceMirrorManAnimation extends MirrorManAnimation {\r\n  constructor(speed: number = 1) {\r\n    super(animation.keyframes, animation.duration / speed);\r\n  }\r\n}\r\n\r\nexport default DanceMirrorManAnimation;\r\n","import MirrorManAnimation from \"./mirrormanAnimation\";\r\n\r\nconst animation = {\r\n  keyframes: [\r\n    {\r\n      index: 0,\r\n      position: {\r\n        // Moving Shoulder\r\n        ls: -15,\r\n        rs: -15,\r\n        // Moving Arm\r\n        la: -60,\r\n        ra: -60,\r\n        // Moving Hips\r\n        rh: 0,\r\n        lh: 0,\r\n        // Moving Leg\r\n        ll: 0,\r\n        rl: 0,\r\n        // Body Translation\r\n        translateBodyY: 0,\r\n      },\r\n    },\r\n    {\r\n      index: 10,\r\n      position: {\r\n        // Moving Shoulder\r\n        ls: -12,\r\n        rs: -12,\r\n        // Moving Arm\r\n        la: -54,\r\n        ra: -54,\r\n        // Moving Hips\r\n        rh: 3,\r\n        lh: 3,\r\n        // Moving Leg\r\n        ll: 6,\r\n        rl: 6,\r\n        // Body Translation\r\n        translateBodyY: 0.01,\r\n      },\r\n    },\r\n    {\r\n      index: 20,\r\n      position: {\r\n        // Moving Shoulder\r\n        ls: -9,\r\n        rs: -9,\r\n        // Moving Arm\r\n        la: -48,\r\n        ra: -48,\r\n        // Moving Hips\r\n        rh: 6,\r\n        lh: 6,\r\n        // Moving Leg\r\n        ll: 12,\r\n        rl: 12,\r\n        // Body Translation\r\n        translateBodyY: 0.03,\r\n      },\r\n    },\r\n    {\r\n      index: 30,\r\n      position: {\r\n        // Moving Shoulder\r\n        ls: -6,\r\n        rs: -6,\r\n        // Moving Arm\r\n        la: -42,\r\n        ra: -42,\r\n        // Moving Hips\r\n        rh: 9,\r\n        lh: 9,\r\n        // Moving Leg\r\n        ll: 18,\r\n        rl: 18,\r\n        // Body Translation\r\n        translateBodyY: 0.05,\r\n      },\r\n    },\r\n    {\r\n      index: 40,\r\n      position: {\r\n        // Moving Shoulder\r\n        ls: -3,\r\n        rs: -3,\r\n        // Moving Arm\r\n        la: -36,\r\n        ra: -36,\r\n        // Moving Hips\r\n        rh: 12,\r\n        lh: 12,\r\n        // Moving Leg\r\n        ll: 24,\r\n        rl: 24,\r\n        // Body Translation\r\n        translateBodyY: 0.08,\r\n      },\r\n    },\r\n    {\r\n      index: 50,\r\n      position: {\r\n        // Moving Shoulder\r\n        ls: 0,\r\n        rs: 0,\r\n        // Moving Arm\r\n        la: -30,\r\n        ra: -30,\r\n        // Moving Hips\r\n        rh: 15,\r\n        lh: 15,\r\n        // Moving Leg\r\n        ll: 30,\r\n        rl: 30,\r\n        // Body Translation\r\n        translateBodyY: 0.1,\r\n      },\r\n    },\r\n    {\r\n      index: 60,\r\n      position: {\r\n        // Moving Shoulder\r\n        ls: -3,\r\n        rs: -3,\r\n        // Moving Arm\r\n        la: -36,\r\n        ra: -36,\r\n        // Moving Hips\r\n        rh: 12,\r\n        lh: 12,\r\n        // Moving Leg\r\n        ll: 24,\r\n        rl: 24,\r\n        // Body Translation\r\n        translateBodyY: 0.08,\r\n      },\r\n    },\r\n    {\r\n      index: 70,\r\n      position: {\r\n        // Moving Shoulder\r\n        ls: -6,\r\n        rs: -6,\r\n        // Moving Arm\r\n        la: -42,\r\n        ra: -42,\r\n        // Moving Hips\r\n        rh: 9,\r\n        lh: 9,\r\n        // Moving Leg\r\n        ll: 18,\r\n        rl: 18,\r\n        // Body Translation\r\n        translateBodyY: 0.05,\r\n      },\r\n    },\r\n    {\r\n      index: 80,\r\n      position: {\r\n        // Moving Shoulder\r\n        ls: -9,\r\n        rs: -9,\r\n        // Moving Arm\r\n        la: -48,\r\n        ra: -48,\r\n        // Moving Hips\r\n        rh: 6,\r\n        lh: 6,\r\n        // Moving Leg\r\n        ll: 12,\r\n        rl: 12,\r\n        // Body Translation\r\n        translateBodyY: 0.03,\r\n      },\r\n    },\r\n    {\r\n      index: 90,\r\n      position: {\r\n        // Moving Shoulder\r\n        ls: -12,\r\n        rs: -12,\r\n        // Moving Arm\r\n        la: -54,\r\n        ra: -54,\r\n        // Moving Hips\r\n        rh: 3,\r\n        lh: 3,\r\n        // Moving Leg\r\n        ll: 6,\r\n        rl: 6,\r\n        // Body Translation\r\n        translateBodyY: 0.01,\r\n      },\r\n    },\r\n    {\r\n      index: 100,\r\n      position: {\r\n        // Moving Shoulder\r\n        ls: -15,\r\n        rs: -15,\r\n        // Moving Arm\r\n        la: -60,\r\n        ra: -60,\r\n        // Moving Hips\r\n        rh: 0,\r\n        lh: 0,\r\n        // Moving Leg\r\n        ll: 0,\r\n        rl: 0,\r\n        // Body Translation\r\n        translateBodyY: 0,\r\n      },\r\n    },\r\n  ],\r\n  duration: 2.5,\r\n};\r\n\r\nclass JumpMirrorManAnimation extends MirrorManAnimation {\r\n  constructor(speed: number = 1) {\r\n    super(animation.keyframes, animation.duration / speed);\r\n  }\r\n}\r\n\r\nexport default JumpMirrorManAnimation;\r\n","import MirrorManAnimation from \"./mirrormanAnimation\";\r\n\r\nconst animation = {\r\n  keyframes: [\r\n    {\r\n      index: 0,\r\n      position: {\r\n        // Moving Head\r\n        head: 0,\r\n        // Moving Shoulder\r\n        rs: 0,\r\n        ls: 0,\r\n        // Moving Hand\r\n        ra: 0,\r\n        la: 0,\r\n        // Moving Leg\r\n        rl: 0,\r\n        ll: 0,\r\n        // Moving Hip\r\n        rh: 0,\r\n        lh: 0,\r\n      },\r\n    },\r\n    {\r\n      index: 25,\r\n      position: {\r\n        // Moving Head\r\n        head: 15,\r\n        // Moving Shoulder\r\n        rs: -15,\r\n        ls: 15,\r\n        // Moving Hand\r\n        ra: -60,\r\n        la: -30,\r\n        // Moving Leg\r\n        rl: 30,\r\n        ll: 0,\r\n        // Moving Hip\r\n        rh: 30,\r\n        lh: -30,\r\n      },\r\n    },\r\n    {\r\n      index: 50,\r\n      position: {\r\n        // Moving Head\r\n        head: 0,\r\n        // Moving Shoulder\r\n        rs: 0,\r\n        ls: 0,\r\n        // Moving Hand\r\n        ra: 0,\r\n        la: 0,\r\n        // Moving Leg\r\n        rl: 0,\r\n        ll: 0,\r\n        // Moving Hip\r\n        rh: 0,\r\n        lh: 0,\r\n      },\r\n    },\r\n    {\r\n      index: 75,\r\n      position: {\r\n        // Moving Head\r\n        head: -15,\r\n        // Moving Shoulder\r\n        rs: 15,\r\n        ls: -15,\r\n        // Moving Hand\r\n        ra: -30,\r\n        la: -60,\r\n        // Moving Leg\r\n        rl: 0,\r\n        ll: 30,\r\n        // Moving Hip\r\n        rh: -30,\r\n        lh: 30,\r\n      },\r\n    },\r\n    {\r\n      index: 100,\r\n      position: {\r\n        // Moving Head\r\n        head: 0,\r\n        // Moving Shoulder\r\n        rs: 0,\r\n        ls: 0,\r\n        // Moving Hand\r\n        ra: 0,\r\n        la: 0,\r\n        // Moving Leg\r\n        rl: 0,\r\n        ll: 0,\r\n        // Moving Hip\r\n        rh: 0,\r\n        lh: 0,\r\n      },\r\n    },\r\n  ],\r\n  duration: 5,\r\n};\r\n\r\nclass WalkMirrorManAnimation extends MirrorManAnimation {\r\n  constructor(speed: number = 1) {\r\n    super(animation.keyframes, animation.duration / speed);\r\n  }\r\n}\r\n\r\nexport default WalkMirrorManAnimation;\r\n","import IMirrorManAnimation from \"./animation\";\r\nimport DanceMirrorManAnimation from \"./danceAnimation\";\r\nimport JumpMirrorManAnimation from \"./jumpingAnimation\";\r\nimport WalkMirrorManAnimation from \"./walkingAnimation\";\r\n\r\nexport {\r\n  IMirrorManAnimation,\r\n  DanceMirrorManAnimation,\r\n  JumpMirrorManAnimation,\r\n  WalkMirrorManAnimation,\r\n};\r\n","import Node from \"../../node\";\r\nimport Knight from \"../knight\";\r\nimport IKnightAnimation from \"./animation\";\r\n\r\nconst X = 0;\r\nconst Y = 1;\r\nconst Z = 2;\r\n\r\ntype KeyframesType = { index: number, position: { [key: string]: number } }[];\r\ntype DeltaKeyframesType = { [key: string]: number }[];\r\ntype CallbackMapType = { [key: string]: (arg0: number) => void };\r\ntype TargetMapType = { [key: string]: { part: Node, idx: number } };\r\n\r\nclass KnightAnimation implements IKnightAnimation {\r\n  private _started: boolean;\r\n\r\n  private readonly _keyframes: KeyframesType;\r\n  private _deltaKeyframes: DeltaKeyframesType = [];\r\n  private readonly _duration: number;  // in 1/10 second\r\n  private _callbackMap: CallbackMapType = {};\r\n  private _targetMap: TargetMapType = {};\r\n  private _currKeyframe: number = 0;\r\n\r\n  constructor(keyframes: any, duration: number) {\r\n    this._started = false;\r\n\r\n    this._keyframes = keyframes;\r\n    // input in second, adjust to match the delta which is 1/10 second\r\n    this._duration = duration * 10;\r\n    this.generateDeltaKeyframes();\r\n  }\r\n\r\n  private generateDeltaKeyframes() {\r\n    for (let i = 0; i < this._keyframes.length - 1; i++) {\r\n      const kfFrom = this._keyframes[i];\r\n      const kfTo = this._keyframes[i+1];\r\n      const kfFromKeys = Object.keys(kfFrom.position);\r\n      const kfToKeys = Object.keys(kfTo.position);\r\n\r\n      const deltaKfKeys = kfFromKeys.filter(el => {\r\n        return kfToKeys.indexOf(el) !== -1;\r\n      });\r\n\r\n      let deltaKf: { [key: string]: number } = {};\r\n      for (const k of deltaKfKeys) {\r\n        const deltaPos = kfTo.position[k] - kfFrom.position[k];\r\n        if (deltaPos == 0) continue;\r\n        const deltaT = ((kfTo.index - kfFrom.index) * this._duration) / 100;\r\n        deltaKf[k] = deltaPos / deltaT;\r\n      }\r\n\r\n      this._deltaKeyframes.push(deltaKf);\r\n    }\r\n  }\r\n\r\n  private generateCallbackMap(obj: Knight) {\r\n    this._callbackMap[\"hip\"] = obj.moveHip.bind(obj);\r\n    this._callbackMap[\"chest\"] = obj.moveChest.bind(obj);\r\n    this._callbackMap[\"head\"] = obj.moveHead.bind(obj);\r\n    this._callbackMap[\"luaX\"] = obj.moveLeftUpperArmX.bind(obj);\r\n    this._callbackMap[\"luaY\"] = obj.moveLeftUpperArmY.bind(obj);\r\n    this._callbackMap[\"luaZ\"] = obj.moveLeftUpperArmZ.bind(obj);\r\n    this._callbackMap[\"ruaX\"] = obj.moveRightUpperArmX.bind(obj);\r\n    this._callbackMap[\"ruaY\"] = obj.moveRightUpperArmY.bind(obj);\r\n    this._callbackMap[\"ruaZ\"] = obj.moveRightUpperArmZ.bind(obj);\r\n    this._callbackMap[\"llaBend\"] = obj.bendLeftLowerArm.bind(obj);\r\n    this._callbackMap[\"llaTwist\"] = obj.twistLeftLowerArm.bind(obj);\r\n    this._callbackMap[\"rlaBend\"] = obj.bendRightLowerArm.bind(obj);\r\n    this._callbackMap[\"rlaTwist\"] = obj.twistRightLowerArm.bind(obj);\r\n    this._callbackMap[\"lulX\"] = obj.moveLeftUpperLegX.bind(obj);\r\n    this._callbackMap[\"lulZ\"] = obj.moveLeftUpperLegZ.bind(obj);\r\n    this._callbackMap[\"rulX\"] = obj.moveRightUpperLegX.bind(obj);\r\n    this._callbackMap[\"rulZ\"] = obj.moveRightUpperLegZ.bind(obj);\r\n    this._callbackMap[\"lllBend\"] = obj.bendLeftLowerLeg.bind(obj);\r\n    this._callbackMap[\"rllBend\"] = obj.bendRightLowerLeg.bind(obj);\r\n    this._callbackMap[\"translateHipY\"] = obj.translateHipY.bind(obj);\r\n    this._callbackMap[\"shieldX\"] = obj.moveShieldX.bind(obj);\r\n  }\r\n\r\n  private generateTargetMap(obj: Knight) {\r\n    this._targetMap[\"hip\"] = { part: obj.hip, idx: Y };\r\n    this._targetMap[\"chest\"] = { part: obj.chest, idx: Y };\r\n    this._targetMap[\"head\"] = { part: obj.head, idx: Y };\r\n    this._targetMap[\"luaX\"] = { part: obj.lua, idx: X };\r\n    this._targetMap[\"luaY\"] = { part: obj.lua, idx: Y };\r\n    this._targetMap[\"luaZ\"] = { part: obj.lua, idx: Z };\r\n    this._targetMap[\"ruaX\"] = { part: obj.rua, idx: X };\r\n    this._targetMap[\"ruaY\"] = { part: obj.rua, idx: Y };\r\n    this._targetMap[\"ruaZ\"] = { part: obj.rua, idx: Z };\r\n    this._targetMap[\"llaBend\"] = { part: obj.lla, idx: X };\r\n    this._targetMap[\"llaTwist\"] = { part: obj.lla, idx: Y };\r\n    this._targetMap[\"rlaBend\"] = { part: obj.rla, idx: X };\r\n    this._targetMap[\"rlaTwist\"] = { part: obj.rla, idx: Y };\r\n    this._targetMap[\"lulX\"] = { part: obj.lul, idx: X };\r\n    this._targetMap[\"lulZ\"] = { part: obj.lul, idx: Z };\r\n    this._targetMap[\"rulX\"] = { part: obj.rul, idx: X };\r\n    this._targetMap[\"rulZ\"] = { part: obj.rul, idx: Z };\r\n    this._targetMap[\"lllBend\"] = { part: obj.lll, idx: X };\r\n    this._targetMap[\"rllBend\"] = { part: obj.rll, idx: X };\r\n    this._targetMap[\"translateHipY\"] = { part: obj.hip, idx: Y };\r\n    this._targetMap[\"shieldX\"] = { part: obj.shield, idx: X };\r\n  }\r\n\r\n  public doAnimation(delta: number, obj: Knight) {\r\n    if (this._keyframes.length <= 1) return;\r\n\r\n    // Reset for first time\r\n    this.validateAndReset(obj);\r\n\r\n    // Run the keyframes\r\n    let doIncrementKf = false;\r\n    const deltaKf = this._deltaKeyframes[this._currKeyframe] || {};\r\n    for (const k in deltaKf) {\r\n      const target = this._targetMap[k];\r\n      const callback = this._callbackMap[k];\r\n      if (!target || !callback) continue;\r\n\r\n      let newVal;\r\n      if (k == \"translateHipY\") {\r\n        const translationPoint = target.part.getTransformation(\"translate\");\r\n        const currPos = translationPoint[target.idx];\r\n        const newPos = newVal = currPos + delta * deltaKf[k];\r\n        callback(newPos);\r\n      } else {\r\n        const rotationPoint = target.part.getTransformation(\"rotate\");\r\n        const currRot = rotationPoint[target.idx];\r\n        const newRot = newVal = currRot + delta * deltaKf[k];\r\n        callback(newRot);\r\n      }\r\n\r\n      // Check any movement limit\r\n      if (!doIncrementKf) {\r\n        if (deltaKf[k] < 0 && newVal <= this._keyframes[this._currKeyframe+1].position[k]) {\r\n          doIncrementKf = true;\r\n        } else if (deltaKf[k] > 0 && newVal >= this._keyframes[this._currKeyframe+1].position[k]) {\r\n          doIncrementKf = true;\r\n        } else if (deltaKf[k] == 0) {\r\n          throw \"KnightAnimation.doAnimation: should not be here\";\r\n        }\r\n      }\r\n    }\r\n\r\n    if (doIncrementKf) {\r\n      this._currKeyframe = (this._currKeyframe + 1) % this._deltaKeyframes.length;\r\n      // Fix position\r\n      const targetPos = this._keyframes[this._currKeyframe].position;\r\n      for (const k in targetPos) {\r\n        if (this._callbackMap[k])\r\n          this._callbackMap[k](targetPos[k]);\r\n      }\r\n    }\r\n  }\r\n\r\n  private validateAndReset(obj: Knight) {\r\n    if (!this._started) {\r\n      // Generate callback and target map\r\n      this.generateCallbackMap(obj);\r\n      this.generateTargetMap(obj);\r\n\r\n      // Reset object\r\n      // At this point keyframes length is > 1\r\n      const initialPos = this._keyframes[0].position;\r\n      for (const k in initialPos) {\r\n        if (this._callbackMap[k])\r\n          this._callbackMap[k](initialPos[k]);\r\n      }\r\n\r\n      this._started = !this._started;\r\n    }\r\n  }\r\n}\r\n\r\nexport default KnightAnimation;\r\n","import KnightAnimation from \"./knightAnimation\";\r\n\r\nconst animation = {\r\n  keyframes: [\r\n    {\r\n      index: 0,\r\n      position: {\r\n        // Raise shield\r\n        luaY: 0,\r\n        luaZ: 0,\r\n        llaBend: 0,\r\n        llaTwist: 0,\r\n        // Raise sword\r\n        ruaX: 0,\r\n        ruaZ: 0,\r\n        rlaBend: 0,\r\n        rlaTwist: 0,\r\n        // Ready leg stance\r\n        lulX: 0,\r\n        rulX: 0,\r\n        lllBend: 0,\r\n        rllBend: 0,\r\n        // Search around\r\n        head: 0,\r\n        chest: 0,\r\n      }\r\n    },\r\n    {\r\n      index: 10,\r\n      position: {\r\n        // Raise shield\r\n        luaY: -25,\r\n        luaZ: 45,\r\n        llaBend: -60,\r\n        llaTwist: 45,\r\n        // Raise sword\r\n        ruaX: 0,\r\n        ruaZ: 0,\r\n        rlaBend: 0,\r\n        rlaTwist: 0,\r\n        // Ready leg stance\r\n        lulX: -3,\r\n        rulX: -3,\r\n        lllBend: 6,\r\n        rllBend: 6,\r\n        // Search around\r\n        head: 0,\r\n        chest: 0,\r\n      }\r\n    },\r\n    {\r\n      index: 20,\r\n      position: {\r\n        // Raise shield\r\n        luaY: -40,\r\n        luaZ: 80,\r\n        llaBend: -100,\r\n        llaTwist: 80,\r\n        // Raise sword\r\n        ruaX: 0,\r\n        ruaZ: -24,\r\n        rlaBend: -24,\r\n        rlaTwist: 15,\r\n        // Ready leg stance\r\n        lulX: -6,\r\n        rulX: -6,\r\n        lllBend: 12,\r\n        rllBend: 12,\r\n        // Search around\r\n        head: 0,\r\n        chest: 0,\r\n      }\r\n    },\r\n    {\r\n      index: 30,\r\n      position: {\r\n        // Raise shield\r\n        luaY: -45,\r\n        luaZ: 90,\r\n        llaBend: -117,\r\n        llaTwist: 90,\r\n        // Raise sword\r\n        ruaX: -102,\r\n        ruaZ: -8,\r\n        rlaBend: -46,\r\n        rlaTwist: 15,\r\n        // Ready leg stance\r\n        lulX: -10,\r\n        rulX: -10,\r\n        lllBend: 20,\r\n        rllBend: 20,\r\n        // Search around\r\n        head: 0,\r\n        chest: 0,\r\n      }\r\n    },\r\n    {\r\n      index: 40,\r\n      position: {\r\n        // Raise shield\r\n        luaY: -45,\r\n        luaZ: 90,\r\n        llaBend: -117,\r\n        llaTwist: 90,\r\n        // Raise sword\r\n        ruaX: -102,\r\n        ruaZ: -8,\r\n        rlaBend: -46,\r\n        rlaTwist: 15,\r\n        // Ready leg stance\r\n        lulX: -10,\r\n        rulX: -10,\r\n        lllBend: 20,\r\n        rllBend: 20,\r\n        // Search around\r\n        head: 30,\r\n        chest: 30,\r\n      }\r\n    },\r\n    {\r\n      index: 60,\r\n      position: {\r\n        // Raise shield\r\n        luaY: -45,\r\n        luaZ: 90,\r\n        llaBend: -117,\r\n        llaTwist: 90,\r\n        // Raise sword\r\n        ruaX: -102,\r\n        ruaZ: -8,\r\n        rlaBend: -46,\r\n        rlaTwist: 15,\r\n        // Ready leg stance\r\n        lulX: -10,\r\n        rulX: -10,\r\n        lllBend: 20,\r\n        rllBend: 20,\r\n        // Search around\r\n        head: -30,\r\n        chest: -30,\r\n      }\r\n    },\r\n    {\r\n      index: 70,\r\n      position: {\r\n        // Raise shield\r\n        luaY: -45,\r\n        luaZ: 90,\r\n        llaBend: -117,\r\n        llaTwist: 90,\r\n        // Raise sword\r\n        ruaX: -102,\r\n        ruaZ: -8,\r\n        rlaBend: -46,\r\n        rlaTwist: 15,\r\n        // Ready leg stance\r\n        lulX: -10,\r\n        rulX: -10,\r\n        lllBend: 20,\r\n        rllBend: 20,\r\n        // Search around\r\n        head: 0,\r\n        chest: 0,\r\n      }\r\n    },\r\n    {\r\n      index: 100,\r\n      position: {\r\n        // Raise shield\r\n        luaY: 0,\r\n        luaZ: 0,\r\n        llaBend: 0,\r\n        llaTwist: 0,\r\n        // Raise sword\r\n        ruaX: 0,\r\n        ruaZ: 0,\r\n        rlaBend: 0,\r\n        rlaTwist: 0,\r\n        // Ready leg stance\r\n        lulX: 0,\r\n        rulX: 0,\r\n        lllBend: 0,\r\n        rllBend: 0,\r\n        // Search around\r\n        head: 0,\r\n        chest: 0,\r\n      }\r\n    },\r\n  ],\r\n  duration: 4\r\n}\r\n\r\nclass OnGuardKnightAnimation extends KnightAnimation {\r\n  constructor(speed: number = 1) {\r\n    super(animation.keyframes, animation.duration / speed);\r\n  }\r\n}\r\n\r\nexport default OnGuardKnightAnimation;\r\n","import KnightAnimation from \"./knightAnimation\";\r\n\r\nconst animation = {\r\n  keyframes: [\r\n    {\r\n      index: 0,\r\n      position: {\r\n        // Open shield\r\n        luaX: 0,\r\n        luaY: -65,\r\n        luaZ: 90,\r\n        llaBend: -95,\r\n        llaTwist: 90,\r\n        // Swing sword\r\n        ruaX: 0,\r\n        ruaZ: 0,\r\n        rlaBend: 0,\r\n        rlaTwist: 0,\r\n        // Ready leg stance\r\n        lulX: 0,\r\n        rulX: 0,\r\n        lllBend: 0,\r\n        rllBend: 0,\r\n        // Search around\r\n        head: 0,\r\n        chest: 0,\r\n      }\r\n    },\r\n    {\r\n      index: 40,\r\n      position: {\r\n        // Open shield\r\n        luaX: 0,\r\n        luaY: -65,\r\n        luaZ: 90,\r\n        llaBend: -95,\r\n        llaTwist: 90,\r\n        // Swing sword\r\n        ruaX: -102,\r\n        ruaZ: -8,\r\n        rlaBend: -46,\r\n        rlaTwist: 15,\r\n        // Ready leg stance\r\n        lulX: 0,\r\n        rulX: 0,\r\n        lllBend: 0,\r\n        rllBend: 0,\r\n        // Search around\r\n        head: 0,\r\n        chest: -30,\r\n      }\r\n    },\r\n    {\r\n      index: 48,\r\n      position: {\r\n        // Open shield\r\n        luaX: -40,\r\n        luaY: -45,\r\n        luaZ: 90,\r\n        llaBend: -70,\r\n        llaTwist: 90,\r\n        // Swing sword\r\n        ruaX: -102,\r\n        ruaZ: -8,\r\n        rlaBend: -46,\r\n        rlaTwist: -20,\r\n        // Ready leg stance\r\n        lulX: 0,\r\n        rulX: 0,\r\n        lllBend: 0,\r\n        rllBend: 0,\r\n        // Search around\r\n        head: 0,\r\n        chest: -20,\r\n      }\r\n    },\r\n    {\r\n      index: 70,\r\n      position: {\r\n        // Open shield\r\n        luaX: -40,\r\n        luaY: -45,\r\n        luaZ: 90,\r\n        llaBend: -70,\r\n        llaTwist: 90,\r\n        // Swing sword\r\n        ruaX: 0,\r\n        ruaZ: -8,\r\n        rlaBend: -10,\r\n        rlaTwist: -20,\r\n        // Ready leg stance\r\n        lulX: -12,\r\n        rulX: -12,\r\n        lllBend: 24,\r\n        rllBend: 24,\r\n        // Search around\r\n        head: 0,\r\n        chest: 40,\r\n      }\r\n    },\r\n    {\r\n      index: 100,\r\n      position: {\r\n        // Open shield\r\n        luaX: 0,\r\n        luaY: -65,\r\n        luaZ: 90,\r\n        llaBend: -95,\r\n        llaTwist: 90,\r\n        // Swing sword\r\n        ruaX: 0,\r\n        ruaZ: 0,\r\n        rlaBend: 0,\r\n        rlaTwist: 0,\r\n        // Ready leg stance\r\n        lulX: 0,\r\n        rulX: 0,\r\n        lllBend: 0,\r\n        rllBend: 0,\r\n        // Search around\r\n        head: 0,\r\n        chest: 0,\r\n      }\r\n    },\r\n  ],\r\n  duration: 1.5\r\n}\r\n\r\nclass SlashKnightAnimation extends KnightAnimation {\r\n  constructor(speed: number = 1) {\r\n    super(animation.keyframes, animation.duration / speed);\r\n  }\r\n}\r\n\r\nexport default SlashKnightAnimation;\r\n","import KnightAnimation from \"./knightAnimation\";\r\n\r\nconst animation = {\r\n  keyframes: [\r\n    // intro\r\n    {\r\n      index: 0,\r\n      position: {\r\n        // Left hand\r\n        luaX: 0,\r\n        luaY: -65,\r\n        luaZ: 90,\r\n        llaBend: -95,\r\n        llaTwist: 90,\r\n        // Right hand\r\n        ruaX: 0,\r\n        ruaZ: 0,\r\n        rlaBend: 0,\r\n        rlaTwist: 0,\r\n        // Leg\r\n        lulX: 0,\r\n        lulZ: 0,\r\n        rulX: 0,\r\n        lllBend: 0,\r\n        rllBend: 0,\r\n        // Main part\r\n        hip: 0,\r\n        translateHipY: 0,\r\n        shieldX: 0,\r\n      }\r\n    },\r\n    {\r\n      index: 5,\r\n      position: {\r\n        // Left hand\r\n        luaX: 0,\r\n        luaY: -65,\r\n        luaZ: 90,\r\n        llaBend: -95,\r\n        llaTwist: 90,\r\n        // Right hand\r\n        ruaX: 0,\r\n        ruaZ: 0,\r\n        rlaBend: 0,\r\n        rlaTwist: 0,\r\n        // Leg\r\n        lulX: -25,\r\n        lulZ: 0,\r\n        rulX: -25,\r\n        lllBend: 45,\r\n        rllBend: 45,\r\n        // Main part\r\n        hip: 0,\r\n        translateHipY: -0.05,\r\n        shieldX: 0,\r\n      }\r\n    },\r\n    {\r\n      index: 10,\r\n      position: {\r\n        // Left hand\r\n        luaX: 0,\r\n        luaY: -65,\r\n        luaZ: 90,\r\n        llaBend: -95,\r\n        llaTwist: 90,\r\n        // Right hand\r\n        ruaX: 0,\r\n        ruaZ: 0,\r\n        rlaBend: 0,\r\n        rlaTwist: 0,\r\n        // Leg\r\n        lulX: -15,\r\n        lulZ: 0,\r\n        rulX: 0,\r\n        lllBend: 30,\r\n        rllBend: 0,\r\n        // Main part\r\n        hip: 0,\r\n        translateHipY: 0,\r\n        shieldX: 0,\r\n      }\r\n    },\r\n    // 0 - 90\r\n    {\r\n      index: 15,\r\n      position: {\r\n        // Left hand\r\n        luaX: -40,\r\n        luaY: -45,\r\n        luaZ: 90,\r\n        llaBend: -70,\r\n        llaTwist: 90,\r\n        // Right hand\r\n        ruaX: -102,\r\n        ruaZ: -8,\r\n        rlaBend: -46,\r\n        rlaTwist: -20,\r\n        // Leg\r\n        lulX: -7.5,\r\n        lulZ: -10,\r\n        rulX: -80,\r\n        lllBend: 15,\r\n        rllBend: 0,\r\n        // Main part\r\n        hip: 22.5,\r\n        translateHipY: 0.1,\r\n        shieldX: 90,\r\n      }\r\n    },\r\n    {\r\n      index: 20,\r\n      position: {\r\n        // Left hand\r\n        luaX: -40,\r\n        luaY: -45,\r\n        luaZ: 90,\r\n        llaBend: -70,\r\n        llaTwist: 90,\r\n        // Right hand\r\n        ruaX: -102,\r\n        ruaZ: -8,\r\n        rlaBend: -46,\r\n        rlaTwist: -20,\r\n        // Leg\r\n        lulX: 0,\r\n        lulZ: -10,\r\n        rulX: -80,\r\n        lllBend: 0,\r\n        rllBend: 80,\r\n        // Main part\r\n        hip: 45,\r\n        translateHipY: 0.2,\r\n        shieldX: 180,\r\n      }\r\n    },\r\n    {\r\n      index: 25,\r\n      position: {\r\n        // Left hand\r\n        luaX: -40,\r\n        luaY: -45,\r\n        luaZ: 90,\r\n        llaBend: -70,\r\n        llaTwist: 90,\r\n        // Right hand\r\n        ruaX: -102,\r\n        ruaZ: -8,\r\n        rlaBend: -46,\r\n        rlaTwist: -20,\r\n        // Leg\r\n        lulX: -7.5,\r\n        lulZ: -10,\r\n        rulX: -80,\r\n        lllBend: 15,\r\n        rllBend: 0,\r\n        // Main part\r\n        hip: 67.5,\r\n        translateHipY: 0.1,\r\n        shieldX: 270,\r\n      }\r\n    },\r\n    {\r\n      index: 30,\r\n      position: {\r\n        // Left hand\r\n        luaX: -40,\r\n        luaY: -45,\r\n        luaZ: 90,\r\n        llaBend: -70,\r\n        llaTwist: 90,\r\n        // Right hand\r\n        ruaX: -102,\r\n        ruaZ: -8,\r\n        rlaBend: -46,\r\n        rlaTwist: -20,\r\n        // Leg\r\n        lulX: -15,\r\n        lulZ: -10,\r\n        rulX: -80,\r\n        lllBend: 30,\r\n        rllBend: 80,\r\n        // Main part\r\n        hip: 90,\r\n        translateHipY: 0,\r\n        shieldX: 360,\r\n      }\r\n    },\r\n    {\r\n      index: 30.001,\r\n      position: {\r\n        // Left hand\r\n        luaX: -40,\r\n        luaY: -45,\r\n        luaZ: 90,\r\n        llaBend: -70,\r\n        llaTwist: 90,\r\n        // Right hand\r\n        ruaX: -102,\r\n        ruaZ: -8,\r\n        rlaBend: -46,\r\n        rlaTwist: -20,\r\n        // Leg\r\n        lulX: -15,\r\n        lulZ: -10,\r\n        rulX: -80,\r\n        lllBend: 30,\r\n        rllBend: 80,\r\n        // Main part\r\n        hip: 90,\r\n        translateHipY: 0,\r\n        shieldX: 0,\r\n      }\r\n    },\r\n    // 90 - 180\r\n    {\r\n      index: 35,\r\n      position: {\r\n        // Left hand\r\n        luaX: -40,\r\n        luaY: -45,\r\n        luaZ: 90,\r\n        llaBend: -70,\r\n        llaTwist: 90,\r\n        // Right hand\r\n        ruaX: -102,\r\n        ruaZ: -8,\r\n        rlaBend: -46,\r\n        rlaTwist: -20,\r\n        // Leg\r\n        lulX: -7.5,\r\n        lulZ: -10,\r\n        rulX: -80,\r\n        lllBend: 15,\r\n        rllBend: 0,\r\n        // Main part\r\n        hip: 112.5,\r\n        translateHipY: 0.1,\r\n        shieldX: 90,\r\n      }\r\n    },\r\n    {\r\n      index: 40,\r\n      position: {\r\n        // Left hand\r\n        luaX: -40,\r\n        luaY: -45,\r\n        luaZ: 90,\r\n        llaBend: -70,\r\n        llaTwist: 90,\r\n        // Right hand\r\n        ruaX: -102,\r\n        ruaZ: -8,\r\n        rlaBend: -46,\r\n        rlaTwist: -20,\r\n        // Leg\r\n        lulX: 0,\r\n        lulZ: -10,\r\n        rulX: -80,\r\n        lllBend: 0,\r\n        rllBend: 80,\r\n        // Main part\r\n        hip: 135,\r\n        translateHipY: 0.2,\r\n        shieldX: 180,\r\n      }\r\n    },\r\n    {\r\n      index: 45,\r\n      position: {\r\n        // Left hand\r\n        luaX: -40,\r\n        luaY: -45,\r\n        luaZ: 90,\r\n        llaBend: -70,\r\n        llaTwist: 90,\r\n        // Right hand\r\n        ruaX: -102,\r\n        ruaZ: -8,\r\n        rlaBend: -46,\r\n        rlaTwist: -20,\r\n        // Leg\r\n        lulX: -7.5,\r\n        lulZ: -10,\r\n        rulX: -80,\r\n        lllBend: 15,\r\n        rllBend: 0,\r\n        // Main part\r\n        hip: 157.5,\r\n        translateHipY: 0.1,\r\n        shieldX: 270,\r\n      }\r\n    },\r\n    {\r\n      index: 50,\r\n      position: {\r\n        // Left hand\r\n        luaX: -40,\r\n        luaY: -45,\r\n        luaZ: 90,\r\n        llaBend: -70,\r\n        llaTwist: 90,\r\n        // Right hand\r\n        ruaX: -102,\r\n        ruaZ: -8,\r\n        rlaBend: -46,\r\n        rlaTwist: -20,\r\n        // Leg\r\n        lulX: -15,\r\n        lulZ: -10,\r\n        rulX: -80,\r\n        lllBend: 30,\r\n        rllBend: 80,\r\n        // Main part\r\n        hip: 180,\r\n        translateHipY: 0,\r\n        shieldX: 360,\r\n      }\r\n    },\r\n    {\r\n      index: 50.001,\r\n      position: {\r\n        // Left hand\r\n        luaX: -40,\r\n        luaY: -45,\r\n        luaZ: 90,\r\n        llaBend: -70,\r\n        llaTwist: 90,\r\n        // Right hand\r\n        ruaX: -102,\r\n        ruaZ: -8,\r\n        rlaBend: -46,\r\n        rlaTwist: -20,\r\n        // Leg\r\n        lulX: -15,\r\n        lulZ: -10,\r\n        rulX: -80,\r\n        lllBend: 30,\r\n        rllBend: 80,\r\n        // Main part\r\n        hip: 180,\r\n        translateHipY: 0,\r\n        shieldX: 0,\r\n      }\r\n    },\r\n    // 180 - 270\r\n    {\r\n      index: 55,\r\n      position: {\r\n        // Left hand\r\n        luaX: -40,\r\n        luaY: -45,\r\n        luaZ: 90,\r\n        llaBend: -70,\r\n        llaTwist: 90,\r\n        // Right hand\r\n        ruaX: -102,\r\n        ruaZ: -8,\r\n        rlaBend: -46,\r\n        rlaTwist: -20,\r\n        // Leg\r\n        lulX: -7.5,\r\n        lulZ: -10,\r\n        rulX: -80,\r\n        lllBend: 15,\r\n        rllBend: 0,\r\n        // Main part\r\n        hip: 202.5,\r\n        translateHipY: 0.1,\r\n        shieldX: 90,\r\n      }\r\n    },\r\n    {\r\n      index: 60,\r\n      position: {\r\n        // Left hand\r\n        luaX: -40,\r\n        luaY: -45,\r\n        luaZ: 90,\r\n        llaBend: -70,\r\n        llaTwist: 90,\r\n        // Right hand\r\n        ruaX: -102,\r\n        ruaZ: -8,\r\n        rlaBend: -46,\r\n        rlaTwist: -20,\r\n        // Leg\r\n        lulX: 0,\r\n        lulZ: -10,\r\n        rulX: -80,\r\n        lllBend: 0,\r\n        rllBend: 80,\r\n        // Main part\r\n        hip: 225,\r\n        translateHipY: 0.2,\r\n        shieldX: 180,\r\n      }\r\n    },\r\n    {\r\n      index: 65,\r\n      position: {\r\n        // Left hand\r\n        luaX: -40,\r\n        luaY: -45,\r\n        luaZ: 90,\r\n        llaBend: -70,\r\n        llaTwist: 90,\r\n        // Right hand\r\n        ruaX: -102,\r\n        ruaZ: -8,\r\n        rlaBend: -46,\r\n        rlaTwist: -20,\r\n        // Leg\r\n        lulX: -7.5,\r\n        lulZ: -10,\r\n        rulX: -80,\r\n        lllBend: 15,\r\n        rllBend: 0,\r\n        // Main part\r\n        hip: 247.5,\r\n        translateHipY: 0.1,\r\n        shieldX: 270,\r\n      }\r\n    },\r\n    {\r\n      index: 70,\r\n      position: {\r\n        // Left hand\r\n        luaX: -40,\r\n        luaY: -45,\r\n        luaZ: 90,\r\n        llaBend: -70,\r\n        llaTwist: 90,\r\n        // Right hand\r\n        ruaX: -102,\r\n        ruaZ: -8,\r\n        rlaBend: -46,\r\n        rlaTwist: -20,\r\n        // Leg\r\n        lulX: -15,\r\n        lulZ: -10,\r\n        rulX: -80,\r\n        lllBend: 30,\r\n        rllBend: 80,\r\n        // Main part\r\n        hip: 270,\r\n        translateHipY: 0,\r\n        shieldX: 360,\r\n      }\r\n    },\r\n    {\r\n      index: 70.001,\r\n      position: {\r\n        // Left hand\r\n        luaX: -40,\r\n        luaY: -45,\r\n        luaZ: 90,\r\n        llaBend: -70,\r\n        llaTwist: 90,\r\n        // Right hand\r\n        ruaX: -102,\r\n        ruaZ: -8,\r\n        rlaBend: -46,\r\n        rlaTwist: -20,\r\n        // Leg\r\n        lulX: -15,\r\n        lulZ: -10,\r\n        rulX: -80,\r\n        lllBend: 30,\r\n        rllBend: 80,\r\n        // Main part\r\n        hip: 270,\r\n        translateHipY: 0,\r\n        shieldX: 0,\r\n      }\r\n    },\r\n    // 270 - 360\r\n    {\r\n      index: 75,\r\n      position: {\r\n        // Left hand\r\n        luaX: -40,\r\n        luaY: -45,\r\n        luaZ: 90,\r\n        llaBend: -70,\r\n        llaTwist: 90,\r\n        // Right hand\r\n        ruaX: -102,\r\n        ruaZ: -8,\r\n        rlaBend: -46,\r\n        rlaTwist: -20,\r\n        // Leg\r\n        lulX: -7.5,\r\n        lulZ: -10,\r\n        rulX: -80,\r\n        lllBend: 15,\r\n        rllBend: 0,\r\n        // Main part\r\n        hip: 292.5,\r\n        translateHipY: 0.1,\r\n        shieldX: 90,\r\n      }\r\n    },\r\n    {\r\n      index: 80,\r\n      position: {\r\n        // Left hand\r\n        luaX: -40,\r\n        luaY: -45,\r\n        luaZ: 90,\r\n        llaBend: -70,\r\n        llaTwist: 90,\r\n        // Right hand\r\n        ruaX: -102,\r\n        ruaZ: -8,\r\n        rlaBend: -46,\r\n        rlaTwist: -20,\r\n        // Leg\r\n        lulX: 0,\r\n        lulZ: -10,\r\n        rulX: -80,\r\n        lllBend: 0,\r\n        rllBend: 80,\r\n        // Main part\r\n        hip: 315,\r\n        translateHipY: 0.2,\r\n        shieldX: 180,\r\n      }\r\n    },\r\n    {\r\n      index: 85,\r\n      position: {\r\n        // Left hand\r\n        luaX: -40,\r\n        luaY: -45,\r\n        luaZ: 90,\r\n        llaBend: -70,\r\n        llaTwist: 90,\r\n        // Right hand\r\n        ruaX: -102,\r\n        ruaZ: -8,\r\n        rlaBend: -46,\r\n        rlaTwist: -20,\r\n        // Leg\r\n        lulX: -7.5,\r\n        lulZ: -10,\r\n        rulX: -80,\r\n        lllBend: 15,\r\n        rllBend: 0,\r\n        // Main part\r\n        hip: 337.5,\r\n        translateHipY: 0.1,\r\n        shieldX: 270,\r\n      }\r\n    },\r\n    {\r\n      index: 90,\r\n      position: {\r\n        // Left hand\r\n        luaX: -40,\r\n        luaY: -45,\r\n        luaZ: 90,\r\n        llaBend: -70,\r\n        llaTwist: 90,\r\n        // Right hand\r\n        ruaX: 0,\r\n        ruaZ: 0,\r\n        rlaBend: 0,\r\n        rlaTwist: 0,\r\n        // Leg\r\n        lulX: -15,\r\n        lulZ: 0,\r\n        rulX: 0,\r\n        lllBend: 30,\r\n        rllBend: 0,\r\n        // Main part\r\n        hip: 360,\r\n        translateHipY: 0,\r\n        shieldX: 360,\r\n      }\r\n    },\r\n    {\r\n      index: 90.001,\r\n      position: {\r\n        // Left hand\r\n        luaX: -40,\r\n        luaY: -45,\r\n        luaZ: 90,\r\n        llaBend: -70,\r\n        llaTwist: 90,\r\n        // Right hand\r\n        ruaX: 0,\r\n        ruaZ: 0,\r\n        rlaBend: 0,\r\n        rlaTwist: 0,\r\n        // Leg\r\n        lulX: -15,\r\n        lulZ: 0,\r\n        rulX: 0,\r\n        lllBend: 30,\r\n        rllBend: 0,\r\n        // Main part\r\n        hip: 360,\r\n        translateHipY: 0,\r\n        shieldX: 0,\r\n      }\r\n    },\r\n    // outro\r\n    {\r\n      index: 95,\r\n      position: {\r\n        // Left hand\r\n        luaX: 0,\r\n        luaY: -65,\r\n        luaZ: 90,\r\n        llaBend: -95,\r\n        llaTwist: 90,\r\n        // Right hand\r\n        ruaX: 0,\r\n        ruaZ: 0,\r\n        rlaBend: 0,\r\n        rlaTwist: 0,\r\n        // Leg\r\n        lulX: -25,\r\n        lulZ: 0,\r\n        rulX: -25,\r\n        lllBend: 45,\r\n        rllBend: 45,\r\n        // Main part\r\n        hip: 360,\r\n        translateHipY: -0.05,\r\n        shieldX: 0,\r\n      }\r\n    },\r\n    {\r\n      index: 100,\r\n      position: {\r\n        // Left hand\r\n        luaX: 0,\r\n        luaY: -65,\r\n        luaZ: 90,\r\n        llaBend: -95,\r\n        llaTwist: 90,\r\n        // Right hand\r\n        ruaX: 0,\r\n        ruaZ: 0,\r\n        rlaBend: 0,\r\n        rlaTwist: 0,\r\n        // Lower hand\r\n        lulX: 0,\r\n        rulX: 0,\r\n        lllBend: 0,\r\n        rllBend: 0,\r\n        // Main part\r\n        hip: 360,\r\n        translateHipY: 0,\r\n        shieldX: 0,\r\n      }\r\n    },\r\n  ],\r\n  duration: 5\r\n}\r\n\r\nclass DanceKnightAnimation extends KnightAnimation {\r\n  constructor(speed: number = 1) {\r\n    super(animation.keyframes, animation.duration / speed);\r\n  }\r\n}\r\n\r\nexport default DanceKnightAnimation;\r\n","import IKnightAnimation from \"./animation\";\r\nimport OnGuardKnightAnimation from \"./onGuardKnightAnimation\";\r\nimport SlashKnightAnimation from \"./slashKnightAnimation\";\r\nimport DanceKnightAnimation from \"./danceKnightAnimation\";\r\n\r\nexport {\r\n  IKnightAnimation,\r\n  OnGuardKnightAnimation,\r\n  SlashKnightAnimation,\r\n  DanceKnightAnimation,\r\n}\r\n","import Node from \"../../node\";\r\nimport Cow from \"../cow\";\r\nimport ICowAnimation from \"./animation\";\r\n\r\nconst X = 0;\r\nconst Y = 1;\r\nconst Z = 2;\r\n\r\ntype KeyframesType = { index: number, position: { [key: string]: number } }[];\r\ntype DeltaKeyframesType = { [key: string]: number }[];\r\ntype CallbackMapType = { [key: string]: (arg0: number) => void };\r\ntype TargetMapType = { [key: string]: { part: Node, idx: number } };\r\n\r\nclass CowAnimation implements ICowAnimation {\r\n  private _started: boolean;\r\n\r\n  private readonly _keyframes: KeyframesType;\r\n  private _deltaKeyframes: DeltaKeyframesType = [];\r\n  private readonly _duration: number;  // in 1/10 second\r\n  private _callbackMap: CallbackMapType = {};\r\n  private _targetMap: TargetMapType = {};\r\n  private _currKeyframe: number = 0;\r\n\r\n  constructor(keyframes: any, duration: number) {\r\n    this._started = false;\r\n\r\n    this._keyframes = keyframes;\r\n    // input in second, adjust to match the delta which is 1/10 second\r\n    this._duration = duration * 10;\r\n    this.generateDeltaKeyframes();\r\n  }\r\n\r\n  private generateDeltaKeyframes() {\r\n    for (let i = 0; i < this._keyframes.length - 1; i++) {\r\n      const kfFrom = this._keyframes[i];\r\n      const kfTo = this._keyframes[i+1];\r\n      const kfFromKeys = Object.keys(kfFrom.position);\r\n      const kfToKeys = Object.keys(kfTo.position);\r\n\r\n      const deltaKfKeys = kfFromKeys.filter(el => {\r\n        return kfToKeys.indexOf(el) !== -1;\r\n      });\r\n\r\n      let deltaKf: { [key: string]: number } = {};\r\n      for (const k of deltaKfKeys) {\r\n        const deltaPos = kfTo.position[k] - kfFrom.position[k];\r\n        if (deltaPos == 0) continue;\r\n        const deltaT = ((kfTo.index - kfFrom.index) * this._duration) / 100;\r\n        deltaKf[k] = deltaPos / deltaT;\r\n      }\r\n\r\n      this._deltaKeyframes.push(deltaKf);\r\n    }\r\n  }\r\n\r\n  private generateCallbackMap(obj: Cow) {\r\n    this._callbackMap[\"body\"] = obj.moveBody.bind(obj);\r\n    this._callbackMap[\"head\"] = obj.moveHead.bind(obj);\r\n    this._callbackMap[\"lbl\"] = obj.moveLeftBackLeg.bind(obj);\r\n    this._callbackMap[\"lfl\"] = obj.moveLeftFrontLeg.bind(obj);\r\n    this._callbackMap[\"rbl\"] = obj.moveRightBackLeg.bind(obj);\r\n    this._callbackMap[\"rfl\"] = obj.moveRightFrontLeg.bind(obj);\r\n  }\r\n\r\n  private generateTargetMap(obj: Cow) {\r\n    this._targetMap[\"body\"] = { part: obj.body, idx: Y };\r\n    this._targetMap[\"head\"] = { part: obj.head, idx: X };\r\n    this._targetMap[\"lbl\"] = { part: obj.lbl, idx: X };\r\n    this._targetMap[\"lfl\"] = { part: obj.lfl, idx: X };\r\n    this._targetMap[\"rbl\"] = { part: obj.rbl, idx: X };\r\n    this._targetMap[\"rfl\"] = { part: obj.rfl, idx: X };\r\n  }\r\n\r\n  public doAnimation(delta: number, obj: Cow) {\r\n\r\n    if (this._keyframes.length <= 1) return;\r\n    // console.log(\"Lewat sini\");\r\n    // Reset for first time\r\n    this.validateAndReset(obj);\r\n\r\n    // Run the keyframes\r\n    let doIncrementKf = false;\r\n    const deltaKf = this._deltaKeyframes[this._currKeyframe] || {};\r\n    console.log(\"Check delta:\")\r\n    console.log(deltaKf);\r\n    for (const k in deltaKf) {\r\n      const target = this._targetMap[k];\r\n      const callback = this._callbackMap[k];\r\n      if (!target || !callback) continue;\r\n\r\n      let newVal;\r\n      if (k == \"translateHipY\") {\r\n        const translationPoint = target.part.getTransformation(\"translate\");\r\n        const currPos = translationPoint[target.idx];\r\n        const newPos = newVal = currPos + delta * deltaKf[k];\r\n        callback(newPos);\r\n      } else {\r\n        const rotationPoint = target.part.getTransformation(\"rotate\");\r\n        const currRot = rotationPoint[target.idx];\r\n        const newRot = newVal = currRot + delta * deltaKf[k];\r\n        callback(newRot);\r\n      }\r\n\r\n      // Check any movement limit\r\n      if (!doIncrementKf) {\r\n        if (deltaKf[k] < 0 && newVal <= this._keyframes[this._currKeyframe+1].position[k]) {\r\n          doIncrementKf = true;\r\n        } else if (deltaKf[k] > 0 && newVal >= this._keyframes[this._currKeyframe+1].position[k]) {\r\n          doIncrementKf = true;\r\n        } else if (deltaKf[k] == 0) {\r\n          throw \"CowAnimation.doAnimation: should not be here\";\r\n        }\r\n      }\r\n    }\r\n\r\n    if (doIncrementKf) {\r\n      this._currKeyframe = (this._currKeyframe + 1) % this._deltaKeyframes.length;\r\n      // Fix position\r\n      const targetPos = this._keyframes[this._currKeyframe].position;\r\n      for (const k in targetPos) {\r\n        if (this._callbackMap[k])\r\n          this._callbackMap[k](targetPos[k]);\r\n      }\r\n    }\r\n  }\r\n\r\n  private validateAndReset(obj: Cow) {\r\n    if (!this._started) {\r\n      // Generate callback and target map\r\n      this.generateCallbackMap(obj);\r\n      this.generateTargetMap(obj);\r\n\r\n      // Reset object\r\n      // At this point keyframes length is > 1\r\n      const initialPos = this._keyframes[0].position;\r\n      for (const k in initialPos) {\r\n        if (this._callbackMap[k])\r\n          this._callbackMap[k](initialPos[k]);\r\n      }\r\n\r\n      this._started = !this._started;\r\n    }\r\n  }\r\n}\r\n\r\nexport default CowAnimation;\r\n","import CowAnimation from './cowAnimation';\r\n\r\nconst animation = {\r\n  keyframes: [\r\n    {\r\n      index: 0,\r\n      position: {\r\n        head: -5,\r\n        lfl: 10,\r\n        rfl: -10,\r\n        lbl: -10,\r\n        rbl: 10\r\n      },\r\n    },\r\n    // {\r\n    //   index: 25,\r\n    //   position: {\r\n    //     head: 0,\r\n    //     lfl: 0,\r\n    //     rfl: 0,\r\n    //     lbl: 0,\r\n    //     rbl: 0\r\n    //   },\r\n    // },\r\n    {\r\n      index: 50,\r\n      position: {\r\n        head: 5,\r\n        lfl: -10,\r\n        rfl: 10,\r\n        lbl: 10,\r\n        rbl: -10\r\n      },\r\n    },\r\n    // {\r\n    //   index: 75,\r\n    //   position: {\r\n    //     head: 0,\r\n    //     lfl: 0,\r\n    //     rfl: 0,\r\n    //     lbl: 0,\r\n    //     rbl: 0\r\n    //   },\r\n    // },\r\n    {\r\n      index: 100,\r\n      position: {\r\n        head: 0,\r\n        lfl: 0,\r\n        rfl: 0,\r\n        lbl: 0,\r\n        rbl: 0\r\n      },\r\n    },\r\n  ],\r\n  duration: 1.5,\r\n};\r\n\r\nclass WalkCowAnimation extends CowAnimation {\r\n  constructor(speed: number = 1) {\r\n    super(animation.keyframes, animation.duration / speed);\r\n  }\r\n}\r\n\r\nexport default WalkCowAnimation;\r\n","import App from \"./app\";\r\nimport Scene from \"./scene\";\r\nimport MirrorMan, {isMirrorMan} from \"./object/cubeman\";\r\nimport {\r\n  DanceMirrorManAnimation,\r\n  WalkMirrorManAnimation,\r\n  JumpMirrorManAnimation,\r\n} from \"./object/cubeman/animation\";\r\nimport Knight, {isKnight} from \"./object/knight\";\r\nimport {\r\n  OnGuardKnightAnimation,\r\n  SlashKnightAnimation,\r\n  DanceKnightAnimation,\r\n} from \"./object/knight/animation\";\r\nimport Cow, {isCow} from \"./object/cow\";\r\n\r\nimport {ISaveableNode} from \"./object/node\";\r\nimport WalkCowAnimation from \"./object/cow/animation/walkCowAnimation\";\r\n\r\nconst canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\r\n\r\nconst scene = new Scene(canvas);\r\n\r\nconst app = new App(scene);\r\n\r\n// Toggle shading event handler\r\nconst shadingToggle = document.getElementById(\"shading\") as HTMLInputElement;\r\nshadingToggle.addEventListener(\"change\", () => {\r\n  app.toggleShading(shadingToggle.checked);\r\n});\r\n\r\n// Toggle texture event handler\r\nconst textureToggle = document.getElementById(\"texture\") as HTMLInputElement;\r\ntextureToggle.addEventListener(\"change\", () => {\r\n  app.toggleTexture(textureToggle.checked);\r\n});\r\n\r\n// Section document items\r\nconst obj1Section = document.getElementById(\"obj1-section\") as HTMLElement;\r\nconst obj2Section = document.getElementById(\"obj2-section\") as HTMLElement;\r\nconst obj3Section = document.getElementById(\"obj3-section\") as HTMLElement;\r\n\r\nconst animObj1Section = document.getElementById(\"anim-obj1-section\") as HTMLElement;\r\nconst animObj2Section = document.getElementById(\"anim-obj2-section\") as HTMLElement;\r\nconst animObj3Section = document.getElementById(\"anim-obj3-section\") as HTMLElement;\r\n\r\n// Default : Hide all\r\nconst resetDisplay = () => {\r\n  obj1Section.style.display = \"none\";\r\n  obj2Section.style.display = \"none\";\r\n  obj3Section.style.display = \"none\";\r\n\r\n  animObj1Section.style.display = \"none\";\r\n  animObj2Section.style.display = \"none\";\r\n  animObj3Section.style.display = \"none\";\r\n};\r\nresetDisplay();\r\n\r\n// Object selector button event handler\r\nconst mirrorBtn = document.getElementById(\"mirror-man\") as HTMLElement;\r\nmirrorBtn.addEventListener(\"click\", () => {\r\n  resetDisplay();\r\n  obj1Section.style.display = \"block\";\r\n  animObj1Section.style.display = \"block\";\r\n\r\n  // Empty scene first, notes can change logic\r\n  if (scene.objects.length > 0) scene.objects = [];\r\n\r\n  // Build mirror man\r\n  scene.add(MirrorMan.build());\r\n});\r\n\r\nconst knightBtn = document.getElementById(\"knight\") as HTMLElement;\r\nknightBtn.addEventListener(\"click\", () => {\r\n  resetDisplay();\r\n  obj2Section.style.display = \"block\";\r\n  animObj2Section.style.display = \"block\";\r\n\r\n  // Build knight\r\n  scene.add(Knight.build(), true);\r\n});\r\n\r\nconst cowBtn = document.getElementById(\"cow\") as HTMLElement;\r\ncowBtn.addEventListener(\"click\", () => {\r\n  resetDisplay();\r\n  obj3Section.style.display = \"block\";\r\n  animObj3Section.style.display = \"block\";\r\n\r\n  scene.add(Cow.build(), true);\r\n});\r\n\r\n/**\r\n * Mirror Man Section Start\r\n */\r\n\r\nconst obj1ResetBtn = document.getElementById(\"reset-obj1\") as HTMLElement;\r\nobj1ResetBtn.addEventListener(\"click\", () => {\r\n  scene?.objects.forEach((object) => isMirrorMan(object) && object.reset());\r\n\r\n  // Empty scene first, notes can change logic\r\n  if (scene.objects.length > 0) scene.objects = [];\r\n\r\n  // Build mirror man\r\n  scene.add(MirrorMan.build());\r\n});\r\n\r\n/**\r\n * Slider DOM Listener\r\n */\r\n\r\nconst sliders = document.querySelectorAll(\".slider-move\") as NodeListOf<HTMLInputElement>;\r\nconst sliderUsage = (clickable: boolean) => {\r\n  sliders.forEach((slider) => {\r\n    slider.disabled = !clickable;\r\n  });\r\n};\r\n\r\n/**\r\n * Attach Animation Listener\r\n */\r\n\r\nconst obj1DanceClipBtn = document.getElementById(\"animate-obj1-1\") as HTMLElement;\r\nobj1DanceClipBtn.addEventListener(\"click\", () => {\r\n  sliderUsage(false);\r\n  scene.objects.forEach(\r\n    (object) => isMirrorMan(object) && object.setAnimationClip(new DanceMirrorManAnimation(5)),\r\n  );\r\n});\r\n\r\nconst obj1WalkClipBtn = document.getElementById(\"animate-obj1-3\") as HTMLElement;\r\nobj1WalkClipBtn.addEventListener(\"click\", () => {\r\n  sliderUsage(false);\r\n  scene.objects.forEach(\r\n    (object) => isMirrorMan(object) && object.setAnimationClip(new WalkMirrorManAnimation(5)),\r\n  );\r\n});\r\n\r\nconst obj1JumpClipBtn = document.getElementById(\"animate-obj1-4\") as HTMLElement;\r\nobj1JumpClipBtn.addEventListener(\"click\", () => {\r\n  scene?.objects.forEach((object) => isMirrorMan(object) && object.reset());\r\n  sliderUsage(false);\r\n  scene.objects.forEach(\r\n    (object) => isMirrorMan(object) && object.setAnimationClip(new JumpMirrorManAnimation(2)),\r\n  );\r\n});\r\n\r\nconst obj1ResetClipBtn = document.getElementById(\"animate-reset-obj1\") as HTMLElement;\r\nobj1ResetClipBtn.addEventListener(\"click\", () => {\r\n  sliderUsage(true);\r\n  scene.objects.forEach((object) => isMirrorMan(object) && object.setAnimationClip(null));\r\n});\r\n\r\n/**\r\n * Mirror Man Section End\r\n */\r\n\r\n/**\r\n * Knight Section Start\r\n */\r\n\r\nconst obj2ResetBtn = document.getElementById(\"reset-obj2\") as HTMLElement;\r\nobj2ResetBtn.addEventListener(\"click\", () => {\r\n  scene?.objects.forEach((object) => isKnight(object) && object.reset());\r\n\r\n  // Build knight\r\n  scene.add(Knight.build(), true);\r\n});\r\n\r\n/**\r\n * Attach Animation Listener\r\n */\r\n\r\nconst obj2OnGuardClipBtn = document.getElementById(\"animate-obj2-1\") as HTMLElement;\r\nobj2OnGuardClipBtn.addEventListener(\"click\", () => {\r\n  sliderUsage(false);\r\n  scene.objects.forEach(\r\n    (object) => isKnight(object) && object.setAnimationClip(new OnGuardKnightAnimation(1)),\r\n  );\r\n});\r\n\r\nconst obj2SlashClipBtn = document.getElementById(\"animate-obj2-2\") as HTMLElement;\r\nobj2SlashClipBtn.addEventListener(\"click\", () => {\r\n  sliderUsage(false);\r\n  scene.objects.forEach(\r\n    (object) => isKnight(object) && object.setAnimationClip(new SlashKnightAnimation(1)),\r\n  );\r\n});\r\n\r\nconst obj2DanceClipBtn = document.getElementById(\"animate-obj2-3\") as HTMLElement;\r\nobj2DanceClipBtn.addEventListener(\"click\", () => {\r\n  sliderUsage(false);\r\n  scene.objects.forEach(\r\n    (object) => isKnight(object) && object.setAnimationClip(new DanceKnightAnimation(1)),\r\n  );\r\n});\r\n\r\nconst obj2ResetClipBtn = document.getElementById(\"animate-reset-obj2\") as HTMLElement;\r\nobj2ResetClipBtn.addEventListener(\"click\", () => {\r\n  sliderUsage(true);\r\n  scene.objects.forEach((object) => isKnight(object) && object.setAnimationClip(null));\r\n});\r\n\r\n/**\r\n * Knight Section End\r\n */\r\n\r\n/**\r\n * Cow Section Start\r\n */\r\n\r\nconst obj3ResetBtn = document.getElementById(\"reset-obj3\") as HTMLElement;\r\nobj3ResetBtn.addEventListener(\"click\", () => {\r\n  scene?.objects.forEach((object) => isCow(object) && object.reset());\r\n\r\n  // Build cow\r\n  scene.add(Cow.build(), true);\r\n});\r\n\r\nconst obj3WalkClipBtn = document.getElementById(\"animate-obj3-1\") as HTMLElement;\r\nobj3WalkClipBtn.addEventListener(\"click\", () => {\r\n  sliderUsage(false);\r\n  scene.objects.forEach(\r\n    (object) => {\r\n      isCow(object) && object.setAnimationClip(new WalkCowAnimation(1))\r\n    },\r\n  );\r\n});\r\n\r\nconst obj3ResetClipBtn = document.getElementById(\"animate-reset-obj3\") as HTMLElement;\r\nobj3ResetClipBtn.addEventListener(\"click\", () => {\r\n  sliderUsage(true);\r\n  scene.objects.forEach((object) => isCow(object) && object.setAnimationClip(null));\r\n});\r\n\r\n/**\r\n * Cow Section End\r\n */\r\n\r\n\r\n/*\r\n * Camera Reset\r\n */\r\nconst camResetBtn = document.getElementById(\"cam-reset\") as HTMLElement;\r\ncamResetBtn.addEventListener(\"click\", () => {\r\n  app.resetCamera();\r\n});\r\n\r\n/*\r\n * Start App\r\n */\r\napp.start();\r\n\r\n/**\r\n * Setup Save/Load Action Button\r\n */\r\n\r\nlet file: File | null = null;\r\nconst fileInput = document.getElementById(\"file\") as HTMLInputElement;\r\nfileInput.onchange = () => {\r\n  file = fileInput.files?.item(0) ?? null;\r\n};\r\n\r\nconst loadButton = document.getElementById(\"load\") as HTMLButtonElement;\r\nloadButton.onclick = () => {\r\n  if (!file) {\r\n    alert(\"Belum ada file yang dipilih\");\r\n    return;\r\n  }\r\n  const reader = new FileReader();\r\n  reader.addEventListener(\"load\", (event) => {\r\n    const result = event.target?.result;\r\n    if (typeof result === \"string\") {\r\n      const [type, ] = result.split(\"\\n\");\r\n      switch (type) {\r\n        case \"Knight\":\r\n          knightBtn.click();\r\n          scene.add(Knight.build().load(result), true);\r\n          break;\r\n        case \"MirrorMan\" :\r\n          mirrorBtn.click();\r\n          scene.add(MirrorMan.build().load(result), true)\r\n          break;\r\n        case \"Cow\":\r\n          cowBtn.click();\r\n          scene.add(Cow.build().load(result), true)\r\n          break;\r\n        default:\r\n          alert(\"Invalid save file\");\r\n      }\r\n    }\r\n  });\r\n  reader.readAsText(file);\r\n};\r\n\r\nfunction download(filename: string, content: string) {\r\n  var element = document.createElement(\"a\");\r\n  element.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + encodeURIComponent(content));\r\n  element.setAttribute(\"download\", filename);\r\n\r\n  element.style.display = \"none\";\r\n  document.body.appendChild(element);\r\n\r\n  element.click();\r\n\r\n  document.body.removeChild(element);\r\n}\r\n\r\nconst saveButton = document.getElementById(\"save\") as HTMLButtonElement;\r\nsaveButton.onclick = () => {\r\n  const obj: ISaveableNode = scene.objects[0] as unknown as ISaveableNode;\r\n  const data = obj.save();\r\n  if (data) {\r\n    download(`articulate-model-${obj.constructor.name}.json`, data);\r\n  } else {\r\n    alert(\"No shape found.\");\r\n  }\r\n};"]}